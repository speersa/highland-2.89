//
// File generated by /t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64//bin/rootcint at Thu Apr 20 02:11:36 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIt2kdIaspeersdIHighland_InstallsdIHighLAND_2dO89dIhighlandCore_2dO46dILinuxmICentOS_7mIgcc_4dO8mIx86_64dIdictdIG_CorrectionBase
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G_CorrectionBase.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void CorrectionBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CorrectionBase(void *p = 0);
   static void *newArray_CorrectionBase(Long_t size, void *p);
   static void delete_CorrectionBase(void *p);
   static void deleteArray_CorrectionBase(void *p);
   static void destruct_CorrectionBase(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CorrectionBase*)
   {
      ::CorrectionBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CorrectionBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CorrectionBase", ::CorrectionBase::Class_Version(), "/home/t2k/aspeers/Highland_Installs/HighLAND_2.89/highlandCore_2.46/inc/CorrectionBase.hxx", 15,
                  typeid(::CorrectionBase), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CorrectionBase::Dictionary, isa_proxy, 4,
                  sizeof(::CorrectionBase) );
      instance.SetNew(&new_CorrectionBase);
      instance.SetNewArray(&newArray_CorrectionBase);
      instance.SetDelete(&delete_CorrectionBase);
      instance.SetDeleteArray(&deleteArray_CorrectionBase);
      instance.SetDestructor(&destruct_CorrectionBase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CorrectionBase*)
   {
      return GenerateInitInstanceLocal((::CorrectionBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CorrectionBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr CorrectionBase::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CorrectionBase::Class_Name()
{
   return "CorrectionBase";
}

//______________________________________________________________________________
const char *CorrectionBase::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CorrectionBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CorrectionBase::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CorrectionBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CorrectionBase::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CorrectionBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CorrectionBase::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CorrectionBase*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void CorrectionBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class CorrectionBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CorrectionBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(CorrectionBase::Class(),this);
   }
}

//______________________________________________________________________________
void CorrectionBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CorrectionBase.
      TClass *R__cl = ::CorrectionBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_name", (void*)&_name);
      R__insp.InspectMember("string", (void*)&_name, "_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_enabled", &_enabled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_appliedInInput", &_appliedInInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_index", &_index);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CorrectionBase(void *p) {
      return  p ? new(p) ::CorrectionBase : new ::CorrectionBase;
   }
   static void *newArray_CorrectionBase(Long_t nElements, void *p) {
      return p ? new(p) ::CorrectionBase[nElements] : new ::CorrectionBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_CorrectionBase(void *p) {
      delete ((::CorrectionBase*)p);
   }
   static void deleteArray_CorrectionBase(void *p) {
      delete [] ((::CorrectionBase*)p);
   }
   static void destruct_CorrectionBase(void *p) {
      typedef ::CorrectionBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CorrectionBase

/********************************************************
* /home/t2k/aspeers/Highland_Installs/HighLAND_2.89/highlandCore_2.46/Linux-CentOS_7-gcc_4.8-x86_64/dict/G_CorrectionBase.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG_CorrectionBase();

extern "C" void G__set_cpp_environmentG_CorrectionBase() {
  G__cpp_reset_tagtableG_CorrectionBase();
}
#include <new>
extern "C" int G__cpp_dllrevG_CorrectionBase() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CorrectionBase */
static int G__G_CorrectionBase_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CorrectionBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CorrectionBase[n];
     } else {
       p = new((void*) gvp) CorrectionBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CorrectionBase;
     } else {
       p = new((void*) gvp) CorrectionBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CorrectionBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CorrectionBase(*(CorrectionBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) CorrectionBase(*(CorrectionBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CorrectionBase*) G__getstructoffset())->Apply(*(AnaSpillC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const CorrectionBase*) G__getstructoffset())->Name();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CorrectionBase*) G__getstructoffset())->SetName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CorrectionBase*) G__getstructoffset())->Enable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CorrectionBase*) G__getstructoffset())->Disable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CorrectionBase*) G__getstructoffset())->IsEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CorrectionBase*) G__getstructoffset())->SetAppliedInInput((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CorrectionBase*) G__getstructoffset())->IsAppliedInInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CorrectionBase*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CorrectionBase*) G__getstructoffset())->SetIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CorrectionBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CorrectionBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CorrectionBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CorrectionBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CorrectionBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CorrectionBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CorrectionBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CorrectionBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_CorrectionBase_238_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CorrectionBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CorrectionBase G__TCorrectionBase;
static int G__G_CorrectionBase_238_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CorrectionBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CorrectionBase*) (soff+(sizeof(CorrectionBase)*i)))->~G__TCorrectionBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CorrectionBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CorrectionBase*) (soff))->~G__TCorrectionBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G_CorrectionBase_238_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CorrectionBase* dest = (CorrectionBase*) G__getstructoffset();
   *dest = *(CorrectionBase*) libp->para[0].ref;
   const CorrectionBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CorrectionBase */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG_CorrectionBase {
 public:
  G__Sizep2memfuncG_CorrectionBase(): p(&G__Sizep2memfuncG_CorrectionBase::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG_CorrectionBase::*p)();
};

size_t G__get_sizep2memfuncG_CorrectionBase()
{
  G__Sizep2memfuncG_CorrectionBase a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG_CorrectionBase() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase))) {
     CorrectionBase *G__Lderived;
     G__Lderived=(CorrectionBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase),G__get_linked_tagnum(&G__G_CorrectionBaseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG_CorrectionBase() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AnaBunchC*>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CorrectionBase */
static void G__setup_memvarCorrectionBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase));
   { CorrectionBase *p; p=(CorrectionBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_CorrectionBaseLN_string),-1,-1,2,"_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_enabled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_appliedInInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_index=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG_CorrectionBase() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCorrectionBase(void) {
   /* CorrectionBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase));
   G__memfunc_setup("CorrectionBase",1427,G__G_CorrectionBase_238_0_1, 105, G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CorrectionBase",1427,G__G_CorrectionBase_238_0_2, 105, G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase), -1, 0, 1, 1, 1, 0, "u 'CorrectionBase' - 11 - corr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Apply",518,G__G_CorrectionBase_238_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AnaSpillC' - 1 - spill", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Name",385,G__G_CorrectionBase_238_0_5, 117, G__get_linked_tagnum(&G__G_CorrectionBaseLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__G_CorrectionBase_238_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Enable",583,G__G_CorrectionBase_238_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disable",692,G__G_CorrectionBase_238_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnabled",871,G__G_CorrectionBase_238_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAppliedInInput",1714,G__G_CorrectionBase_238_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - ap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAppliedInInput",1602,G__G_CorrectionBase_238_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__G_CorrectionBase_238_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndex",804,G__G_CorrectionBase_238_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G_CorrectionBase_238_0_14, 85, G__get_linked_tagnum(&G__G_CorrectionBaseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CorrectionBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G_CorrectionBase_238_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CorrectionBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G_CorrectionBase_238_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CorrectionBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G_CorrectionBase_238_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CorrectionBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G_CorrectionBaseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G_CorrectionBase_238_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G_CorrectionBase_238_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CorrectionBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G_CorrectionBase_238_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CorrectionBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G_CorrectionBase_238_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CorrectionBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G_CorrectionBase_238_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CorrectionBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CorrectionBase", 1553, G__G_CorrectionBase_238_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G_CorrectionBase_238_0_27, (int) ('u'), G__get_linked_tagnum(&G__G_CorrectionBaseLN_CorrectionBase), -1, 1, 1, 1, 1, 0, "u 'CorrectionBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG_CorrectionBase() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG_CorrectionBase() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG_CorrectionBase() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G_CorrectionBaseLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_AnaSpillC = { "AnaSpillC" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR = { "vector<AnaBunchC*,allocator<AnaBunchC*> >" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AnaBunchC*,allocator<AnaBunchC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_CorrectionBaseLN_CorrectionBase = { "CorrectionBase" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG_CorrectionBase() {
  G__G_CorrectionBaseLN_TClass.tagnum = -1 ;
  G__G_CorrectionBaseLN_TBuffer.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMemberInspector.tagnum = -1 ;
  G__G_CorrectionBaseLN_TObject.tagnum = -1 ;
  G__G_CorrectionBaseLN_string.tagnum = -1 ;
  G__G_CorrectionBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_AnaSpillC.tagnum = -1 ;
  G__G_CorrectionBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_CorrectionBaseLN_CorrectionBase.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG_CorrectionBase() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TClass);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TObject);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_string);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_AnaSpillC);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_CorrectionBaseLN_CorrectionBase),sizeof(CorrectionBase),-1,292608,(char*)NULL,G__setup_memvarCorrectionBase,G__setup_memfuncCorrectionBase);
}
extern "C" void G__cpp_setupG_CorrectionBase(void) {
  G__check_setup_version(30051515,"G__cpp_setupG_CorrectionBase()");
  G__set_cpp_environmentG_CorrectionBase();
  G__cpp_setup_tagtableG_CorrectionBase();

  G__cpp_setup_inheritanceG_CorrectionBase();

  G__cpp_setup_typetableG_CorrectionBase();

  G__cpp_setup_memvarG_CorrectionBase();

  G__cpp_setup_memfuncG_CorrectionBase();
  G__cpp_setup_globalG_CorrectionBase();
  G__cpp_setup_funcG_CorrectionBase();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG_CorrectionBase();
  return;
}
class G__cpp_setup_initG_CorrectionBase {
  public:
    G__cpp_setup_initG_CorrectionBase() { G__add_setup_func("G_CorrectionBase",(G__incsetup)(&G__cpp_setupG_CorrectionBase)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG_CorrectionBase() { G__remove_setup_func("G_CorrectionBase"); }
};
G__cpp_setup_initG_CorrectionBase G__cpp_setup_initializerG_CorrectionBase;

