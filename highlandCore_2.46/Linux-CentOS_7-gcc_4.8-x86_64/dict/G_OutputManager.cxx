//
// File generated by /t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64//bin/rootcint at Thu Apr 20 02:11:37 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIt2kdIaspeersdIHighland_InstallsdIHighLAND_2dO89dIhighlandCore_2dO46dILinuxmICentOS_7mIgcc_4dO8mIx86_64dIdictdIG_OutputManager
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G_OutputManager.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::OutputManager OutputManager;
      #else
      class OutputManager  :  public ::TreeManager {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::OutputManager::enumStandardMicroTrees_OutputManager enumStandardMicroTrees_OutputManager;
         #else
         enum enumStandardMicroTrees_OutputManager  {
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::OutputManager::enumSpecialTrees enumSpecialTrees;
         #else
         enum enumSpecialTrees  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~OutputManager() throw() {};
         bool _apply_root_basket_opt; //
         string _default_docstring; //
         ::DocStringManager* _doc; //
         vector< Double_t > _toyWeights; //
         int _toy_index; //
         int _single_tree_fill; //
         vector< vector< ::string, allocator< ::string >  >  > _tree_vars_all_vars; //
         vector< vector< ::string, allocator< ::string >  >  > _tree_vars_all_counters; //
         vector< vector< int, allocator< int >  >  > _link_var_to_counter; //
         vector< vector< int, allocator< int >  >  > _tree_vars_counter_size; //
         vector< vector< int, allocator< int >  >  > _tree_vars_counter; //
         vector< vector< int, allocator< int >  >  > _tree_vars_int; //
         vector< vector< float, allocator< float >  >  > _tree_vars_float; //
         vector< vector< double, allocator< double >  >  > _tree_vars_double; //
         vector< vector< ::achar, allocator< ::achar >  >  > _tree_vars_char; //
         vector< vector< ::int_vector*, allocator< ::int_vector* >  >  > _tree_vars_int_vector; //
         vector< vector< ::float_vector*, allocator< ::float_vector* >  >  > _tree_vars_float_vector; //
         vector< vector< ::double_vector*, allocator< ::double_vector* >  >  > _tree_vars_double_vector; //
         vector< vector< ::char_vector*, allocator< ::char_vector* >  >  > _tree_vars_char_vector; //
         vector< vector< ::int_matrix*, allocator< ::int_matrix* >  >  > _tree_vars_int_matrix; //
         vector< vector< ::float_matrix*, allocator< ::float_matrix* >  >  > _tree_vars_float_matrix; //
         vector< vector< ::double_matrix*, allocator< ::double_matrix* >  >  > _tree_vars_double_matrix; //
         vector< vector< ::char_matrix*, allocator< ::char_matrix* >  >  > _tree_vars_char_matrix; //
         vector< vector< ::int_3Dmatrix*, allocator< ::int_3Dmatrix* >  >  > _tree_vars_int_3Dmatrix; //
         vector< vector< ::float_3Dmatrix*, allocator< ::float_3Dmatrix* >  >  > _tree_vars_float_3Dmatrix; //
         vector< vector< ::double_3Dmatrix*, allocator< ::double_3Dmatrix* >  >  > _tree_vars_double_3Dmatrix; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_counter; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_int; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_float; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_double; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_char; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_int_vector; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_float_vector; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_double_vector; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_char_vector; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_int_matrix; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_float_matrix; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_double_matrix; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_char_matrix; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_int_3Dmatrix; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_float_3Dmatrix; //
         vector< vector< int, allocator< int >  >  > _tree_vars_used_double_3Dmatrix; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_int; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_float; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_double; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_char; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_int_vector; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_float_vector; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_double_vector; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_char_vector; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_int_matrix; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_float_matrix; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_double_matrix; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_char_matrix; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_int_3Dmatrix; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_float_3Dmatrix; //
         vector< vector< bool, allocator< bool >  >  > _tree_vars_exist_double_3Dmatrix; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void OutputManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void OutputManager_Dictionary();
   static void *new_OutputManager(void *p = 0);
   static void *newArray_OutputManager(Long_t size, void *p);
   static void delete_OutputManager(void *p);
   static void deleteArray_OutputManager(void *p);
   static void destruct_OutputManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OutputManager*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::OutputManager) == sizeof( ::ROOTShadow::Shadow::OutputManager));
      ::OutputManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::OutputManager),0);
      static ::ROOT::TGenericClassInfo 
         instance("OutputManager", "/home/t2k/aspeers/Highland_Installs/HighLAND_2.89/highlandCore_2.46/inc/OutputManager.hxx", 486,
                  typeid(::OutputManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &OutputManager_ShowMembers, &OutputManager_Dictionary, isa_proxy, 4,
                  sizeof(::OutputManager) );
      instance.SetNew(&new_OutputManager);
      instance.SetNewArray(&newArray_OutputManager);
      instance.SetDelete(&delete_OutputManager);
      instance.SetDeleteArray(&deleteArray_OutputManager);
      instance.SetDestructor(&destruct_OutputManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OutputManager*)
   {
      return GenerateInitInstanceLocal((::OutputManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OutputManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void OutputManager_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::OutputManager*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void OutputManager_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class OutputManager.
      typedef ::ROOTShadow::Shadow::OutputManager ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::OutputManager*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_apply_root_basket_opt", &sobj->_apply_root_basket_opt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_default_docstring", (void*)&sobj->_default_docstring);
      R__insp.InspectMember("string", (void*)&sobj->_default_docstring, "_default_docstring.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_doc", &sobj->_doc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_toyWeights", (void*)&sobj->_toyWeights);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->_toyWeights, "_toyWeights.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_toy_index", &sobj->_toy_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_single_tree_fill", &sobj->_single_tree_fill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_all_vars", (void*)&sobj->_tree_vars_all_vars);
      R__insp.InspectMember("vector<std::vector<std::string> >", (void*)&sobj->_tree_vars_all_vars, "_tree_vars_all_vars.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_all_counters", (void*)&sobj->_tree_vars_all_counters);
      R__insp.InspectMember("vector<std::vector<std::string> >", (void*)&sobj->_tree_vars_all_counters, "_tree_vars_all_counters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_link_var_to_counter", (void*)&sobj->_link_var_to_counter);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_link_var_to_counter, "_link_var_to_counter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_counter_size", (void*)&sobj->_tree_vars_counter_size);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_counter_size, "_tree_vars_counter_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_counter", (void*)&sobj->_tree_vars_counter);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_counter, "_tree_vars_counter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_int", (void*)&sobj->_tree_vars_int);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_int, "_tree_vars_int.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_float", (void*)&sobj->_tree_vars_float);
      R__insp.InspectMember("vector<std::vector<Float_t> >", (void*)&sobj->_tree_vars_float, "_tree_vars_float.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_double", (void*)&sobj->_tree_vars_double);
      R__insp.InspectMember("vector<std::vector<Double_t> >", (void*)&sobj->_tree_vars_double, "_tree_vars_double.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_char", (void*)&sobj->_tree_vars_char);
      R__insp.InspectMember("vector<std::vector<achar> >", (void*)&sobj->_tree_vars_char, "_tree_vars_char.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_int_vector", (void*)&sobj->_tree_vars_int_vector);
      R__insp.InspectMember("vector<std::vector<int_vector*> >", (void*)&sobj->_tree_vars_int_vector, "_tree_vars_int_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_float_vector", (void*)&sobj->_tree_vars_float_vector);
      R__insp.InspectMember("vector<std::vector<float_vector*> >", (void*)&sobj->_tree_vars_float_vector, "_tree_vars_float_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_double_vector", (void*)&sobj->_tree_vars_double_vector);
      R__insp.InspectMember("vector<std::vector<double_vector*> >", (void*)&sobj->_tree_vars_double_vector, "_tree_vars_double_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_char_vector", (void*)&sobj->_tree_vars_char_vector);
      R__insp.InspectMember("vector<std::vector<char_vector*> >", (void*)&sobj->_tree_vars_char_vector, "_tree_vars_char_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_int_matrix", (void*)&sobj->_tree_vars_int_matrix);
      R__insp.InspectMember("vector<std::vector<int_matrix*> >", (void*)&sobj->_tree_vars_int_matrix, "_tree_vars_int_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_float_matrix", (void*)&sobj->_tree_vars_float_matrix);
      R__insp.InspectMember("vector<std::vector<float_matrix*> >", (void*)&sobj->_tree_vars_float_matrix, "_tree_vars_float_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_double_matrix", (void*)&sobj->_tree_vars_double_matrix);
      R__insp.InspectMember("vector<std::vector<double_matrix*> >", (void*)&sobj->_tree_vars_double_matrix, "_tree_vars_double_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_char_matrix", (void*)&sobj->_tree_vars_char_matrix);
      R__insp.InspectMember("vector<std::vector<char_matrix*> >", (void*)&sobj->_tree_vars_char_matrix, "_tree_vars_char_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_int_3Dmatrix", (void*)&sobj->_tree_vars_int_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<int_3Dmatrix*> >", (void*)&sobj->_tree_vars_int_3Dmatrix, "_tree_vars_int_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_float_3Dmatrix", (void*)&sobj->_tree_vars_float_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<float_3Dmatrix*> >", (void*)&sobj->_tree_vars_float_3Dmatrix, "_tree_vars_float_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_double_3Dmatrix", (void*)&sobj->_tree_vars_double_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<double_3Dmatrix*> >", (void*)&sobj->_tree_vars_double_3Dmatrix, "_tree_vars_double_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_counter", (void*)&sobj->_tree_vars_used_counter);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_counter, "_tree_vars_used_counter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_int", (void*)&sobj->_tree_vars_used_int);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_int, "_tree_vars_used_int.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_float", (void*)&sobj->_tree_vars_used_float);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_float, "_tree_vars_used_float.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_double", (void*)&sobj->_tree_vars_used_double);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_double, "_tree_vars_used_double.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_char", (void*)&sobj->_tree_vars_used_char);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_char, "_tree_vars_used_char.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_int_vector", (void*)&sobj->_tree_vars_used_int_vector);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_int_vector, "_tree_vars_used_int_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_float_vector", (void*)&sobj->_tree_vars_used_float_vector);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_float_vector, "_tree_vars_used_float_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_double_vector", (void*)&sobj->_tree_vars_used_double_vector);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_double_vector, "_tree_vars_used_double_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_char_vector", (void*)&sobj->_tree_vars_used_char_vector);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_char_vector, "_tree_vars_used_char_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_int_matrix", (void*)&sobj->_tree_vars_used_int_matrix);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_int_matrix, "_tree_vars_used_int_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_float_matrix", (void*)&sobj->_tree_vars_used_float_matrix);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_float_matrix, "_tree_vars_used_float_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_double_matrix", (void*)&sobj->_tree_vars_used_double_matrix);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_double_matrix, "_tree_vars_used_double_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_char_matrix", (void*)&sobj->_tree_vars_used_char_matrix);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_char_matrix, "_tree_vars_used_char_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_int_3Dmatrix", (void*)&sobj->_tree_vars_used_int_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_int_3Dmatrix, "_tree_vars_used_int_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_float_3Dmatrix", (void*)&sobj->_tree_vars_used_float_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_float_3Dmatrix, "_tree_vars_used_float_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_used_double_3Dmatrix", (void*)&sobj->_tree_vars_used_double_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&sobj->_tree_vars_used_double_3Dmatrix, "_tree_vars_used_double_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_int", (void*)&sobj->_tree_vars_exist_int);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_int, "_tree_vars_exist_int.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_float", (void*)&sobj->_tree_vars_exist_float);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_float, "_tree_vars_exist_float.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_double", (void*)&sobj->_tree_vars_exist_double);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_double, "_tree_vars_exist_double.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_char", (void*)&sobj->_tree_vars_exist_char);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_char, "_tree_vars_exist_char.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_int_vector", (void*)&sobj->_tree_vars_exist_int_vector);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_int_vector, "_tree_vars_exist_int_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_float_vector", (void*)&sobj->_tree_vars_exist_float_vector);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_float_vector, "_tree_vars_exist_float_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_double_vector", (void*)&sobj->_tree_vars_exist_double_vector);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_double_vector, "_tree_vars_exist_double_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_char_vector", (void*)&sobj->_tree_vars_exist_char_vector);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_char_vector, "_tree_vars_exist_char_vector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_int_matrix", (void*)&sobj->_tree_vars_exist_int_matrix);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_int_matrix, "_tree_vars_exist_int_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_float_matrix", (void*)&sobj->_tree_vars_exist_float_matrix);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_float_matrix, "_tree_vars_exist_float_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_double_matrix", (void*)&sobj->_tree_vars_exist_double_matrix);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_double_matrix, "_tree_vars_exist_double_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_char_matrix", (void*)&sobj->_tree_vars_exist_char_matrix);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_char_matrix, "_tree_vars_exist_char_matrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_int_3Dmatrix", (void*)&sobj->_tree_vars_exist_int_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_int_3Dmatrix, "_tree_vars_exist_int_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_float_3Dmatrix", (void*)&sobj->_tree_vars_exist_float_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_float_3Dmatrix, "_tree_vars_exist_float_3Dmatrix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tree_vars_exist_double_3Dmatrix", (void*)&sobj->_tree_vars_exist_double_3Dmatrix);
      R__insp.InspectMember("vector<std::vector<Bool_t> >", (void*)&sobj->_tree_vars_exist_double_3Dmatrix, "_tree_vars_exist_double_3Dmatrix.", false);
      R__insp.GenericShowMembers("TreeManager", ( ::TreeManager * )( (::OutputManager*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OutputManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::OutputManager : new ::OutputManager;
   }
   static void *newArray_OutputManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::OutputManager[nElements] : new ::OutputManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_OutputManager(void *p) {
      delete ((::OutputManager*)p);
   }
   static void deleteArray_OutputManager(void *p) {
      delete [] ((::OutputManager*)p);
   }
   static void destruct_OutputManager(void *p) {
      typedef ::OutputManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OutputManager

namespace ROOTDict {
   void vectorlEachargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEachargR_Dictionary();
   static void *new_vectorlEachargR(void *p = 0);
   static void *newArray_vectorlEachargR(Long_t size, void *p);
   static void delete_vectorlEachargR(void *p);
   static void deleteArray_vectorlEachargR(void *p);
   static void destruct_vectorlEachargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<achar>*)
   {
      vector<achar> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<achar>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<achar>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<achar>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEachargR_Dictionary, isa_proxy, 0,
                  sizeof(vector<achar>) );
      instance.SetNew(&new_vectorlEachargR);
      instance.SetNewArray(&newArray_vectorlEachargR);
      instance.SetDelete(&delete_vectorlEachargR);
      instance.SetDeleteArray(&deleteArray_vectorlEachargR);
      instance.SetDestructor(&destruct_vectorlEachargR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<achar> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<achar>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEachargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<achar>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEachargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<achar> : new vector<achar>;
   }
   static void *newArray_vectorlEachargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<achar>[nElements] : new vector<achar>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEachargR(void *p) {
      delete ((vector<achar>*)p);
   }
   static void deleteArray_vectorlEachargR(void *p) {
      delete [] ((vector<achar>*)p);
   }
   static void destruct_vectorlEachargR(void *p) {
      typedef vector<achar> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<achar>

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEchar_matrixmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEchar_matrixmUgR_Dictionary();
   static void *new_vectorlEchar_matrixmUgR(void *p = 0);
   static void *newArray_vectorlEchar_matrixmUgR(Long_t size, void *p);
   static void delete_vectorlEchar_matrixmUgR(void *p);
   static void deleteArray_vectorlEchar_matrixmUgR(void *p);
   static void destruct_vectorlEchar_matrixmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<char_matrix*>*)
   {
      vector<char_matrix*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<char_matrix*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<char_matrix*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<char_matrix*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEchar_matrixmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<char_matrix*>) );
      instance.SetNew(&new_vectorlEchar_matrixmUgR);
      instance.SetNewArray(&newArray_vectorlEchar_matrixmUgR);
      instance.SetDelete(&delete_vectorlEchar_matrixmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEchar_matrixmUgR);
      instance.SetDestructor(&destruct_vectorlEchar_matrixmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<char_matrix*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<char_matrix*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEchar_matrixmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<char_matrix*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEchar_matrixmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char_matrix*> : new vector<char_matrix*>;
   }
   static void *newArray_vectorlEchar_matrixmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char_matrix*>[nElements] : new vector<char_matrix*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEchar_matrixmUgR(void *p) {
      delete ((vector<char_matrix*>*)p);
   }
   static void deleteArray_vectorlEchar_matrixmUgR(void *p) {
      delete [] ((vector<char_matrix*>*)p);
   }
   static void destruct_vectorlEchar_matrixmUgR(void *p) {
      typedef vector<char_matrix*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<char_matrix*>

namespace ROOTDict {
   void vectorlEchar_vectormUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEchar_vectormUgR_Dictionary();
   static void *new_vectorlEchar_vectormUgR(void *p = 0);
   static void *newArray_vectorlEchar_vectormUgR(Long_t size, void *p);
   static void delete_vectorlEchar_vectormUgR(void *p);
   static void deleteArray_vectorlEchar_vectormUgR(void *p);
   static void destruct_vectorlEchar_vectormUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<char_vector*>*)
   {
      vector<char_vector*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<char_vector*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<char_vector*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<char_vector*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEchar_vectormUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<char_vector*>) );
      instance.SetNew(&new_vectorlEchar_vectormUgR);
      instance.SetNewArray(&newArray_vectorlEchar_vectormUgR);
      instance.SetDelete(&delete_vectorlEchar_vectormUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEchar_vectormUgR);
      instance.SetDestructor(&destruct_vectorlEchar_vectormUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<char_vector*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<char_vector*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEchar_vectormUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<char_vector*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEchar_vectormUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char_vector*> : new vector<char_vector*>;
   }
   static void *newArray_vectorlEchar_vectormUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char_vector*>[nElements] : new vector<char_vector*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEchar_vectormUgR(void *p) {
      delete ((vector<char_vector*>*)p);
   }
   static void deleteArray_vectorlEchar_vectormUgR(void *p) {
      delete [] ((vector<char_vector*>*)p);
   }
   static void destruct_vectorlEchar_vectormUgR(void *p) {
      typedef vector<char_vector*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<char_vector*>

namespace ROOTDict {
   void vectorlEchar_vectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEchar_vectorgR_Dictionary();
   static void *new_vectorlEchar_vectorgR(void *p = 0);
   static void *newArray_vectorlEchar_vectorgR(Long_t size, void *p);
   static void delete_vectorlEchar_vectorgR(void *p);
   static void deleteArray_vectorlEchar_vectorgR(void *p);
   static void destruct_vectorlEchar_vectorgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<char_vector>*)
   {
      vector<char_vector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<char_vector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<char_vector>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<char_vector>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEchar_vectorgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<char_vector>) );
      instance.SetNew(&new_vectorlEchar_vectorgR);
      instance.SetNewArray(&newArray_vectorlEchar_vectorgR);
      instance.SetDelete(&delete_vectorlEchar_vectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlEchar_vectorgR);
      instance.SetDestructor(&destruct_vectorlEchar_vectorgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<char_vector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<char_vector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEchar_vectorgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<char_vector>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEchar_vectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char_vector> : new vector<char_vector>;
   }
   static void *newArray_vectorlEchar_vectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char_vector>[nElements] : new vector<char_vector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEchar_vectorgR(void *p) {
      delete ((vector<char_vector>*)p);
   }
   static void deleteArray_vectorlEchar_vectorgR(void *p) {
      delete [] ((vector<char_vector>*)p);
   }
   static void destruct_vectorlEchar_vectorgR(void *p) {
      typedef vector<char_vector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<char_vector>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEdouble_3DmatrixmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdouble_3DmatrixmUgR_Dictionary();
   static void *new_vectorlEdouble_3DmatrixmUgR(void *p = 0);
   static void *newArray_vectorlEdouble_3DmatrixmUgR(Long_t size, void *p);
   static void delete_vectorlEdouble_3DmatrixmUgR(void *p);
   static void deleteArray_vectorlEdouble_3DmatrixmUgR(void *p);
   static void destruct_vectorlEdouble_3DmatrixmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double_3Dmatrix*>*)
   {
      vector<double_3Dmatrix*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double_3Dmatrix*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double_3Dmatrix*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<double_3Dmatrix*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdouble_3DmatrixmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double_3Dmatrix*>) );
      instance.SetNew(&new_vectorlEdouble_3DmatrixmUgR);
      instance.SetNewArray(&newArray_vectorlEdouble_3DmatrixmUgR);
      instance.SetDelete(&delete_vectorlEdouble_3DmatrixmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdouble_3DmatrixmUgR);
      instance.SetDestructor(&destruct_vectorlEdouble_3DmatrixmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double_3Dmatrix*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double_3Dmatrix*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdouble_3DmatrixmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double_3Dmatrix*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdouble_3DmatrixmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double_3Dmatrix*> : new vector<double_3Dmatrix*>;
   }
   static void *newArray_vectorlEdouble_3DmatrixmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double_3Dmatrix*>[nElements] : new vector<double_3Dmatrix*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdouble_3DmatrixmUgR(void *p) {
      delete ((vector<double_3Dmatrix*>*)p);
   }
   static void deleteArray_vectorlEdouble_3DmatrixmUgR(void *p) {
      delete [] ((vector<double_3Dmatrix*>*)p);
   }
   static void destruct_vectorlEdouble_3DmatrixmUgR(void *p) {
      typedef vector<double_3Dmatrix*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double_3Dmatrix*>

namespace ROOTDict {
   void vectorlEdouble_matrixmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdouble_matrixmUgR_Dictionary();
   static void *new_vectorlEdouble_matrixmUgR(void *p = 0);
   static void *newArray_vectorlEdouble_matrixmUgR(Long_t size, void *p);
   static void delete_vectorlEdouble_matrixmUgR(void *p);
   static void deleteArray_vectorlEdouble_matrixmUgR(void *p);
   static void destruct_vectorlEdouble_matrixmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double_matrix*>*)
   {
      vector<double_matrix*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double_matrix*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double_matrix*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<double_matrix*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdouble_matrixmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double_matrix*>) );
      instance.SetNew(&new_vectorlEdouble_matrixmUgR);
      instance.SetNewArray(&newArray_vectorlEdouble_matrixmUgR);
      instance.SetDelete(&delete_vectorlEdouble_matrixmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdouble_matrixmUgR);
      instance.SetDestructor(&destruct_vectorlEdouble_matrixmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double_matrix*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double_matrix*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdouble_matrixmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double_matrix*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdouble_matrixmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double_matrix*> : new vector<double_matrix*>;
   }
   static void *newArray_vectorlEdouble_matrixmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double_matrix*>[nElements] : new vector<double_matrix*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdouble_matrixmUgR(void *p) {
      delete ((vector<double_matrix*>*)p);
   }
   static void deleteArray_vectorlEdouble_matrixmUgR(void *p) {
      delete [] ((vector<double_matrix*>*)p);
   }
   static void destruct_vectorlEdouble_matrixmUgR(void *p) {
      typedef vector<double_matrix*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double_matrix*>

namespace ROOTDict {
   void vectorlEdouble_vectormUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdouble_vectormUgR_Dictionary();
   static void *new_vectorlEdouble_vectormUgR(void *p = 0);
   static void *newArray_vectorlEdouble_vectormUgR(Long_t size, void *p);
   static void delete_vectorlEdouble_vectormUgR(void *p);
   static void deleteArray_vectorlEdouble_vectormUgR(void *p);
   static void destruct_vectorlEdouble_vectormUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double_vector*>*)
   {
      vector<double_vector*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double_vector*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double_vector*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<double_vector*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdouble_vectormUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double_vector*>) );
      instance.SetNew(&new_vectorlEdouble_vectormUgR);
      instance.SetNewArray(&newArray_vectorlEdouble_vectormUgR);
      instance.SetDelete(&delete_vectorlEdouble_vectormUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdouble_vectormUgR);
      instance.SetDestructor(&destruct_vectorlEdouble_vectormUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double_vector*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double_vector*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdouble_vectormUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double_vector*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdouble_vectormUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double_vector*> : new vector<double_vector*>;
   }
   static void *newArray_vectorlEdouble_vectormUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double_vector*>[nElements] : new vector<double_vector*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdouble_vectormUgR(void *p) {
      delete ((vector<double_vector*>*)p);
   }
   static void deleteArray_vectorlEdouble_vectormUgR(void *p) {
      delete [] ((vector<double_vector*>*)p);
   }
   static void destruct_vectorlEdouble_vectormUgR(void *p) {
      typedef vector<double_vector*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double_vector*>

namespace ROOTDict {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float>

namespace ROOTDict {
   void vectorlEfloat_3DmatrixmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloat_3DmatrixmUgR_Dictionary();
   static void *new_vectorlEfloat_3DmatrixmUgR(void *p = 0);
   static void *newArray_vectorlEfloat_3DmatrixmUgR(Long_t size, void *p);
   static void delete_vectorlEfloat_3DmatrixmUgR(void *p);
   static void deleteArray_vectorlEfloat_3DmatrixmUgR(void *p);
   static void destruct_vectorlEfloat_3DmatrixmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float_3Dmatrix*>*)
   {
      vector<float_3Dmatrix*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float_3Dmatrix*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float_3Dmatrix*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<float_3Dmatrix*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloat_3DmatrixmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float_3Dmatrix*>) );
      instance.SetNew(&new_vectorlEfloat_3DmatrixmUgR);
      instance.SetNewArray(&newArray_vectorlEfloat_3DmatrixmUgR);
      instance.SetDelete(&delete_vectorlEfloat_3DmatrixmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloat_3DmatrixmUgR);
      instance.SetDestructor(&destruct_vectorlEfloat_3DmatrixmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float_3Dmatrix*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float_3Dmatrix*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloat_3DmatrixmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float_3Dmatrix*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloat_3DmatrixmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float_3Dmatrix*> : new vector<float_3Dmatrix*>;
   }
   static void *newArray_vectorlEfloat_3DmatrixmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float_3Dmatrix*>[nElements] : new vector<float_3Dmatrix*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloat_3DmatrixmUgR(void *p) {
      delete ((vector<float_3Dmatrix*>*)p);
   }
   static void deleteArray_vectorlEfloat_3DmatrixmUgR(void *p) {
      delete [] ((vector<float_3Dmatrix*>*)p);
   }
   static void destruct_vectorlEfloat_3DmatrixmUgR(void *p) {
      typedef vector<float_3Dmatrix*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float_3Dmatrix*>

namespace ROOTDict {
   void vectorlEfloat_matrixmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloat_matrixmUgR_Dictionary();
   static void *new_vectorlEfloat_matrixmUgR(void *p = 0);
   static void *newArray_vectorlEfloat_matrixmUgR(Long_t size, void *p);
   static void delete_vectorlEfloat_matrixmUgR(void *p);
   static void deleteArray_vectorlEfloat_matrixmUgR(void *p);
   static void destruct_vectorlEfloat_matrixmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float_matrix*>*)
   {
      vector<float_matrix*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float_matrix*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float_matrix*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<float_matrix*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloat_matrixmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float_matrix*>) );
      instance.SetNew(&new_vectorlEfloat_matrixmUgR);
      instance.SetNewArray(&newArray_vectorlEfloat_matrixmUgR);
      instance.SetDelete(&delete_vectorlEfloat_matrixmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloat_matrixmUgR);
      instance.SetDestructor(&destruct_vectorlEfloat_matrixmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float_matrix*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float_matrix*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloat_matrixmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float_matrix*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloat_matrixmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float_matrix*> : new vector<float_matrix*>;
   }
   static void *newArray_vectorlEfloat_matrixmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float_matrix*>[nElements] : new vector<float_matrix*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloat_matrixmUgR(void *p) {
      delete ((vector<float_matrix*>*)p);
   }
   static void deleteArray_vectorlEfloat_matrixmUgR(void *p) {
      delete [] ((vector<float_matrix*>*)p);
   }
   static void destruct_vectorlEfloat_matrixmUgR(void *p) {
      typedef vector<float_matrix*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float_matrix*>

namespace ROOTDict {
   void vectorlEfloat_vectormUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloat_vectormUgR_Dictionary();
   static void *new_vectorlEfloat_vectormUgR(void *p = 0);
   static void *newArray_vectorlEfloat_vectormUgR(Long_t size, void *p);
   static void delete_vectorlEfloat_vectormUgR(void *p);
   static void deleteArray_vectorlEfloat_vectormUgR(void *p);
   static void destruct_vectorlEfloat_vectormUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float_vector*>*)
   {
      vector<float_vector*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float_vector*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float_vector*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<float_vector*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloat_vectormUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float_vector*>) );
      instance.SetNew(&new_vectorlEfloat_vectormUgR);
      instance.SetNewArray(&newArray_vectorlEfloat_vectormUgR);
      instance.SetDelete(&delete_vectorlEfloat_vectormUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloat_vectormUgR);
      instance.SetDestructor(&destruct_vectorlEfloat_vectormUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float_vector*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float_vector*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloat_vectormUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float_vector*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloat_vectormUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float_vector*> : new vector<float_vector*>;
   }
   static void *newArray_vectorlEfloat_vectormUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float_vector*>[nElements] : new vector<float_vector*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloat_vectormUgR(void *p) {
      delete ((vector<float_vector*>*)p);
   }
   static void deleteArray_vectorlEfloat_vectormUgR(void *p) {
      delete [] ((vector<float_vector*>*)p);
   }
   static void destruct_vectorlEfloat_vectormUgR(void *p) {
      typedef vector<float_vector*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float_vector*>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEint_3DmatrixmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEint_3DmatrixmUgR_Dictionary();
   static void *new_vectorlEint_3DmatrixmUgR(void *p = 0);
   static void *newArray_vectorlEint_3DmatrixmUgR(Long_t size, void *p);
   static void delete_vectorlEint_3DmatrixmUgR(void *p);
   static void deleteArray_vectorlEint_3DmatrixmUgR(void *p);
   static void destruct_vectorlEint_3DmatrixmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int_3Dmatrix*>*)
   {
      vector<int_3Dmatrix*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int_3Dmatrix*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int_3Dmatrix*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int_3Dmatrix*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEint_3DmatrixmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int_3Dmatrix*>) );
      instance.SetNew(&new_vectorlEint_3DmatrixmUgR);
      instance.SetNewArray(&newArray_vectorlEint_3DmatrixmUgR);
      instance.SetDelete(&delete_vectorlEint_3DmatrixmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEint_3DmatrixmUgR);
      instance.SetDestructor(&destruct_vectorlEint_3DmatrixmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int_3Dmatrix*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int_3Dmatrix*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEint_3DmatrixmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int_3Dmatrix*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEint_3DmatrixmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int_3Dmatrix*> : new vector<int_3Dmatrix*>;
   }
   static void *newArray_vectorlEint_3DmatrixmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int_3Dmatrix*>[nElements] : new vector<int_3Dmatrix*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEint_3DmatrixmUgR(void *p) {
      delete ((vector<int_3Dmatrix*>*)p);
   }
   static void deleteArray_vectorlEint_3DmatrixmUgR(void *p) {
      delete [] ((vector<int_3Dmatrix*>*)p);
   }
   static void destruct_vectorlEint_3DmatrixmUgR(void *p) {
      typedef vector<int_3Dmatrix*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int_3Dmatrix*>

namespace ROOTDict {
   void vectorlEint_matrixmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEint_matrixmUgR_Dictionary();
   static void *new_vectorlEint_matrixmUgR(void *p = 0);
   static void *newArray_vectorlEint_matrixmUgR(Long_t size, void *p);
   static void delete_vectorlEint_matrixmUgR(void *p);
   static void deleteArray_vectorlEint_matrixmUgR(void *p);
   static void destruct_vectorlEint_matrixmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int_matrix*>*)
   {
      vector<int_matrix*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int_matrix*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int_matrix*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int_matrix*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEint_matrixmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int_matrix*>) );
      instance.SetNew(&new_vectorlEint_matrixmUgR);
      instance.SetNewArray(&newArray_vectorlEint_matrixmUgR);
      instance.SetDelete(&delete_vectorlEint_matrixmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEint_matrixmUgR);
      instance.SetDestructor(&destruct_vectorlEint_matrixmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int_matrix*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int_matrix*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEint_matrixmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int_matrix*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEint_matrixmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int_matrix*> : new vector<int_matrix*>;
   }
   static void *newArray_vectorlEint_matrixmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int_matrix*>[nElements] : new vector<int_matrix*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEint_matrixmUgR(void *p) {
      delete ((vector<int_matrix*>*)p);
   }
   static void deleteArray_vectorlEint_matrixmUgR(void *p) {
      delete [] ((vector<int_matrix*>*)p);
   }
   static void destruct_vectorlEint_matrixmUgR(void *p) {
      typedef vector<int_matrix*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int_matrix*>

namespace ROOTDict {
   void vectorlEint_vectormUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEint_vectormUgR_Dictionary();
   static void *new_vectorlEint_vectormUgR(void *p = 0);
   static void *newArray_vectorlEint_vectormUgR(Long_t size, void *p);
   static void delete_vectorlEint_vectormUgR(void *p);
   static void deleteArray_vectorlEint_vectormUgR(void *p);
   static void destruct_vectorlEint_vectormUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int_vector*>*)
   {
      vector<int_vector*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int_vector*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int_vector*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int_vector*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEint_vectormUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int_vector*>) );
      instance.SetNew(&new_vectorlEint_vectormUgR);
      instance.SetNewArray(&newArray_vectorlEint_vectormUgR);
      instance.SetDelete(&delete_vectorlEint_vectormUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEint_vectormUgR);
      instance.SetDestructor(&destruct_vectorlEint_vectormUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int_vector*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int_vector*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEint_vectormUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int_vector*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEint_vectormUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int_vector*> : new vector<int_vector*>;
   }
   static void *newArray_vectorlEint_vectormUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int_vector*>[nElements] : new vector<int_vector*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEint_vectormUgR(void *p) {
      delete ((vector<int_vector*>*)p);
   }
   static void deleteArray_vectorlEint_vectormUgR(void *p) {
      delete [] ((vector<int_vector*>*)p);
   }
   static void destruct_vectorlEint_vectormUgR(void *p) {
      typedef vector<int_vector*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int_vector*>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

namespace ROOTDict {
   void vectorlEvectorlEachargRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEachargRsPgR_Dictionary();
   static void *new_vectorlEvectorlEachargRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEachargRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEachargRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEachargRsPgR(void *p);
   static void destruct_vectorlEvectorlEachargRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<achar> >*)
   {
      vector<vector<achar> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<achar> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<achar> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<achar> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEachargRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<achar> >) );
      instance.SetNew(&new_vectorlEvectorlEachargRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEachargRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEachargRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEachargRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEachargRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<achar> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<achar> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEachargRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<achar> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEachargRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<achar> > : new vector<vector<achar> >;
   }
   static void *newArray_vectorlEvectorlEachargRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<achar> >[nElements] : new vector<vector<achar> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEachargRsPgR(void *p) {
      delete ((vector<vector<achar> >*)p);
   }
   static void deleteArray_vectorlEvectorlEachargRsPgR(void *p) {
      delete [] ((vector<vector<achar> >*)p);
   }
   static void destruct_vectorlEvectorlEachargRsPgR(void *p) {
      typedef vector<vector<achar> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<achar> >

namespace ROOTDict {
   void vectorlEvectorlEboolgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEboolgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEboolgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEboolgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p);
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<bool> >*)
   {
      vector<vector<bool> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<bool> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<bool> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<bool> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEboolgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<bool> >) );
      instance.SetNew(&new_vectorlEvectorlEboolgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEboolgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<bool> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEboolgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEboolgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> > : new vector<vector<bool> >;
   }
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> >[nElements] : new vector<vector<bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEboolgRsPgR(void *p) {
      delete ((vector<vector<bool> >*)p);
   }
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p) {
      delete [] ((vector<vector<bool> >*)p);
   }
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p) {
      typedef vector<vector<bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<bool> >

namespace ROOTDict {
   void vectorlEvectorlEchar_matrixmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEchar_matrixmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEchar_matrixmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEchar_matrixmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEchar_matrixmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEchar_matrixmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEchar_matrixmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<char_matrix*> >*)
   {
      vector<vector<char_matrix*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<char_matrix*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<char_matrix*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<char_matrix*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEchar_matrixmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<char_matrix*> >) );
      instance.SetNew(&new_vectorlEvectorlEchar_matrixmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEchar_matrixmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEchar_matrixmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEchar_matrixmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEchar_matrixmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<char_matrix*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<char_matrix*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEchar_matrixmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<char_matrix*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEchar_matrixmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char_matrix*> > : new vector<vector<char_matrix*> >;
   }
   static void *newArray_vectorlEvectorlEchar_matrixmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char_matrix*> >[nElements] : new vector<vector<char_matrix*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEchar_matrixmUgRsPgR(void *p) {
      delete ((vector<vector<char_matrix*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEchar_matrixmUgRsPgR(void *p) {
      delete [] ((vector<vector<char_matrix*> >*)p);
   }
   static void destruct_vectorlEvectorlEchar_matrixmUgRsPgR(void *p) {
      typedef vector<vector<char_matrix*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<char_matrix*> >

namespace ROOTDict {
   void vectorlEvectorlEchar_vectormUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEchar_vectormUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEchar_vectormUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEchar_vectormUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEchar_vectormUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEchar_vectormUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEchar_vectormUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<char_vector*> >*)
   {
      vector<vector<char_vector*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<char_vector*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<char_vector*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<char_vector*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEchar_vectormUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<char_vector*> >) );
      instance.SetNew(&new_vectorlEvectorlEchar_vectormUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEchar_vectormUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEchar_vectormUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEchar_vectormUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEchar_vectormUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<char_vector*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<char_vector*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEchar_vectormUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<char_vector*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEchar_vectormUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char_vector*> > : new vector<vector<char_vector*> >;
   }
   static void *newArray_vectorlEvectorlEchar_vectormUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char_vector*> >[nElements] : new vector<vector<char_vector*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEchar_vectormUgRsPgR(void *p) {
      delete ((vector<vector<char_vector*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEchar_vectormUgRsPgR(void *p) {
      delete [] ((vector<vector<char_vector*> >*)p);
   }
   static void destruct_vectorlEvectorlEchar_vectormUgRsPgR(void *p) {
      typedef vector<vector<char_vector*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<char_vector*> >

namespace ROOTDict {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<double> >

namespace ROOTDict {
   void vectorlEvectorlEdouble_3DmatrixmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdouble_3DmatrixmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double_3Dmatrix*> >*)
   {
      vector<vector<double_3Dmatrix*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double_3Dmatrix*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double_3Dmatrix*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double_3Dmatrix*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdouble_3DmatrixmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double_3Dmatrix*> >) );
      instance.SetNew(&new_vectorlEvectorlEdouble_3DmatrixmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdouble_3DmatrixmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdouble_3DmatrixmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdouble_3DmatrixmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdouble_3DmatrixmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<double_3Dmatrix*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double_3Dmatrix*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdouble_3DmatrixmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<double_3Dmatrix*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double_3Dmatrix*> > : new vector<vector<double_3Dmatrix*> >;
   }
   static void *newArray_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double_3Dmatrix*> >[nElements] : new vector<vector<double_3Dmatrix*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p) {
      delete ((vector<vector<double_3Dmatrix*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p) {
      delete [] ((vector<vector<double_3Dmatrix*> >*)p);
   }
   static void destruct_vectorlEvectorlEdouble_3DmatrixmUgRsPgR(void *p) {
      typedef vector<vector<double_3Dmatrix*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<double_3Dmatrix*> >

namespace ROOTDict {
   void vectorlEvectorlEdouble_matrixmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdouble_matrixmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdouble_matrixmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double_matrix*> >*)
   {
      vector<vector<double_matrix*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double_matrix*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double_matrix*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double_matrix*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdouble_matrixmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double_matrix*> >) );
      instance.SetNew(&new_vectorlEvectorlEdouble_matrixmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdouble_matrixmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdouble_matrixmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdouble_matrixmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdouble_matrixmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<double_matrix*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double_matrix*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdouble_matrixmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<double_matrix*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double_matrix*> > : new vector<vector<double_matrix*> >;
   }
   static void *newArray_vectorlEvectorlEdouble_matrixmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double_matrix*> >[nElements] : new vector<vector<double_matrix*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p) {
      delete ((vector<vector<double_matrix*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p) {
      delete [] ((vector<vector<double_matrix*> >*)p);
   }
   static void destruct_vectorlEvectorlEdouble_matrixmUgRsPgR(void *p) {
      typedef vector<vector<double_matrix*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<double_matrix*> >

namespace ROOTDict {
   void vectorlEvectorlEdouble_vectormUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdouble_vectormUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdouble_vectormUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdouble_vectormUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdouble_vectormUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdouble_vectormUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEdouble_vectormUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double_vector*> >*)
   {
      vector<vector<double_vector*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double_vector*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double_vector*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double_vector*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdouble_vectormUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double_vector*> >) );
      instance.SetNew(&new_vectorlEvectorlEdouble_vectormUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdouble_vectormUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdouble_vectormUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdouble_vectormUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdouble_vectormUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<double_vector*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double_vector*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdouble_vectormUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<double_vector*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdouble_vectormUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double_vector*> > : new vector<vector<double_vector*> >;
   }
   static void *newArray_vectorlEvectorlEdouble_vectormUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double_vector*> >[nElements] : new vector<vector<double_vector*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdouble_vectormUgRsPgR(void *p) {
      delete ((vector<vector<double_vector*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdouble_vectormUgRsPgR(void *p) {
      delete [] ((vector<vector<double_vector*> >*)p);
   }
   static void destruct_vectorlEvectorlEdouble_vectormUgRsPgR(void *p) {
      typedef vector<vector<double_vector*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<double_vector*> >

namespace ROOTDict {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<float> >

namespace ROOTDict {
   void vectorlEvectorlEfloat_3DmatrixmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloat_3DmatrixmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float_3Dmatrix*> >*)
   {
      vector<vector<float_3Dmatrix*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float_3Dmatrix*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float_3Dmatrix*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float_3Dmatrix*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloat_3DmatrixmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float_3Dmatrix*> >) );
      instance.SetNew(&new_vectorlEvectorlEfloat_3DmatrixmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloat_3DmatrixmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloat_3DmatrixmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloat_3DmatrixmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloat_3DmatrixmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<float_3Dmatrix*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float_3Dmatrix*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloat_3DmatrixmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<float_3Dmatrix*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float_3Dmatrix*> > : new vector<vector<float_3Dmatrix*> >;
   }
   static void *newArray_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float_3Dmatrix*> >[nElements] : new vector<vector<float_3Dmatrix*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p) {
      delete ((vector<vector<float_3Dmatrix*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p) {
      delete [] ((vector<vector<float_3Dmatrix*> >*)p);
   }
   static void destruct_vectorlEvectorlEfloat_3DmatrixmUgRsPgR(void *p) {
      typedef vector<vector<float_3Dmatrix*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<float_3Dmatrix*> >

namespace ROOTDict {
   void vectorlEvectorlEfloat_matrixmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloat_matrixmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloat_matrixmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float_matrix*> >*)
   {
      vector<vector<float_matrix*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float_matrix*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float_matrix*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float_matrix*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloat_matrixmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float_matrix*> >) );
      instance.SetNew(&new_vectorlEvectorlEfloat_matrixmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloat_matrixmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloat_matrixmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloat_matrixmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloat_matrixmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<float_matrix*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float_matrix*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloat_matrixmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<float_matrix*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float_matrix*> > : new vector<vector<float_matrix*> >;
   }
   static void *newArray_vectorlEvectorlEfloat_matrixmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float_matrix*> >[nElements] : new vector<vector<float_matrix*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p) {
      delete ((vector<vector<float_matrix*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p) {
      delete [] ((vector<vector<float_matrix*> >*)p);
   }
   static void destruct_vectorlEvectorlEfloat_matrixmUgRsPgR(void *p) {
      typedef vector<vector<float_matrix*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<float_matrix*> >

namespace ROOTDict {
   void vectorlEvectorlEfloat_vectormUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloat_vectormUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloat_vectormUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloat_vectormUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloat_vectormUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloat_vectormUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloat_vectormUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float_vector*> >*)
   {
      vector<vector<float_vector*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float_vector*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float_vector*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float_vector*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloat_vectormUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float_vector*> >) );
      instance.SetNew(&new_vectorlEvectorlEfloat_vectormUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloat_vectormUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloat_vectormUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloat_vectormUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloat_vectormUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<float_vector*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float_vector*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloat_vectormUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<float_vector*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloat_vectormUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float_vector*> > : new vector<vector<float_vector*> >;
   }
   static void *newArray_vectorlEvectorlEfloat_vectormUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float_vector*> >[nElements] : new vector<vector<float_vector*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloat_vectormUgRsPgR(void *p) {
      delete ((vector<vector<float_vector*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloat_vectormUgRsPgR(void *p) {
      delete [] ((vector<vector<float_vector*> >*)p);
   }
   static void destruct_vectorlEvectorlEfloat_vectormUgRsPgR(void *p) {
      typedef vector<vector<float_vector*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<float_vector*> >

namespace ROOTDict {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int> >

namespace ROOTDict {
   void vectorlEvectorlEint_3DmatrixmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEint_3DmatrixmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEint_3DmatrixmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int_3Dmatrix*> >*)
   {
      vector<vector<int_3Dmatrix*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int_3Dmatrix*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int_3Dmatrix*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int_3Dmatrix*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEint_3DmatrixmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int_3Dmatrix*> >) );
      instance.SetNew(&new_vectorlEvectorlEint_3DmatrixmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEint_3DmatrixmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEint_3DmatrixmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEint_3DmatrixmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEint_3DmatrixmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int_3Dmatrix*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int_3Dmatrix*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEint_3DmatrixmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int_3Dmatrix*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int_3Dmatrix*> > : new vector<vector<int_3Dmatrix*> >;
   }
   static void *newArray_vectorlEvectorlEint_3DmatrixmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int_3Dmatrix*> >[nElements] : new vector<vector<int_3Dmatrix*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p) {
      delete ((vector<vector<int_3Dmatrix*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p) {
      delete [] ((vector<vector<int_3Dmatrix*> >*)p);
   }
   static void destruct_vectorlEvectorlEint_3DmatrixmUgRsPgR(void *p) {
      typedef vector<vector<int_3Dmatrix*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int_3Dmatrix*> >

namespace ROOTDict {
   void vectorlEvectorlEint_matrixmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEint_matrixmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEint_matrixmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEint_matrixmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEint_matrixmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEint_matrixmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEint_matrixmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int_matrix*> >*)
   {
      vector<vector<int_matrix*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int_matrix*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int_matrix*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int_matrix*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEint_matrixmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int_matrix*> >) );
      instance.SetNew(&new_vectorlEvectorlEint_matrixmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEint_matrixmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEint_matrixmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEint_matrixmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEint_matrixmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int_matrix*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int_matrix*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEint_matrixmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int_matrix*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEint_matrixmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int_matrix*> > : new vector<vector<int_matrix*> >;
   }
   static void *newArray_vectorlEvectorlEint_matrixmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int_matrix*> >[nElements] : new vector<vector<int_matrix*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEint_matrixmUgRsPgR(void *p) {
      delete ((vector<vector<int_matrix*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEint_matrixmUgRsPgR(void *p) {
      delete [] ((vector<vector<int_matrix*> >*)p);
   }
   static void destruct_vectorlEvectorlEint_matrixmUgRsPgR(void *p) {
      typedef vector<vector<int_matrix*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int_matrix*> >

namespace ROOTDict {
   void vectorlEvectorlEint_vectormUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEint_vectormUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEint_vectormUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEint_vectormUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEint_vectormUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEint_vectormUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEint_vectormUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int_vector*> >*)
   {
      vector<vector<int_vector*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int_vector*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int_vector*> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int_vector*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEint_vectormUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int_vector*> >) );
      instance.SetNew(&new_vectorlEvectorlEint_vectormUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEint_vectormUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEint_vectormUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEint_vectormUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEint_vectormUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int_vector*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int_vector*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEint_vectormUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int_vector*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEint_vectormUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int_vector*> > : new vector<vector<int_vector*> >;
   }
   static void *newArray_vectorlEvectorlEint_vectormUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int_vector*> >[nElements] : new vector<vector<int_vector*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEint_vectormUgRsPgR(void *p) {
      delete ((vector<vector<int_vector*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEint_vectormUgRsPgR(void *p) {
      delete [] ((vector<vector<int_vector*> >*)p);
   }
   static void destruct_vectorlEvectorlEint_vectormUgRsPgR(void *p) {
      typedef vector<vector<int_vector*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int_vector*> >

namespace ROOTDict {
   void vectorlEvectorlEstringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEstringgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEstringgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEstringgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEstringgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEstringgRsPgR(void *p);
   static void destruct_vectorlEvectorlEstringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<string> >*)
   {
      vector<vector<string> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<string> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<string> >", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<string> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEstringgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<string> >) );
      instance.SetNew(&new_vectorlEvectorlEstringgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEstringgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEstringgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEstringgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEstringgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<string> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<string> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEstringgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<string> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEstringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<string> > : new vector<vector<string> >;
   }
   static void *newArray_vectorlEvectorlEstringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<string> >[nElements] : new vector<vector<string> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEstringgRsPgR(void *p) {
      delete ((vector<vector<string> >*)p);
   }
   static void deleteArray_vectorlEvectorlEstringgRsPgR(void *p) {
      delete [] ((vector<vector<string> >*)p);
   }
   static void destruct_vectorlEvectorlEstringgRsPgR(void *p) {
      typedef vector<vector<string> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<string> >

/********************************************************
* /home/t2k/aspeers/Highland_Installs/HighLAND_2.89/highlandCore_2.46/Linux-CentOS_7-gcc_4.8-x86_64/dict/G_OutputManager.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG_OutputManager();

extern "C" void G__set_cpp_environmentG_OutputManager() {
  G__cpp_reset_tagtableG_OutputManager();
}
#include <new>
extern "C" int G__cpp_dllrevG_OutputManager() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vector<char_vector,allocator<char_vector> > */
static int G__G_OutputManager_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::reference obj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->at((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::const_reference obj = ((const vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->at((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::iterator* pobj;
         vector<char_vector,allocator<char_vector> >::iterator xobj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->begin();
         pobj = new vector<char_vector,allocator<char_vector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::iterator* pobj;
         vector<char_vector,allocator<char_vector> >::iterator xobj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->end();
         pobj = new vector<char_vector,allocator<char_vector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::reverse_iterator* pobj;
         vector<char_vector,allocator<char_vector> >::reverse_iterator xobj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->rbegin();
         pobj = new vector<char_vector,allocator<char_vector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::reverse_iterator* pobj;
         vector<char_vector,allocator<char_vector> >::reverse_iterator xobj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->rend();
         pobj = new vector<char_vector,allocator<char_vector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->resize((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->resize((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]), *((char_vector*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::reference obj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->operator[]((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::const_reference obj = ((const vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->operator[]((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char_vector,allocator<char_vector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char_vector,allocator<char_vector> >[n];
     } else {
       p = new((void*) gvp) vector<char_vector,allocator<char_vector> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char_vector,allocator<char_vector> >;
     } else {
       p = new((void*) gvp) vector<char_vector,allocator<char_vector> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char_vector,allocator<char_vector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char_vector,allocator<char_vector> >((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]), *(char_vector*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<char_vector,allocator<char_vector> >((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]), *(char_vector*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char_vector,allocator<char_vector> >((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<char_vector,allocator<char_vector> >((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char_vector,allocator<char_vector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char_vector,allocator<char_vector> >(*(vector<char_vector,allocator<char_vector> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<char_vector,allocator<char_vector> >(*(vector<char_vector,allocator<char_vector> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char_vector,allocator<char_vector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char_vector,allocator<char_vector> >(*((vector<char_vector,allocator<char_vector> >::const_iterator*) G__int(libp->para[0])), *((vector<char_vector,allocator<char_vector> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<char_vector,allocator<char_vector> >(*((vector<char_vector,allocator<char_vector> >::const_iterator*) G__int(libp->para[0])), *((vector<char_vector,allocator<char_vector> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char_vector,allocator<char_vector> >& obj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->operator=(*(vector<char_vector,allocator<char_vector> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->reserve((vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char_vector& obj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char_vector& obj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->push_back(*(char_vector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->swap(*(vector<char_vector,allocator<char_vector> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char_vector,allocator<char_vector> >::iterator* pobj;
         vector<char_vector,allocator<char_vector> >::iterator xobj = ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->insert(*((vector<char_vector,allocator<char_vector> >::iterator*) G__int(libp->para[0])), *(char_vector*) libp->para[1].ref);
         pobj = new vector<char_vector,allocator<char_vector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->insert(*((vector<char_vector,allocator<char_vector> >::iterator*) G__int(libp->para[0])), *((vector<char_vector,allocator<char_vector> >::const_iterator*) G__int(libp->para[1]))
, *((vector<char_vector,allocator<char_vector> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->insert(*((vector<char_vector,allocator<char_vector> >::iterator*) G__int(libp->para[0])), (vector<char_vector,allocator<char_vector> >::size_type) G__int(libp->para[1])
, *(char_vector*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->erase(*((vector<char_vector,allocator<char_vector> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->erase(*((vector<char_vector,allocator<char_vector> >::iterator*) G__int(libp->para[0])), *((vector<char_vector,allocator<char_vector> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_637_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char_vector,allocator<char_vector> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<char_vector,allocator<char_vector> > G__TvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR;
static int G__G_OutputManager_637_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<char_vector,allocator<char_vector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<char_vector,allocator<char_vector> >*) (soff+(sizeof(vector<char_vector,allocator<char_vector> >)*i)))->~G__TvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<char_vector,allocator<char_vector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<char_vector,allocator<char_vector> >*) (soff))->~G__TvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OutputManager */
static int G__G_OutputManager_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OutputManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OutputManager[n];
     } else {
       p = new((void*) gvp) OutputManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OutputManager;
     } else {
       p = new((void*) gvp) OutputManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->InitializeEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((OutputManager*) G__getstructoffset())->InitializeTrees((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((OutputManager*) G__getstructoffset())->InitializeTrees();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((OutputManager*) G__getstructoffset())->InitializeTree((Int_t) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((OutputManager*) G__getstructoffset())->InitializeTree((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((OutputManager*) G__getstructoffset())->GetString((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((OutputManager*) G__getstructoffset())->GetSize(*(string*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const OutputManager*) G__getstructoffset())->GetVarName((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const OutputManager*) G__getstructoffset())->GetVarName((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const OutputManager*) G__getstructoffset())->GetCounterName((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const OutputManager*) G__getstructoffset())->GetCounterName((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((OutputManager*) G__getstructoffset())->AddCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(string*) libp->para[3].ref
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((OutputManager*) G__getstructoffset())->AddCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(string*) libp->para[3].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((OutputManager*) G__getstructoffset())->AddCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((OutputManager*) G__getstructoffset())->AddCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeCounter((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->ResizeCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->ResizeCounter((Int_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->HasCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->CheckCounterType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->IncrementCounter((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->IncrementCounterForVar((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetCounterIndexForVar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetCounterValue((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetCounterValue((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetCounterValueForVar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetCounterValueForVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->GetFirstIndexFromCounter((Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->DeleteVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((OutputManager*) G__getstructoffset())->AddVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((OutputManager*) G__getstructoffset())->AddVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((OutputManager*) G__getstructoffset())->AddVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((OutputManager*) G__getstructoffset())->AddVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((OutputManager*) G__getstructoffset())->AddVectorVar(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((OutputManager*) G__getstructoffset())->AddVectorVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((OutputManager*) G__getstructoffset())->AddVectorVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((OutputManager*) G__getstructoffset())->AddVectorVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddVectorVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (const int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddVectorVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (const int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (int) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((OutputManager*) G__getstructoffset())->AddMatrixVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (int) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]), *(string*) libp->para[5].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((OutputManager*) G__getstructoffset())->Add3DMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (Int_t) G__int(libp->para[5])
, *(string*) libp->para[6].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddToyVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddToyVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddToyVectorVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddToyVectorVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddToyMatrixVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddToyMatrixVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref, (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeVectorVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeMatrixVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((OutputManager*) G__getstructoffset())->GetVarValueF((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OutputManager*) G__getstructoffset())->GetVarValueD((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetVarValueI((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((OutputManager*) G__getstructoffset())->FillVectorVar((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVectorVarFromArray((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVectorVarFromArray((Int_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVectorVarFromArray((Int_t) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillVectorVarFromArray((Int_t) G__int(libp->para[0]), (string*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((OutputManager*) G__getstructoffset())->GetVectorVarValueF((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OutputManager*) G__getstructoffset())->GetVectorVarValueD((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetVectorVarValueI((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVarFromArray((Int_t) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMatrixVarFromArray((Int_t) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((OutputManager*) G__getstructoffset())->GetMatrixVarValueF((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OutputManager*) G__getstructoffset())->GetMatrixVarValueD((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetMatrixVarValueI((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->Fill3DMatrixVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->Fill3DMatrixVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->Fill3DMatrixVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->Fill3DMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->Fill3DMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->Fill3DMatrixVarFromArray((Int_t) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((OutputManager*) G__getstructoffset())->GetToyVarValueF((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OutputManager*) G__getstructoffset())->GetToyVarValueD((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetToyVarValueI((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVectorVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVectorVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVectorVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVectorVarFromArray((Int_t) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVectorVarFromArray((Int_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyVectorVarFromAray((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((OutputManager*) G__getstructoffset())->GetToyVectorVarValueF((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OutputManager*) G__getstructoffset())->GetToyVectorVarValueD((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetToyVectorVarValueI((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyMatrixVar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyMatrixVar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyMatrixVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillToyMatrixVarFromArray((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeAnalysisVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->InitializeAnalysisVectorVar((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillTree((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->WriteTree(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->WriteTrees(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((OutputManager*) G__getstructoffset())->AddTreeWithName((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (TTree*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((OutputManager*) G__getstructoffset())->AddTreeWithName((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->OpenOutputFile(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->CloseOutputFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->ValidateVarNameAndIndex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OutputManager*) G__getstructoffset())->IsSpecialTree((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->SetToyIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OutputManager*) G__getstructoffset())->GetToyIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->SetNToys((Int_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((OutputManager*) G__getstructoffset())->GetNToys((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((OutputManager*) G__getstructoffset())->GetNToys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->AddToyWeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->FillMicroTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->SetFillSingleTree((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->SetFillAllTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->WrongVariableType((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OutputManager*) G__getstructoffset())->SetDocStringManager((DocStringManager*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_OutputManager_641_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const DocStringManager& obj = ((OutputManager*) G__getstructoffset())->docstrings();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G_OutputManager_641_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OutputManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OutputManager(*(OutputManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OutputManager G__TOutputManager;
static int G__G_OutputManager_641_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OutputManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OutputManager*) (soff+(sizeof(OutputManager)*i)))->~G__TOutputManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OutputManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OutputManager*) (soff))->~G__TOutputManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G_OutputManager_641_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OutputManager* dest = (OutputManager*) G__getstructoffset();
   *dest = *(OutputManager*) libp->para[0].ref;
   const OutputManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* vector<char_vector,allocator<char_vector> > */

/* OutputManager */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG_OutputManager {
 public:
  G__Sizep2memfuncG_OutputManager(): p(&G__Sizep2memfuncG_OutputManager::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG_OutputManager::*p)();
};

size_t G__get_sizep2memfuncG_OutputManager()
{
  G__Sizep2memfuncG_OutputManager a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG_OutputManager() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager))) {
     OutputManager *G__Lderived;
     G__Lderived=(OutputManager*)0x1000;
     {
       TreeManager *G__Lpbase=(TreeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager),G__get_linked_tagnum(&G__G_OutputManagerLN_TreeManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG_OutputManager() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TTree*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DocString*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEDocStringmUcOallocatorlEDocStringmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEDocStringmUcOallocatorlEDocStringmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEDocStringmUcOallocatorlEDocStringmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEDocStringmUcOallocatorlEDocStringmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEDocStringmUcOallocatorlEDocStringmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<char_vector>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector),256,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector),1,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector),257,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<std::string> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Int_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Int_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Float_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Float_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Double_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<achar>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEacharcOallocatorlEachargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEacharcOallocatorlEachargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEacharcOallocatorlEachargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEacharcOallocatorlEachargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEacharcOallocatorlEachargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<achar> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<achar> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<achar,allocator<achar> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int_vector*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_vectormUcOallocatorlEint_vectormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_vectormUcOallocatorlEint_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_vectormUcOallocatorlEint_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int_vector*,allocator<int_vector*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<float_vector*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float_vector*,allocator<float_vector*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double_vector*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double_vector*,allocator<double_vector*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<char_vector*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<char_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char_vector*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char_vector*,allocator<char_vector*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int_matrix*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int_matrix*,allocator<int_matrix*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<float_matrix*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float_matrix*,allocator<float_matrix*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double_matrix*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double_matrix*,allocator<double_matrix*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<char_matrix*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<char_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char_matrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char_matrix*,allocator<char_matrix*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int_3Dmatrix*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int_3Dmatrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int_3Dmatrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int_3Dmatrix*,allocator<int_3Dmatrix*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<float_3Dmatrix*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float_3Dmatrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float_3Dmatrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float_3Dmatrix*,allocator<float_3Dmatrix*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double_3Dmatrix*>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double_3Dmatrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double_3Dmatrix*> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double_3Dmatrix*,allocator<double_3Dmatrix*> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Bool_t>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEboolcOallocatorlEboolgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Bool_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Bool_t> >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vector<char_vector,allocator<char_vector> > */
static void G__setup_memvarvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   { vector<char_vector,allocator<char_vector> > *p; p=(vector<char_vector,allocator<char_vector> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* OutputManager */
static void G__setup_memvarOutputManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager));
   { OutputManager *p; p=(OutputManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_apply_root_basket_opt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_string),-1,-1,2,"_default_docstring=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_DocStringManager),-1,-1,2,"_doc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"_toyWeights=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_toy_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_single_tree_fill=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<std::string> >"),-1,2,"_tree_vars_all_vars=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<std::string> >"),-1,2,"_tree_vars_all_counters=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_link_var_to_counter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_counter_size=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_counter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_int=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Float_t> >"),-1,2,"_tree_vars_float=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Double_t> >"),-1,2,"_tree_vars_double=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<achar> >"),-1,2,"_tree_vars_char=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int_vector*> >"),-1,2,"_tree_vars_int_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float_vector*> >"),-1,2,"_tree_vars_float_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double_vector*> >"),-1,2,"_tree_vars_double_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<char_vector*> >"),-1,2,"_tree_vars_char_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int_matrix*> >"),-1,2,"_tree_vars_int_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float_matrix*> >"),-1,2,"_tree_vars_float_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double_matrix*> >"),-1,2,"_tree_vars_double_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<char_matrix*> >"),-1,2,"_tree_vars_char_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int_3Dmatrix*> >"),-1,2,"_tree_vars_int_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float_3Dmatrix*> >"),-1,2,"_tree_vars_float_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double_3Dmatrix*> >"),-1,2,"_tree_vars_double_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_counter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_int=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_float=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_double=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_char=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_int_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_float_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_double_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_char_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_int_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_float_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_double_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_char_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_int_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_float_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,2,"_tree_vars_used_double_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_int=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_float=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_double=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_char=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_int_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_float_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_double_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_char_vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_int_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_float_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_double_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_char_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_int_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_float_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Bool_t> >"),-1,2,"_tree_vars_exist_double_3Dmatrix=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumStandardMicroTrees_OutputManager),-1,-2,1,G__FastAllocString(2048).Format("NTOYS=%lldLL",(long long)OutputManager::NTOYS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumStandardMicroTrees_OutputManager),-1,-2,1,G__FastAllocString(2048).Format("toy_weight=%lldLL",(long long)OutputManager::toy_weight).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumStandardMicroTrees_OutputManager),-1,-2,1,G__FastAllocString(2048).Format("toy_index=%lldLL",(long long)OutputManager::toy_index).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumStandardMicroTrees_OutputManager),-1,-2,1,G__FastAllocString(2048).Format("enumStandardMicroTreesLast_OutputManager=%lldLL",(long long)OutputManager::enumStandardMicroTreesLast_OutputManager).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees),-1,-2,1,G__FastAllocString(2048).Format("config=%lldLL",(long long)OutputManager::config).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees),-1,-2,1,G__FastAllocString(2048).Format("header=%lldLL",(long long)OutputManager::header).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees),-1,-2,1,G__FastAllocString(2048).Format("truth=%lldLL",(long long)OutputManager::truth).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees),-1,-2,1,G__FastAllocString(2048).Format("NRooTrackerVtx=%lldLL",(long long)OutputManager::NRooTrackerVtx).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees),-1,-2,1,G__FastAllocString(2048).Format("GRooTrackerVtx=%lldLL",(long long)OutputManager::GRooTrackerVtx).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees),-1,-2,1,G__FastAllocString(2048).Format("RooTrackerVtx=%lldLL",(long long)OutputManager::RooTrackerVtx).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees),-1,-2,1,G__FastAllocString(2048).Format("enumSpecialTreesLast=%lldLL",(long long)OutputManager::enumSpecialTreesLast).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG_OutputManager() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR(void) {
   /* vector<char_vector,allocator<char_vector> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR));
   G__memfunc_setup("at",213,G__G_OutputManager_637_0_1, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector), G__defined_typename("vector<char_vector,allocator<char_vector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__G_OutputManager_637_0_2, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector), G__defined_typename("vector<char_vector,allocator<char_vector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G_OutputManager_637_0_3, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G_OutputManager_637_0_4, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__G_OutputManager_637_0_5, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<char_vector,allocator<char_vector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__G_OutputManager_637_0_6, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<char_vector,allocator<char_vector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__G_OutputManager_637_0_7, 107, -1, G__defined_typename("vector<char_vector,allocator<char_vector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__G_OutputManager_637_0_8, 107, -1, G__defined_typename("vector<char_vector,allocator<char_vector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__G_OutputManager_637_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__G_OutputManager_637_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - sz u 'char_vector' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__G_OutputManager_637_0_11, 107, -1, G__defined_typename("vector<char_vector,allocator<char_vector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__G_OutputManager_637_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G_OutputManager_637_0_13, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector), G__defined_typename("vector<char_vector,allocator<char_vector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G_OutputManager_637_0_14, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector), G__defined_typename("vector<char_vector,allocator<char_vector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char_vector,allocator<char_vector> >",4276,G__G_OutputManager_637_0_15, 105, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char_vector,allocator<char_vector> >",4276,G__G_OutputManager_637_0_16, 105, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - n u 'char_vector' - 11 'char_vector()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char_vector,allocator<char_vector> >",4276,G__G_OutputManager_637_0_17, 105, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<char_vector,allocator<char_vector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char_vector,allocator<char_vector> >",4276,G__G_OutputManager_637_0_18, 105, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<char_vector,allocator<char_vector> >::iterator' 'vector<char_vector,allocator<char_vector> >::const_iterator' 10 - first u 'vector<char_vector,allocator<char_vector> >::iterator' 'vector<char_vector,allocator<char_vector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G_OutputManager_637_0_19, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<char_vector,allocator<char_vector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__G_OutputManager_637_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__G_OutputManager_637_0_21, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__G_OutputManager_637_0_22, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_char_vector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__G_OutputManager_637_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'char_vector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__G_OutputManager_637_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char_vector,allocator<char_vector> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G_OutputManager_637_0_25, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char_vector,allocator<char_vector> >::iterator' - 0 - position u 'char_vector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G_OutputManager_637_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char_vector,allocator<char_vector> >::iterator' - 0 - position u 'vector<char_vector,allocator<char_vector> >::iterator' 'vector<char_vector,allocator<char_vector> >::const_iterator' 10 - first "
"u 'vector<char_vector,allocator<char_vector> >::iterator' 'vector<char_vector,allocator<char_vector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G_OutputManager_637_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char_vector,allocator<char_vector> >::iterator' - 0 - position k - 'vector<char_vector,allocator<char_vector> >::size_type' 0 - n "
"u 'char_vector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__G_OutputManager_637_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G_OutputManager_637_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char_vector,allocator<char_vector> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G_OutputManager_637_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char_vector,allocator<char_vector> >::iterator' - 0 - first u 'vector<char_vector,allocator<char_vector> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__G_OutputManager_637_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<char_vector,allocator<char_vector> >", 4402, G__G_OutputManager_637_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOutputManager(void) {
   /* OutputManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager));
   G__memfunc_setup("OutputManager",1356,G__G_OutputManager_641_0_1, 105, G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G_OutputManager_641_0_2, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeEntry",1572,G__G_OutputManager_641_0_3, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,G__G_OutputManager_641_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeTrees",1557,G__G_OutputManager_641_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' iniVars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeTree",1442,G__G_OutputManager_641_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index g - - 0 'true' iniVars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeTree",1442,G__G_OutputManager_641_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__G_OutputManager_641_0_8, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__G_OutputManager_641_0_9, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_string), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - counter_name h - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarName",970,G__G_OutputManager_641_0_10, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_string), -1, 1, 2, 1, 1, 9, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - var_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarName",970,G__G_OutputManager_641_0_11, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - var_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterName",1409,G__G_OutputManager_641_0_12, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_string), -1, 1, 2, 1, 1, 9, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterName",1409,G__G_OutputManager_641_0_13, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCounter",1001,G__G_OutputManager_641_0_14, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"i - 'Int_t' 0 - counter_index u 'string' - 11 - counter_name "
"i - - 0 '-1' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCounter",1001,G__G_OutputManager_641_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - counter_index "
"u 'string' - 11 - counter_name i - - 0 '-1' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCounter",1778,G__G_OutputManager_641_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tree_name i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCounter",1778,G__G_OutputManager_641_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResizeCounter",1362,G__G_OutputManager_641_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - counter_index "
"i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResizeCounter",1362,G__G_OutputManager_641_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - counter_index i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasCounter",1020,G__G_OutputManager_641_0_20, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tree_name i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckCounterType",1632,G__G_OutputManager_641_0_21, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - counter_index i - 'Int_t' 0 - indx "
"i - 'Int_t' 0 - var_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementCounter",1669,G__G_OutputManager_641_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementCounterForVar",2261,G__G_OutputManager_641_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterIndexForVar",2120,G__G_OutputManager_641_0_24, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterValue",1533,G__G_OutputManager_641_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterValue",1533,G__G_OutputManager_641_0_26, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - counter_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterValueForVar",2125,G__G_OutputManager_641_0_27, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterValueForVar",2125,G__G_OutputManager_641_0_28, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFirstIndexFromCounter",2452,G__G_OutputManager_641_0_29, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 1 - indx1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteVar",892,G__G_OutputManager_641_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVar",562,G__G_OutputManager_641_0_31, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - doc "
"d - - 0 '-9999' ini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVar",562,G__G_OutputManager_641_0_32, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - doc d - - 0 '-9999' ini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVectorVar",1189,G__G_OutputManager_641_0_33, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - doc "
"i - 'Int_t' 0 - counter_index u 'string' - 11 - counter_name "
"i - 'Int_t' 0 '-MAXVECTORSIZE' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVectorVar",1189,G__G_OutputManager_641_0_34, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - doc i - 'Int_t' 0 - counter_index "
"u 'string' - 11 - counter_name i - 'Int_t' 0 '-MAXVECTORSIZE' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVectorVar",1189,G__G_OutputManager_641_0_35, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - doc "
"i - - 10 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVectorVar",1189,G__G_OutputManager_641_0_36, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - doc i - - 10 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMatrixVar",1191,G__G_OutputManager_641_0_37, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - doc "
"i - 'Int_t' 0 - counter_index u 'string' - 11 - counter_name "
"i - - 0 '-MAXVECTORSIZE' size1 i - - 0 '-1' size2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMatrixVar",1191,G__G_OutputManager_641_0_38, 121, -1, -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - doc i - 'Int_t' 0 - counter_index "
"u 'string' - 11 - counter_name i - - 0 '-MAXVECTORSIZE' size1 "
"i - - 0 '-1' size2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMatrixVar",1191,G__G_OutputManager_641_0_39, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - doc "
"i - - 0 '-MAXVECTORSIZE' size1 i - - 0 '-1' size2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMatrixVar",1191,G__G_OutputManager_641_0_40, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - doc i - - 0 '-MAXVECTORSIZE' size1 "
"i - - 0 '-1' size2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add3DMatrixVar",1310,G__G_OutputManager_641_0_41, 121, -1, -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - doc "
"i - 'Int_t' 0 - counter_index u 'string' - 11 - counter_name "
"i - - 0 '-MAXVECTORSIZE' size1 i - - 0 '-1' size2 "
"i - - 0 '-1' size3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add3DMatrixVar",1310,G__G_OutputManager_641_0_42, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - doc i - 'Int_t' 0 - counter_index "
"u 'string' - 11 - counter_name i - - 0 '-MAXVECTORSIZE' size1 "
"i - - 0 '-1' size2 i - - 0 '-1' size3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToyVar",878,G__G_OutputManager_641_0_43, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - docstring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToyVar",878,G__G_OutputManager_641_0_44, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - docstring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToyVectorVar",1505,G__G_OutputManager_641_0_45, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - docstring "
"i - - 0 - ncomp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToyVectorVar",1505,G__G_OutputManager_641_0_46, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - docstring i - - 0 - ncomp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToyMatrixVar",1507,G__G_OutputManager_641_0_47, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - name "
"u 'string' - 11 - type u 'string' - 11 - docstring "
"i - - 0 - ncomp1 i - - 0 - ncomp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToyMatrixVar",1507,G__G_OutputManager_641_0_48, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - index "
"u 'string' - 11 - name u 'string' - 11 - type "
"u 'string' - 11 - docstring i - - 0 - ncomp1 "
"i - - 0 - ncomp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeVar",1339,G__G_OutputManager_641_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - ini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeVectorVar",1966,G__G_OutputManager_641_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - ini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeMatrixVar",1968,G__G_OutputManager_641_0_51, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - ini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVar",688,G__G_OutputManager_641_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVar",688,G__G_OutputManager_641_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVar",688,G__G_OutputManager_641_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVar",688,G__G_OutputManager_641_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarValueF",1164,G__G_OutputManager_641_0_56, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarValueD",1162,G__G_OutputManager_641_0_57, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarValueI",1167,G__G_OutputManager_641_0_58, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVar",1315,G__G_OutputManager_641_0_59, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index f - 'Float_t' 0 - var "
"i - 'Int_t' 0 '-1' indx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVar",1315,G__G_OutputManager_641_0_60, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - var "
"i - 'Int_t' 0 '-1' indx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVar",1315,G__G_OutputManager_641_0_61, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - var "
"i - 'Int_t' 0 '-1' indx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVar",1315,G__G_OutputManager_641_0_62, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - var "
"i - 'Int_t' 0 '-1' indx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVarFromArray",2230,G__G_OutputManager_641_0_63, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index D - 'Double_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVarFromArray",2230,G__G_OutputManager_641_0_64, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index F - 'Float_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVarFromArray",2230,G__G_OutputManager_641_0_65, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index I - 'Int_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVectorVarFromArray",2230,G__G_OutputManager_641_0_66, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index U 'string' - 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVectorVarValueF",1791,G__G_OutputManager_641_0_67, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVectorVarValueD",1789,G__G_OutputManager_641_0_68, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVectorVarValueI",1794,G__G_OutputManager_641_0_69, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVar",1317,G__G_OutputManager_641_0_70, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index f - 'Float_t' 0 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVar",1317,G__G_OutputManager_641_0_71, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVar",1317,G__G_OutputManager_641_0_72, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVarFromArray",2232,G__G_OutputManager_641_0_73, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index D - 'Double_t' 10 - var "
"i - 'Int_t' 0 - indx1 h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVarFromArray",2232,G__G_OutputManager_641_0_74, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index F - 'Float_t' 10 - var "
"i - 'Int_t' 0 - indx1 h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVarFromArray",2232,G__G_OutputManager_641_0_75, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index I - 'Int_t' 10 - var "
"i - 'Int_t' 0 - indx1 h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVarFromArray",2232,G__G_OutputManager_641_0_76, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index D - 'Double_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVarFromArray",2232,G__G_OutputManager_641_0_77, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index F - 'Float_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatrixVarFromArray",2232,G__G_OutputManager_641_0_78, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index I - 'Int_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatrixVarValueF",1793,G__G_OutputManager_641_0_79, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1 "
"i - 'Int_t' 0 - i2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatrixVarValueD",1791,G__G_OutputManager_641_0_80, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1 "
"i - 'Int_t' 0 - i2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatrixVarValueI",1796,G__G_OutputManager_641_0_81, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1 "
"i - 'Int_t' 0 - i2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill3DMatrixVar",1436,G__G_OutputManager_641_0_82, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index f - 'Float_t' 0 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2 "
"i - 'Int_t' 0 - indx3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill3DMatrixVar",1436,G__G_OutputManager_641_0_83, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2 "
"i - 'Int_t' 0 - indx3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill3DMatrixVar",1436,G__G_OutputManager_641_0_84, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2 "
"i - 'Int_t' 0 - indx3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill3DMatrixVarFromArray",2351,G__G_OutputManager_641_0_85, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index D - 'Double_t' 10 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2 "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill3DMatrixVarFromArray",2351,G__G_OutputManager_641_0_86, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index F - 'Float_t' 10 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2 "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill3DMatrixVarFromArray",2351,G__G_OutputManager_641_0_87, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - index I - 'Int_t' 10 - var "
"i - 'Int_t' 0 - indx1 i - 'Int_t' 0 - indx2 "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVar",1004,G__G_OutputManager_641_0_88, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVar",1004,G__G_OutputManager_641_0_89, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVar",1004,G__G_OutputManager_641_0_90, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToyVarValueF",1480,G__G_OutputManager_641_0_91, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToyVarValueD",1478,G__G_OutputManager_641_0_92, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToyVarValueI",1483,G__G_OutputManager_641_0_93, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVectorVar",1631,G__G_OutputManager_641_0_94, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - var "
"i - 'Int_t' 0 - comp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVectorVar",1631,G__G_OutputManager_641_0_95, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index f - 'Float_t' 0 - var "
"i - 'Int_t' 0 - comp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVectorVar",1631,G__G_OutputManager_641_0_96, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - var "
"i - 'Int_t' 0 - comp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVectorVarFromArray",2546,G__G_OutputManager_641_0_97, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index I - 'Int_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVectorVarFromArray",2546,G__G_OutputManager_641_0_98, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index F - 'Float_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyVectorVarFromAray",2432,G__G_OutputManager_641_0_99, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index D - 'Double_t' 10 - var "
"h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToyVectorVarValueF",2107,G__G_OutputManager_641_0_100, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToyVectorVarValueD",2105,G__G_OutputManager_641_0_101, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToyVectorVarValueI",2110,G__G_OutputManager_641_0_102, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyMatrixVar",1633,G__G_OutputManager_641_0_103, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - var "
"i - 'Int_t' 0 - comp1 i - 'Int_t' 0 - comp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyMatrixVar",1633,G__G_OutputManager_641_0_104, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index f - 'Float_t' 0 - var "
"i - 'Int_t' 0 - comp1 i - 'Int_t' 0 - comp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyMatrixVar",1633,G__G_OutputManager_641_0_105, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - var "
"i - 'Int_t' 0 - comp1 i - 'Int_t' 0 - comp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyMatrixVarFromArray",2548,G__G_OutputManager_641_0_106, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index I - 'Int_t' 0 - var "
"i - 'Int_t' 0 - indx1 h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyMatrixVarFromArray",2548,G__G_OutputManager_641_0_107, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index F - 'Float_t' 0 - var "
"i - 'Int_t' 0 - indx1 h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToyMatrixVarFromArray",2548,G__G_OutputManager_641_0_108, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - index D - 'Double_t' 0 - var "
"i - 'Int_t' 0 - indx1 h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeAnalysisVar",2175,G__G_OutputManager_641_0_109, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - ini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeAnalysisVectorVar",2802,G__G_OutputManager_641_0_110, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - ini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,G__G_OutputManager_641_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tree_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,G__G_OutputManager_641_0_112, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTree",923,G__G_OutputManager_641_0_113, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - file u 'string' - 11 - conf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTrees",1038,G__G_OutputManager_641_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTreeWithName",1462,G__G_OutputManager_641_0_115, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index u 'string' - 11 - tree_name "
"U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenOutputFile",1443,G__G_OutputManager_641_0_116, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseOutputFile",1543,G__G_OutputManager_641_0_117, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidateVarNameAndIndex",2271,G__G_OutputManager_641_0_118, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - 'Int_t' 0 - var_index "
"u 'string' - 11 - var_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSpecialTree",1293,G__G_OutputManager_641_0_119, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tree_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetToyIndex",1120,G__G_OutputManager_641_0_120, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToyIndex",1108,G__G_OutputManager_641_0_121, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNToys",809,G__G_OutputManager_641_0_122, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tree_index i - - 0 - ntoys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNToys",797,G__G_OutputManager_641_0_123, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tree_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNToys",797,G__G_OutputManager_641_0_124, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToyWeight",1197,G__G_OutputManager_641_0_125, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMicroTrees",1412,G__G_OutputManager_641_0_126, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillSingleTree",1701,G__G_OutputManager_641_0_127, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tree_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillAllTrees",1487,G__G_OutputManager_641_0_128, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WrongVariableType",1749,G__G_OutputManager_641_0_129, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'string' - 11 - dim "
"u 'string' - 11 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDocStringManager",1908,G__G_OutputManager_641_0_130, 121, -1, -1, 0, 1, 1, 1, 0, "U 'DocStringManager' - 0 - doc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("docstrings",1088,G__G_OutputManager_641_0_131, 117, G__get_linked_tagnum(&G__G_OutputManagerLN_DocStringManager), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("OutputManager", 1356, G__G_OutputManager_641_0_132, (int) ('i'), G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager), -1, 0, 1, 1, 1, 0, "u 'OutputManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OutputManager", 1482, G__G_OutputManager_641_0_133, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G_OutputManager_641_0_134, (int) ('u'), G__get_linked_tagnum(&G__G_OutputManagerLN_OutputManager), -1, 1, 1, 1, 1, 0, "u 'OutputManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG_OutputManager() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG_OutputManager() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG_OutputManager() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G_OutputManagerLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_TreeManager = { "TreeManager" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR = { "vector<TTree*,allocator<TTree*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TTree*,allocator<TTree*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_DocStringManager = { "DocStringManager" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEDocStringmUcOallocatorlEDocStringmUgRsPgR = { "vector<DocString*,allocator<DocString*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEDocStringmUcOallocatorlEDocStringmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DocString*,allocator<DocString*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_char_vector = { "char_vector" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR = { "vector<char_vector,allocator<char_vector> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiterator = { "vector<char_vector,allocator<char_vector> >::iterator" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<char_vector,allocator<char_vector> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_OutputManager = { "OutputManager" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR = { "vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEacharcOallocatorlEachargRsPgR = { "vector<achar,allocator<achar> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEacharcOallocatorlEachargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<achar,allocator<achar> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR = { "vector<vector<achar,allocator<achar> >,allocator<vector<achar,allocator<achar> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<achar,allocator<achar> >,allocator<vector<achar,allocator<achar> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEint_vectormUcOallocatorlEint_vectormUgRsPgR = { "vector<int_vector*,allocator<int_vector*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int_vector*,allocator<int_vector*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR = { "vector<vector<int_vector*,allocator<int_vector*> >,allocator<vector<int_vector*,allocator<int_vector*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int_vector*,allocator<int_vector*> >,allocator<vector<int_vector*,allocator<int_vector*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgR = { "vector<float_vector*,allocator<float_vector*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float_vector*,allocator<float_vector*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR = { "vector<vector<float_vector*,allocator<float_vector*> >,allocator<vector<float_vector*,allocator<float_vector*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float_vector*,allocator<float_vector*> >,allocator<vector<float_vector*,allocator<float_vector*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgR = { "vector<double_vector*,allocator<double_vector*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double_vector*,allocator<double_vector*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR = { "vector<vector<double_vector*,allocator<double_vector*> >,allocator<vector<double_vector*,allocator<double_vector*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double_vector*,allocator<double_vector*> >,allocator<vector<double_vector*,allocator<double_vector*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgR = { "vector<char_vector*,allocator<char_vector*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<char_vector*,allocator<char_vector*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR = { "vector<vector<char_vector*,allocator<char_vector*> >,allocator<vector<char_vector*,allocator<char_vector*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<char_vector*,allocator<char_vector*> >,allocator<vector<char_vector*,allocator<char_vector*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgR = { "vector<int_matrix*,allocator<int_matrix*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int_matrix*,allocator<int_matrix*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR = { "vector<vector<int_matrix*,allocator<int_matrix*> >,allocator<vector<int_matrix*,allocator<int_matrix*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int_matrix*,allocator<int_matrix*> >,allocator<vector<int_matrix*,allocator<int_matrix*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgR = { "vector<float_matrix*,allocator<float_matrix*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float_matrix*,allocator<float_matrix*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR = { "vector<vector<float_matrix*,allocator<float_matrix*> >,allocator<vector<float_matrix*,allocator<float_matrix*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float_matrix*,allocator<float_matrix*> >,allocator<vector<float_matrix*,allocator<float_matrix*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgR = { "vector<double_matrix*,allocator<double_matrix*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double_matrix*,allocator<double_matrix*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR = { "vector<vector<double_matrix*,allocator<double_matrix*> >,allocator<vector<double_matrix*,allocator<double_matrix*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double_matrix*,allocator<double_matrix*> >,allocator<vector<double_matrix*,allocator<double_matrix*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgR = { "vector<char_matrix*,allocator<char_matrix*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<char_matrix*,allocator<char_matrix*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR = { "vector<vector<char_matrix*,allocator<char_matrix*> >,allocator<vector<char_matrix*,allocator<char_matrix*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<char_matrix*,allocator<char_matrix*> >,allocator<vector<char_matrix*,allocator<char_matrix*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgR = { "vector<int_3Dmatrix*,allocator<int_3Dmatrix*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int_3Dmatrix*,allocator<int_3Dmatrix*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR = { "vector<vector<int_3Dmatrix*,allocator<int_3Dmatrix*> >,allocator<vector<int_3Dmatrix*,allocator<int_3Dmatrix*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int_3Dmatrix*,allocator<int_3Dmatrix*> >,allocator<vector<int_3Dmatrix*,allocator<int_3Dmatrix*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgR = { "vector<float_3Dmatrix*,allocator<float_3Dmatrix*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float_3Dmatrix*,allocator<float_3Dmatrix*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR = { "vector<vector<float_3Dmatrix*,allocator<float_3Dmatrix*> >,allocator<vector<float_3Dmatrix*,allocator<float_3Dmatrix*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float_3Dmatrix*,allocator<float_3Dmatrix*> >,allocator<vector<float_3Dmatrix*,allocator<float_3Dmatrix*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgR = { "vector<double_3Dmatrix*,allocator<double_3Dmatrix*> >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double_3Dmatrix*,allocator<double_3Dmatrix*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR = { "vector<vector<double_3Dmatrix*,allocator<double_3Dmatrix*> >,allocator<vector<double_3Dmatrix*,allocator<double_3Dmatrix*> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double_3Dmatrix*,allocator<double_3Dmatrix*> >,allocator<vector<double_3Dmatrix*,allocator<double_3Dmatrix*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_OutputManagerLN_OutputManagercLcLenumStandardMicroTrees_OutputManager = { "OutputManager::enumStandardMicroTrees_OutputManager" , 101 , -1 };
G__linked_taginfo G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees = { "OutputManager::enumSpecialTrees" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG_OutputManager() {
  G__G_OutputManagerLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_string.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G_OutputManagerLN_TTree.tagnum = -1 ;
  G__G_OutputManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G_OutputManagerLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G_OutputManagerLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G_OutputManagerLN_TreeManager.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_DocStringManager.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEDocStringmUcOallocatorlEDocStringmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEDocStringmUcOallocatorlEDocStringmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_char_vector.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiterator.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_OutputManager.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEacharcOallocatorlEachargRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEacharcOallocatorlEachargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEint_vectormUcOallocatorlEint_vectormUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_OutputManagerLN_OutputManagercLcLenumStandardMicroTrees_OutputManager.tagnum = -1 ;
  G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG_OutputManager() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_string);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TTree);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_TreeManager);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_DocStringManager);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEDocStringmUcOallocatorlEDocStringmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEDocStringmUcOallocatorlEDocStringmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_char_vector);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR),sizeof(vector<char_vector,allocator<char_vector> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR,G__setup_memfuncvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectorcOallocatorlEchar_vectorgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_OutputManager),sizeof(OutputManager),-1,263424,(char*)NULL,G__setup_memvarOutputManager,G__setup_memfuncOutputManager);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEacharcOallocatorlEachargRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEacharcOallocatorlEachargRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEacharcOallocatorlEachargRsPgRcOallocatorlEvectorlEacharcOallocatorlEachargRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEint_vectormUcOallocatorlEint_vectormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRcOallocatorlEvectorlEint_vectormUcOallocatorlEint_vectormUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRcOallocatorlEvectorlEfloat_vectormUcOallocatorlEfloat_vectormUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRcOallocatorlEvectorlEdouble_vectormUcOallocatorlEdouble_vectormUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRcOallocatorlEvectorlEchar_vectormUcOallocatorlEchar_vectormUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRcOallocatorlEvectorlEint_matrixmUcOallocatorlEint_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRcOallocatorlEvectorlEfloat_matrixmUcOallocatorlEfloat_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRcOallocatorlEvectorlEdouble_matrixmUcOallocatorlEdouble_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRcOallocatorlEvectorlEchar_matrixmUcOallocatorlEchar_matrixmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRcOallocatorlEvectorlEint_3DmatrixmUcOallocatorlEint_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRcOallocatorlEvectorlEfloat_3DmatrixmUcOallocatorlEfloat_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRcOallocatorlEvectorlEdouble_3DmatrixmUcOallocatorlEdouble_3DmatrixmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_OutputManagercLcLenumStandardMicroTrees_OutputManager);
   G__get_linked_tagnum_fwd(&G__G_OutputManagerLN_OutputManagercLcLenumSpecialTrees);
}
extern "C" void G__cpp_setupG_OutputManager(void) {
  G__check_setup_version(30051515,"G__cpp_setupG_OutputManager()");
  G__set_cpp_environmentG_OutputManager();
  G__cpp_setup_tagtableG_OutputManager();

  G__cpp_setup_inheritanceG_OutputManager();

  G__cpp_setup_typetableG_OutputManager();

  G__cpp_setup_memvarG_OutputManager();

  G__cpp_setup_memfuncG_OutputManager();
  G__cpp_setup_globalG_OutputManager();
  G__cpp_setup_funcG_OutputManager();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG_OutputManager();
  return;
}
class G__cpp_setup_initG_OutputManager {
  public:
    G__cpp_setup_initG_OutputManager() { G__add_setup_func("G_OutputManager",(G__incsetup)(&G__cpp_setupG_OutputManager)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG_OutputManager() { G__remove_setup_func("G_OutputManager"); }
};
G__cpp_setup_initG_OutputManager G__cpp_setup_initializerG_OutputManager;

