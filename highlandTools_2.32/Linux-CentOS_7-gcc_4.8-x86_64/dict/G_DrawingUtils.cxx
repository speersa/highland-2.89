//
// File generated by /t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64//bin/rootcint at Thu Apr 20 02:12:11 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIt2kdIaspeersdIHighland_InstallsdIHighLAND_2dO89dIhighlandTools_2dO32dILinuxmICentOS_7mIgcc_4dO8mIx86_64dIdictdIG_DrawingUtils
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G_DrawingUtils.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace drawUtils {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void drawUtils_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("drawUtils", 0 /*version*/, "/home/t2k/aspeers/Highland_Installs/HighLAND_2.89/highlandTools_2.32/inc/DrawingUtils.hxx", 24,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &drawUtils_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void drawUtils_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

/********************************************************
* /home/t2k/aspeers/Highland_Installs/HighLAND_2.89/highlandTools_2.32/Linux-CentOS_7-gcc_4.8-x86_64/dict/G_DrawingUtils.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG_DrawingUtils();

extern "C" void G__set_cpp_environmentG_DrawingUtils() {
  G__cpp_reset_tagtableG_DrawingUtils();
}
#include <new>
extern "C" int G__cpp_dllrevG_DrawingUtils() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* drawUtils */
static int G__G_DrawingUtils_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = drawUtils::ToUpper(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = drawUtils::GetString((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = drawUtils::GetString((double) G__double(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::TreeHasVar((TTree*) G__int(libp->para[0]), *(string*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) drawUtils::GetVarFromTree((TTree*) G__int(libp->para[0]), *(string*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) drawUtils::GetNWeights((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) drawUtils::GetNToys((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) drawUtils::GetRefToy((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) drawUtils::GetVarFromExperiment(*(string*) libp->para[0].ref, *(Experiment*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref));
      break;
   case 3:
      G__letint(result7, 105, (long) drawUtils::GetVarFromExperiment(*(string*) libp->para[0].ref, *(Experiment*) libp->para[1].ref
, *(string*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 105, (long) drawUtils::GetVarFromExperiment(*(string*) libp->para[0].ref, *(Experiment*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::NormalizeVariableBinning((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::NormalizeVariableBinning((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::CheckOption(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::CheckOption(*(string*) libp->para[0].ref, (drawUtils::OptionEnum) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::CheckInternalOption(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = drawUtils::ConvertOption((drawUtils::OptionEnum) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::ExplainOption((drawUtils::OptionEnum) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::ExplainOption(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::IsValidOption(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::ContainValidOptions(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::AddOption(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::BuildOptions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::ListOptions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::AddLegendEntry((TLegend*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = drawUtils::GetAutoTitleY((TH1*) G__int(libp->para[0]), *(string*) libp->para[1].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawUtils::FindAndReplaceAll(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::ValidateHistogramBinValues(*(TH1_h*) libp->para[0].ref, *(vector<Int_t>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DrawingUtils_714_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) drawUtils::ValidateHistogramBinValues(*(TH2_h*) libp->para[0].ref, *(vector<std::vector<bool> >*) libp->para[1].ref
, *(vector<bool>*) libp->para[2].ref, *(vector<bool>*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* drawUtils */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG_DrawingUtils {
 public:
  G__Sizep2memfuncG_DrawingUtils(): p(&G__Sizep2memfuncG_DrawingUtils::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG_DrawingUtils::*p)();
};

size_t G__get_sizep2memfuncG_DrawingUtils()
{
  G__Sizep2memfuncG_DrawingUtils a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG_DrawingUtils() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG_DrawingUtils() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TTree*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AnaBunchC*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,DataSample*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcODataSamplemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcODataSamplemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,DataSample*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcODataSamplemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcODataSamplemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,DataSample*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcODataSamplemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcODataSamplemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,DataSample*,less<string> >",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcODataSamplemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcODataSamplemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DataSample*>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,SampleGroup>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOSampleGroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOSampleGroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,SampleGroup>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOSampleGroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOSampleGroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,SampleGroup>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOSampleGroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOSampleGroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,SampleGroup,less<string> >",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_maplEstringcOSampleGroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOSampleGroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TH1_h",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TH1D),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TH2_h",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_TH2D),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<bool> >",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool> >",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* drawUtils */
static void G__setup_memvardrawUtils(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_DrawingUtilsLN_drawUtils));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_DrawingUtilsLN_drawUtilscLcLOptionEnum),-1,-2,1,G__FastAllocString(2048).Format("kNOERROR=%lldLL",(long long)drawUtils::kNOERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_DrawingUtilsLN_drawUtilscLcLOptionEnum),-1,-2,1,G__FastAllocString(2048).Format("kAREA=%lldLL",(long long)drawUtils::kAREA).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&drawUtils::legendEntryHeight),100,0,0,-1,-1,-1,1,"legendEntryHeight=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG_DrawingUtils() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdrawUtils(void) {
   /* drawUtils */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_DrawingUtilsLN_drawUtils));
   G__memfunc_setup("ToUpper",719,G__G_DrawingUtils_714_0_1, 117, G__get_linked_tagnum(&G__G_DrawingUtilsLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - str", (char*)NULL, (void*) G__func2void( (string (*)(const string&))(&drawUtils::ToUpper) ), 0);
   G__memfunc_setup("GetString",919,G__G_DrawingUtils_714_0_2, 117, G__get_linked_tagnum(&G__G_DrawingUtilsLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - code", (char*)NULL, (void*) G__func2void( (string (*)(int))(&drawUtils::GetString) ), 0);
   G__memfunc_setup("GetString",919,G__G_DrawingUtils_714_0_3, 117, G__get_linked_tagnum(&G__G_DrawingUtilsLN_string), -1, 0, 1, 1, 1, 0, "d - - 0 - code", (char*)NULL, (void*) G__func2void( (string (*)(double))(&drawUtils::GetString) ), 0);
   G__memfunc_setup("TreeHasVar",981,G__G_DrawingUtils_714_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree u 'string' - 11 - var", (char*)NULL, (void*) G__func2void( (bool (*)(TTree*, const string&))(&drawUtils::TreeHasVar) ), 0);
   G__memfunc_setup("GetVarFromTree",1389,G__G_DrawingUtils_714_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree u 'string' - 11 - var", (char*)NULL, (void*) G__func2void( (int (*)(TTree*, const string&))(&drawUtils::GetVarFromTree) ), 0);
   G__memfunc_setup("GetNWeights",1097,G__G_DrawingUtils_714_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) G__func2void( (int (*)(TTree*))(&drawUtils::GetNWeights) ), 0);
   G__memfunc_setup("GetNToys",797,G__G_DrawingUtils_714_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) G__func2void( (int (*)(TTree*))(&drawUtils::GetNToys) ), 0);
   G__memfunc_setup("GetRefToy",889,G__G_DrawingUtils_714_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) G__func2void( (int (*)(TTree*))(&drawUtils::GetRefToy) ), 0);
   G__memfunc_setup("GetVarFromExperiment",2046,G__G_DrawingUtils_714_0_9, 105, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 11 - var u 'Experiment' - 1 - exp "
"u 'string' - 11 '\"all\"' groupName u 'string' - 11 '\"all\"' mcSampleName", (char*)NULL, (void*) G__func2void( (int (*)(const string&, Experiment&, const string&, const string&))(&drawUtils::GetVarFromExperiment) ), 0);
   G__memfunc_setup("NormalizeVariableBinning",2460,G__G_DrawingUtils_714_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 0 - h i - - 0 - mode "
"u 'string' - 11 - opt d - 'Double_t' 1 - minwidth", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, int, const string&, Double_t&))(&drawUtils::NormalizeVariableBinning) ), 0);
   G__memfunc_setup("NormalizeVariableBinning",2460,G__G_DrawingUtils_714_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - h i - - 0 - mode "
"u 'string' - 11 - opt", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, int, const string&))(&drawUtils::NormalizeVariableBinning) ), 0);
   G__memfunc_setup("CheckOption",1111,G__G_DrawingUtils_714_0_12, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - uopt u 'string' - 11 - this_opt", (char*)NULL, (void*) G__func2void( (bool (*)(const string&, const string&))(&drawUtils::CheckOption) ), 0);
   G__memfunc_setup("CheckOption",1111,G__G_DrawingUtils_714_0_13, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - uopt i 'drawUtils::OptionEnum' - 0 - this_opt", (char*)NULL, (void*) G__func2void( (bool (*)(const string&, drawUtils::OptionEnum))(&drawUtils::CheckOption) ), 0);
   G__memfunc_setup("CheckInternalOption",1940,G__G_DrawingUtils_714_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - uopt u 'string' - 11 - this_opt", (char*)NULL, (void*) G__func2void( (bool (*)(const string&, const string&))(&drawUtils::CheckInternalOption) ), 0);
   G__memfunc_setup("ConvertOption",1370,G__G_DrawingUtils_714_0_15, 117, G__get_linked_tagnum(&G__G_DrawingUtilsLN_string), -1, 0, 1, 1, 1, 0, "i 'drawUtils::OptionEnum' - 0 - this_opt", (char*)NULL, (void*) G__func2void( (string (*)(drawUtils::OptionEnum))(&drawUtils::ConvertOption) ), 0);
   G__memfunc_setup("ExplainOption",1354,G__G_DrawingUtils_714_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i 'drawUtils::OptionEnum' - 0 - opt", (char*)NULL, (void*) G__func2void( (void (*)(drawUtils::OptionEnum))(&drawUtils::ExplainOption) ), 0);
   G__memfunc_setup("ExplainOption",1354,G__G_DrawingUtils_714_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - opt", (char*)NULL, (void*) G__func2void( (void (*)(const string&))(&drawUtils::ExplainOption) ), 0);
   G__memfunc_setup("IsValidOption",1317,G__G_DrawingUtils_714_0_18, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - opt", (char*)NULL, (void*) G__func2void( (bool (*)(const string&))(&drawUtils::IsValidOption) ), 0);
   G__memfunc_setup("ContainValidOptions",1960,G__G_DrawingUtils_714_0_19, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - uopt", (char*)NULL, (void*) G__func2void( (bool (*)(const string&))(&drawUtils::ContainValidOptions) ), 0);
   G__memfunc_setup("AddOption",898,G__G_DrawingUtils_714_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - opt u 'string' - 11 - info", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&))(&drawUtils::AddOption) ), 0);
   G__memfunc_setup("BuildOptions",1244,G__G_DrawingUtils_714_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&drawUtils::BuildOptions) ), 0);
   G__memfunc_setup("ListOptions",1160,G__G_DrawingUtils_714_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&drawUtils::ListOptions) ), 0);
   G__memfunc_setup("AddLegendEntry",1386,G__G_DrawingUtils_714_0_23, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLegend' - 0 - leg U 'TObject' - 0 - ht "
"u 'string' - 11 - type u 'string' - 11 - opt", (char*)NULL, (void*) G__func2void( (void (*)(TLegend*, TObject*, const string&, const string&))(&drawUtils::AddLegendEntry) ), 0);
   G__memfunc_setup("GetAutoTitleY",1300,G__G_DrawingUtils_714_0_24, 117, G__get_linked_tagnum(&G__G_DrawingUtilsLN_string), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - h u 'string' - 11 - titleX", (char*)NULL, (void*) G__func2void( (string (*)(TH1*, const string&))(&drawUtils::GetAutoTitleY) ), 0);
   G__memfunc_setup("FindAndReplaceAll",1641,G__G_DrawingUtils_714_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 1 - data u 'string' - 11 - toSearch "
"u 'string' - 11 - replaceStr", (char*)NULL, (void*) G__func2void( (void (*)(string&, const string&, const string&))(&drawUtils::FindAndReplaceAll) ), 0);
   G__memfunc_setup("ValidateHistogramBinValues",2657,G__G_DrawingUtils_714_0_26, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'TH1D' 'TH1_h' 11 - h u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - bins", (char*)NULL, (void*) G__func2void( (bool (*)(const TH1_h&, vector<Int_t>&))(&drawUtils::ValidateHistogramBinValues) ), 0);
   G__memfunc_setup("ValidateHistogramBinValues",2657,G__G_DrawingUtils_714_0_27, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'TH2D' 'TH2_h' 11 - h u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >' 'vector<std::vector<bool> >' 1 - bins "
"u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - bins_x u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - bins_y", (char*)NULL, (void*) G__func2void( (bool (*)(const TH2_h&, vector<std::vector<bool> >&, vector<bool>&, vector<bool>&))(&drawUtils::ValidateHistogramBinValues) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG_DrawingUtils() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG_DrawingUtils() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG_DrawingUtils() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G_DrawingUtilsLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR = { "vector<TTree*,allocator<TTree*> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TTree*,allocator<TTree*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR = { "vector<AnaBunchC*,allocator<AnaBunchC*> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AnaBunchC*,allocator<AnaBunchC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_maplEstringcODataSamplemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcODataSamplemUgRsPgRsPgR = { "map<string,DataSample*,less<string>,allocator<pair<const string,DataSample*> > >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgR = { "vector<DataSample*,allocator<DataSample*> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DataSample*,allocator<DataSample*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_Experiment = { "Experiment" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_maplEstringcOSampleGroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOSampleGroupgRsPgRsPgR = { "map<string,SampleGroup,less<string>,allocator<pair<const string,SampleGroup> > >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_drawUtils = { "drawUtils" , 110 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_drawUtilscLcLOptionEnum = { "drawUtils::OptionEnum" , 101 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG_DrawingUtils() {
  G__G_DrawingUtilsLN_TObject.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_string.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TTree.tagnum = -1 ;
  G__G_DrawingUtilsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TH1.tagnum = -1 ;
  G__G_DrawingUtilsLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TH1D.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TH2D.tagnum = -1 ;
  G__G_DrawingUtilsLN_TLegend.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_maplEstringcODataSamplemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcODataSamplemUgRsPgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_Experiment.tagnum = -1 ;
  G__G_DrawingUtilsLN_maplEstringcOSampleGroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOSampleGroupgRsPgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_drawUtils.tagnum = -1 ;
  G__G_DrawingUtilsLN_drawUtilscLcLOptionEnum.tagnum = -1 ;
  G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG_DrawingUtils() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TObject);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_string);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TTree);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TH1);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TH1D);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TH2D);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TLegend);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_maplEstringcODataSamplemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcODataSamplemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEDataSamplemUcOallocatorlEDataSamplemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_Experiment);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_maplEstringcOSampleGroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOSampleGroupgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_drawUtils),0,-1,0,(char*)NULL,G__setup_memvardrawUtils,G__setup_memfuncdrawUtils);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_drawUtilscLcLOptionEnum);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DrawingUtilsLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupG_DrawingUtils(void) {
  G__check_setup_version(30051515,"G__cpp_setupG_DrawingUtils()");
  G__set_cpp_environmentG_DrawingUtils();
  G__cpp_setup_tagtableG_DrawingUtils();

  G__cpp_setup_inheritanceG_DrawingUtils();

  G__cpp_setup_typetableG_DrawingUtils();

  G__cpp_setup_memvarG_DrawingUtils();

  G__cpp_setup_memfuncG_DrawingUtils();
  G__cpp_setup_globalG_DrawingUtils();
  G__cpp_setup_funcG_DrawingUtils();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG_DrawingUtils();
  return;
}
class G__cpp_setup_initG_DrawingUtils {
  public:
    G__cpp_setup_initG_DrawingUtils() { G__add_setup_func("G_DrawingUtils",(G__incsetup)(&G__cpp_setupG_DrawingUtils)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG_DrawingUtils() { G__remove_setup_func("G_DrawingUtils"); }
};
G__cpp_setup_initG_DrawingUtils G__cpp_setup_initializerG_DrawingUtils;

