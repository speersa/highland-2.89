#!/bin/bash
#################################################################

# Update the version appended to the end of each package
# directory in the software's root directory. The version is
# retrieved from the <package>ND280USE.cmake file. 

usage () {
  echo
  echo "Usage: nd280-version-update [package]"
  echo "  Update the version appended to the end of each package"
  echo "  directory in the software's root directory. The version is"
  echo "  retrieved from the <package>PackageVersion.cmake file."
  echo 
  echo "  If a package name is specified, only that package is updated."
  echo
  echo "Options:"
  echo "  -h: print this usage message."
  echo
  exit 0
}

os=$(uname | tr '-' '_')

# read the options and arguments
while getopts "h" option; do
  case $option in
    h) usage; exit 0;;
    *) echo
       echo ERROR: Option not valid.
       echo 
       usage; exit 1;;
  esac
done
shift "$((OPTIND-1))"

if [[ $# == 0 ]]; then NAME="*"
elif [[ $# == 1 ]]; then NAME=$1
else echo "ERROR: Wrong number of arguments"; exit 1
fi

cd $ND280_ROOT
n=0
while read FILE; do
  let 'n=n+1'
  if [ ! -d $FILE/cmake ]; then
    echo "No cmake folder in ${FILE}. Cannot find version."
    continue
  fi
  FILE=$(basename $FILE)
  PACKAGE=$(echo $FILE | sed "s:_.*::g")
  V=Null
  while read LINE; do
    
    if [ ${os} = "Darwin" ]; then
      # MAC OS does not support PCREs
      V=$(echo $LINE | grep -o "[0-9].*")
    else
      V=$(echo $LINE | grep -P -o "[0-9].*")
    fi
    
    V=$(echo $V | sed "s:\"::g")
    V=$(echo $V | sed "s:)::g")
    V=$(echo $V | sed "s: ::g")
    export V
  done <<< "$(cat $FILE/cmake/${PACKAGE}PackageVersion.cmake)"
  if [[ $V != Null ]]; then
    echo ${FILE} --\> ${PACKAGE}_$V
    if [ -d ${PACKAGE}_$V ]; then
      echo "${PACKAGE}_$V already exists. Skipping..."
      continue
    fi
    mv $FILE ${PACKAGE}_$V
  else
    echo No version found for $PACKAGE
  fi
done <<< "$(find . -maxdepth 1 -type d -name "${NAME}_*")"

if [[ $n == 0 ]]; then 
  if [[ $NAME == "*" ]]; then
    echo No packages with format 'name_version' found in ND280 root
  else
    echo No packages called $NAME found in ND280 root
  fi
fi  
