//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Fri Nov  4 15:38:32 2016 by ROOT version 5.34/34)
//      from the StreamerInfo in file /hep/T2K/DataDir/valid/oa_nt_beam_90210042-0030_bbzjto7xz4zh_anal_000_prod6amagnet201011waterb-bsdv01_2.root
//////////////////////////////////////////////////////////


#ifndef ND__NRooTrackerVtx_h
#define ND__NRooTrackerVtx_h
namespace ND {
class NRooTrackerVtx;
} // end of namespace.

#include "ND__JNuBeamFlux.h"
#include "TObjString.h"

namespace ND {
class NRooTrackerVtx : public ND::JNuBeamFlux {

public:
// Nested classes declaration.

public:
// Data Members.
   TObjString* EvtCode;     ///< generator-specific string with 'event code'
   int         EvtNum;      ///< event num.
   double      EvtXSec;     ///< cross section for selected event (1E-38 cm2) CORRECT
   double      EvtDXSec;    ///< cross section for selected event kinematics (1E-38 cm2 /{K^n}) CORRECT
   double      EvtWght;     ///< weight for that event CORRECT
   double      EvtProb;     ///< probability for that event (given cross section, path lengths, etc) CORRECT
   double      EvtVtx[4];    ///< event vertex position in detector coord syst (SI) CORRECT
   int         StdHepN;      ///< number of particles in particle array 
   Int_t      *StdHepPdg;    //[StdHepN] ///< pdg codes (& generator specific codes for pseudoparticles)
   Int_t      *StdHepStatus;    //[StdHepN] ///< generator-specific status code 
   double      StdHepX4[100][4];    ///< 4-x (x, y, z, t) of particle in hit nucleus frame (fm) CORRECT
   double      StdHepP4[100][4];    ///< 4-p (px,py,pz,E) of particle in LAB frame (GeV) CORRECT
   double      StdHepPolz[100][3];    ///< polarization vector CORRECT
   Int_t      *StdHepFd;              //[StdHepN] ///< first daughter
   Int_t      *StdHepLd;              //[StdHepN] ///< last daughter
   Int_t      *StdHepFm;              //[StdHepN] ///< first mother 
   Int_t      *StdHepLm;              //[StdHepN] ///< last mother
   int         NEnvc;                 ///< Number of particles 
   Int_t      *NEipvc;                //[NEnvc]              ///< PDG particle code
   float       NEpvc[100][3];         ///< 3-momentum (MeV/c) CORRECT
   Int_t      *NEiorgvc;              //[NEnvc]            ///<  Index of parent (Fortran convention: starting at 1)
   Int_t      *NEiflgvc;              //[NEnvc]             ///< Flag of final state         
   Int_t      *NEicrnvc;              //[NEnvc]             ///< Escaped nucleus (1) or not (0)
   float       NEcrsx;                ///< Cross section calculation variables (currently used for coherent interactions) CORRECT
   float       NEcrsy;                ///< Cross section calculation variables (currently used for coherent interactions) CORRECT
   float       NEcrsz;                ///< Cross section calculation variables (currently used for coherent interactions) CORRECT
   float       NEcrsphi;              ///< Cross section calculation variables (currently used for coherent interactions) CORRECT
   int         NEnvert;               ///< Number of vertices (including production and exit points)
   float       NEposvert[100][3];     ///< Position of vertex within nucleus (fm) CORRECT
   Int_t      *NEiflgvert;            //[NEnvert]          ///< Interaction type
   int         NEnvcvert;             ///< Number of intermediate particles (including initial and final)
   float       NEdirvert[300][3];     ///< Direction of particle CORRECT
   Float_t    *NEabspvert;            //[NEnvcvert]   ///<  Absolute momentum in the lab frame (MeV/c) CORRECT
   Float_t    *NEabstpvert;           //[NEnvcvert]   ///<  Absolute momentum in the nucleon rest frame (MeV/c) CORRECT
   Int_t      *NEipvert;              //[NEnvcvert]   ///<  PDG particle code
   Int_t      *NEiverti;              //[NEnvcvert]   ///<  Index of initial vertex (pointing to nvert array above)
   Int_t      *NEivertf;              //[NEnvcvert]   ///<  Index of final vertex (pointing to nvert array above)
   TObjString* GeomPath;              //
   TObjString* GeneratorName;         //
   TObjString* OrigFileName;          //
   TObjString* OrigTreeName;          //
   int         OrigEvtNum;            //
   int         OrigTreeEntries;       //
   double      OrigTreePOT;           //
   double      TimeInSpill;           //
   int         TruthVertexID;         //

   NRooTrackerVtx();
   NRooTrackerVtx(const NRooTrackerVtx & );
   virtual ~NRooTrackerVtx();

   ClassDef(NRooTrackerVtx,2); // Generated by MakeProject.
};
} // namespace
#endif
