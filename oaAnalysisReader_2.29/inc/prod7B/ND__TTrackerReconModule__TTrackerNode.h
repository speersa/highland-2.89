//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Tue Sep  4 09:00:22 2018 by ROOT version 5.34/34)
//      from the StreamerInfo in file ../../../../../Files/Prod7/7B_new_iteration/oa_nt_beam_90400000-0000_jrvqx3jehzgh_anal_000_prod6amagnet201011airc-bsdv01_2.root
//////////////////////////////////////////////////////////


#ifndef ND__TTrackerReconModule__TTrackerNode_h
#define ND__TTrackerReconModule__TTrackerNode_h
namespace ND {
namespace TTrackerReconModule {
class TTrackerNode;
} // end of namespace.
} // end of namespace.

#include "TObject.h"
#include "TLorentzVector.h"
#include "TVector3.h"

namespace ND {
namespace TTrackerReconModule {
class TTrackerNode : public TObject {

public:
// Nested classes declaration.

public:
// Data Members.
   double      Charge;      ///< The Charge (+-1)
   double      EDeposit;    ///< The Energy Deposit (number of pe's)
   TLorentzVector Position;    ///< Position 4-vector (at node) x,y,z,t in mm, ns
   TLorentzVector Variance;    ///< Position variance 4-vector (at node)var(x),var(y),var(z),var(t) in mm^2, ns^2
   TVector3       Direction;    ///< Direction vector (at node)
   TVector3       DirectionVariance;    ///< Direction variance vector (at node)
   double         Momentum;             ///< Track Momentum (at node) in MeV/c
   double         MomentumError;        ///< Track Momentum uncertainty (at node) in MeV/c

   TTrackerNode();
   TTrackerNode(const TTrackerNode & );
   virtual ~TTrackerNode();

   ClassDef(TTrackerNode,2); // Generated by MakeProject.
};
} // namespace
} // namespace
#endif
