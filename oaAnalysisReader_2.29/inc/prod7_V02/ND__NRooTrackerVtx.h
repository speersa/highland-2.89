//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Thu Nov 25 13:45:35 2021 by ROOT version 5.34/34)
//      from the StreamerInfo in file /t2k/izmaylov/T2K_ND280_ANALYSIS/ANALYSIS/oaAnalysisReader/p7_V03_oa_nt_beam_90400128-0055_5dkklck5zqqj_anal_000_magnet201011airrun4-bsdv01_2.root
//////////////////////////////////////////////////////////


#ifndef ND__NRooTrackerVtx_h
#define ND__NRooTrackerVtx_h
namespace ND {
class NRooTrackerVtx;
} // end of namespace.

#include "ND__JNuBeamFlux.h"
#include "TObjString.h"

namespace ND {
class NRooTrackerVtx : public ND::JNuBeamFlux {

public:
// Nested classes declaration.

public:
// Data Members.
   TObjString* EvtCode;     //generator-specific string with 'event code'
   int         EvtNum;      //event num.
   double      EvtXSec;     //cross section for selected event (1E-38 cm2) CORRECT
   double      EvtDXSec;    //cross section for selected event kinematics (1E-38 cm2 /{K^n}) CORRECT
   double      EvtWght;     //weight for that event CORRECT
   double      EvtProb;     //probability for that event (given cross section, path lengths, etc)
   double      EvtVtx[4];    //event vertex position in detector coord syst (SI) CORRECT
   int         StdHepN;      //number of particles in particle array
   Int_t      *StdHepPdg;    //[StdHepN]
   Int_t      *StdHepStatus;    //[StdHepN]
   double      StdHepX4[100][4];    //4-x (x, y, z, t) of particle in hit nucleus frame (fm) CORRECT
   double      StdHepP4[100][4];    //4-p (px,py,pz,E) of particle in LAB frame (GeV) CORRECT
   double      StdHepPolz[100][3];    //polarization vector CORRECT
   Int_t      *StdHepFd;              //[StdHepN]
   Int_t      *StdHepLd;              //[StdHepN]
   Int_t      *StdHepFm;              //[StdHepN]
   Int_t      *StdHepLm;              //[StdHepN]
   int         NEnvc;                 //NEUT native VCWORK information    Number of particles
   Int_t      *NEipvc;                //[NEnvc]
   float       NEpvc[100][3];         //3-momentum (MeV/c) CORRECT
   Int_t      *NEiorgvc;              //[NEnvc]
   Int_t      *NEiflgvc;              //[NEnvc]
   Int_t      *NEicrnvc;              //[NEnvc]
   float       NEcrsx;                //\brief Cross section calculation variables (currently used for coherent  interactions) CORRECT
   float       NEcrsy;                //\brief Cross section calculation variables (currently used for coherent  interactions) CORRECT
   float       NEcrsz;                //\brief Cross section calculation variables (currently used for coherent   /// interactions) CORRECT
   float       NEcrsphi;              /////\brief Cross section calculation variables (currently used for coherent   /// interactions) CORRECT
   int         NEnvert;               //Number of vertices (including production and exit points)
   float       NEposvert[100][3];     //
   Int_t      *NEiflgvert;            //[NEnvert]
   int         NEnvcvert;             //Number of intermediate particles (including initial and final)
   float       NEdirvert[300][3];     //Direction of particle CORRECT
   Float_t    *NEabspvert;            //[NEnvcvert]
   Float_t    *NEabstpvert;           //[NEnvcvert]
   Int_t      *NEipvert;              //[NEnvcvert]
   Int_t      *NEiverti;              //[NEnvcvert]
   Int_t      *NEivertf;              //[NEnvcvert]
   int         NFnvert;               //\brief Number of "vertices"
   Float_t    *NFx;                   //[NFnvert]
   Float_t    *NFy;                   //[NFnvert]
   Float_t    *NFz;                   //[NFnvert]
   Float_t    *NFpx;                  //[NFnvert]
   Float_t    *NFpy;                  //[NFnvert]
   Float_t    *NFpz;                  //[NFnvert]
   Float_t    *NFe;                   //[NFnvert]
   Int_t      *NFfirststep;           //[NFnvert]
   int         NFnstep;               //number of steps
   Float_t    *NFecms2;               //[NFnstep]
   TObjString* GeomPath;              //
   TObjString* GeneratorName;         //
   TObjString* OrigFileName;          //
   TObjString* OrigTreeName;          //
   int         OrigEvtNum;            //
   int         OrigTreeEntries;       //
   double      OrigTreePOT;           //
   double      TimeInSpill;           //
   int         TruthVertexID;         //

   NRooTrackerVtx();
   NRooTrackerVtx(const NRooTrackerVtx & );
   virtual ~NRooTrackerVtx();

   ClassDef(NRooTrackerVtx,2); // Generated by MakeProject.
};
} // namespace
#endif
