//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Wed Apr  5 14:16:32 2023 by ROOT version 5.34/34)
//      from the StreamerInfo in file ../../oa_nt_beam_80600124-0055_f72mofocwqdr_anal_000_nu-bsdv01_2.root
//////////////////////////////////////////////////////////


#ifndef ND__TSmrdReconModule__TSmrdIsoTrack_h
#define ND__TSmrdReconModule__TSmrdIsoTrack_h
namespace ND {
namespace TSmrdReconModule {
class TSmrdIsoTrack;
} // end of namespace.
} // end of namespace.

#include "TObject.h"
#include "Riostream.h"
#include <string>
#include "TLorentzVector.h"
#include "TVector3.h"

namespace ND {
namespace TSmrdReconModule {
class TSmrdIsoTrack : public TObject {

public:
// Nested classes declaration.

public:
// Data Members.
   unsigned int UniqueID;    //The Unique ID of the corresponding ND::TReconTrack, used for  global-subdetector matching.
   string       AlgorithmName;    //Name of the reconstruction algorithm.
   TLorentzVector FrontPos;         //Position of the 'first' TTrackState of the corresponding  ND::TReconTrack.
   TLorentzVector FrontPosVariance;    //Variance on the position of the 'first' TTrackState of the  corresponding ND::TReconTrack.
   TLorentzVector BackPos;             //Position of the 'last' TTrackState of the corresponding ND::TReconTrack.
   TLorentzVector BackPosVariance;     //Variance on the position of the 'last' TTrackState of the  corresponding ND::TReconTrack.
   TVector3       Direction;           //Direction of the TTrackState which is the state of the  corresponding ND::TReconTrack.
   TVector3       DirectionVariance;    //Variance on the direction the TTrackState which is the state of  the corresponding ND::TReconTrack.
   int            NHits;                //Number of ND::THits which are associated with the corresponding  ND::TReconTrack.
   int            NNodes;               //Number of TReconNodes which are constituents of the corresponding  ND::TReconTrack.
   int            Status;               //The reported Status of the corresponding ND::TReconTrack.  Holds kSuccess if the ND::TReconTrack::fStatus has the kSuccess bit set.  Uses ND::TReconBase::CheckStatus to check this.
   int            KalmanStatus;         //Kalman filter refit result for the corresponding ND::TReconTrack.  Holds '1' if the algorithm was run and has Status kSuccess, otherwise  '0'
   int            NDOF;                 //The Number of Degrees of Freedom in the reconstruction  of the corresponding ND::TReconTrack.
   double         EDeposit;             //The total reconstructed charge of the corresponding ND::TReconTrack.  Defaults to '-9999.0' if no ND::TRealDatum named 'totalCharge' is  found on the corresponding ND::TReconTrack.
   double         avgtime;              //Average hit time of the corresponding ND::TReconTrack.  Defaults to '-9999.0' if no ND::TRealDatum named 'averageHitTime'  is found on the corresponding ND::TReconTrack.
   double         Range;                //The spacial distance between TSmrdIsoTrack::FrontPos and  TSmrdIsoTrack::BackPos.
   double         Chi2;                 //The reported reconstruction 'quality' of the corresponding  ND::TReconTrack.
   double         ThetaAngle;           //Polar coordinate theta of the TSmrdIsoTrack::Direction.
   double         PhiAngle;             //Polar coordinate phi of the TSmrdIsoTrack::Direction.
   TLorentzVector TrueInitPos;          //For MC events: The true initial position of the corresponding  ND::TG4Trajectory.
   int            TrueInitDet;          //For MC events: The subdetector in which  TSmrdIsoTrack::TrueInitPos lies
   TLorentzVector TrueFinalPos;         //For MC events: The true final position of the corresponding  ND::TG4Trajectory.
   int            TrueFinalDet;         //For MC events: The subdetector in which  TSmrdIsoTrack::TrueFinalPos lies
   TLorentzVector TrueInitMom;          //For MC events: The true initial momentum of the corresponding  ND::TG4Trajectory.
   int            TrueId;               //For MC events: The Id of the corresponding ND::TG4Trajectory.
   int            TruePDG;              //For MC events: The PDG code of the true particle.
   int            TrueParentId;         //For MC events: The Id of the true trajectory's parent  ND::TG4Trajectory
   double         TrueHitPurity;        //For MC events: The 'cleanliness' of the ND::THits which make up  the corresponding ND::TReconTrack.
   double         TrueHitEff;           //For MC events: The 'completeness' of the ND::THits which make up  the corresponding ND::TReconTrack.

   TSmrdIsoTrack();
   TSmrdIsoTrack(const TSmrdIsoTrack & );
   virtual ~TSmrdIsoTrack();

   ClassDef(TSmrdIsoTrack,2); // Generated by MakeProject.
};
} // namespace
} // namespace
#endif
