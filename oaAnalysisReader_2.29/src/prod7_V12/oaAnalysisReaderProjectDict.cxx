//
// File generated by rootcint at Tue May  9 07:28:00 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME oaAnalysisReaderProjectDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "oaAnalysisReaderProjectDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      namespace ND {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ND::TND280Context TND280Context;
      #else
      class TND280Context  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TND280Context() throw() {};
         int fPartition; //
         int fRun; //
         int fSubRun; //
         int fEvent; //
         int fSpill; //
         unsigned int fTimeStamp; //
      };
      #endif
      } 
      namespace ND {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ND::TSHAHashValue TSHAHashValue;
      #else
      class TSHAHashValue  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TSHAHashValue() throw() {};
         unsigned int fHash[5]; //
      };
      #endif
      } 
      namespace ND {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ND::TAlignmentId TAlignmentId;
      #else
      class TAlignmentId  :  public ::ND::TSHAHashValue {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TAlignmentId() throw() {};
         string fDocString; //
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, const ::TGeoNode* > pairlEintcOconstsPTGeoNodemUgR;
      #else
      class pairlEintcOconstsPTGeoNodemUgR  {
         public:
         //friend XX;
         int first; //
         :: TGeoNode* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, pair< int, const ::TGeoNode* >  > pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR;
      #else
      class pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR  {
         public:
         //friend XX;
         int first; //
         pair< int, const ::TGeoNode* > second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, ::TVector2 > pairlEintcOTVector2gR;
      #else
      class pairlEintcOTVector2gR  {
         public:
         //friend XX;
         int first; //
         ::TVector2 second; //
      };
      #endif

      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TIOFeatures TIOFeatures;
      #else
      class TIOFeatures  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TIOFeatures() throw() {};
         unsigned char fIOBits; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ND {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ND_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND", 0 /*version*/, "./../../inc/prod7_V12/ND__TTRExReconModule__TTPCAnaPath.h", 19,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ND_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ND_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void NDcLcLTND280Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTND280Event(void *p = 0);
   static void *newArray_NDcLcLTND280Event(Long_t size, void *p);
   static void delete_NDcLcLTND280Event(void *p);
   static void deleteArray_NDcLcLTND280Event(void *p);
   static void destruct_NDcLcLTND280Event(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TND280Event*)
   {
      ::ND::TND280Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TND280Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TND280Event", ::ND::TND280Event::Class_Version(), "./../../inc/prod7_V12/ND__TND280Event.h", 21,
                  typeid(::ND::TND280Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TND280Event::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TND280Event) );
      instance.SetNew(&new_NDcLcLTND280Event);
      instance.SetNewArray(&newArray_NDcLcLTND280Event);
      instance.SetDelete(&delete_NDcLcLTND280Event);
      instance.SetDeleteArray(&deleteArray_NDcLcLTND280Event);
      instance.SetDestructor(&destruct_NDcLcLTND280Event);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TND280Event*)
   {
      return GenerateInitInstanceLocal((::ND::TND280Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTDataVector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTDataVector(void *p = 0);
   static void *newArray_NDcLcLTDataVector(Long_t size, void *p);
   static void delete_NDcLcLTDataVector(void *p);
   static void deleteArray_NDcLcLTDataVector(void *p);
   static void destruct_NDcLcLTDataVector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TDataVector*)
   {
      ::ND::TDataVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TDataVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TDataVector", ::ND::TDataVector::Class_Version(), "./../../inc/prod7_V12/ND__TDataVector.h", 20,
                  typeid(::ND::TDataVector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TDataVector::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TDataVector) );
      instance.SetNew(&new_NDcLcLTDataVector);
      instance.SetNewArray(&newArray_NDcLcLTDataVector);
      instance.SetDelete(&delete_NDcLcLTDataVector);
      instance.SetDeleteArray(&deleteArray_NDcLcLTDataVector);
      instance.SetDestructor(&destruct_NDcLcLTDataVector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TDataVector*)
   {
      return GenerateInitInstanceLocal((::ND::TDataVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTData(void *p = 0);
   static void *newArray_NDcLcLTData(Long_t size, void *p);
   static void delete_NDcLcLTData(void *p);
   static void deleteArray_NDcLcLTData(void *p);
   static void destruct_NDcLcLTData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TData*)
   {
      ::ND::TData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TData", ::ND::TData::Class_Version(), "./../../inc/prod7_V12/ND__TData.h", 17,
                  typeid(::ND::TData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TData::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TData) );
      instance.SetNew(&new_NDcLcLTData);
      instance.SetNewArray(&newArray_NDcLcLTData);
      instance.SetDelete(&delete_NDcLcLTData);
      instance.SetDeleteArray(&deleteArray_NDcLcLTData);
      instance.SetDestructor(&destruct_NDcLcLTData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TData*)
   {
      return GenerateInitInstanceLocal((::ND::TData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTDatum_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTDatum(void *p = 0);
   static void *newArray_NDcLcLTDatum(Long_t size, void *p);
   static void delete_NDcLcLTDatum(void *p);
   static void deleteArray_NDcLcLTDatum(void *p);
   static void destruct_NDcLcLTDatum(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TDatum*)
   {
      ::ND::TDatum *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TDatum >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TDatum", ::ND::TDatum::Class_Version(), "./../../inc/prod7_V12/ND__TDatum.h", 18,
                  typeid(::ND::TDatum), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TDatum::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TDatum) );
      instance.SetNew(&new_NDcLcLTDatum);
      instance.SetNewArray(&newArray_NDcLcLTDatum);
      instance.SetDelete(&delete_NDcLcLTDatum);
      instance.SetDeleteArray(&deleteArray_NDcLcLTDatum);
      instance.SetDestructor(&destruct_NDcLcLTDatum);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TDatum*)
   {
      return GenerateInitInstanceLocal((::ND::TDatum*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TDatum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTND280Context_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void NDcLcLTND280Context_Dictionary();
   static void *new_NDcLcLTND280Context(void *p = 0);
   static void *newArray_NDcLcLTND280Context(Long_t size, void *p);
   static void delete_NDcLcLTND280Context(void *p);
   static void deleteArray_NDcLcLTND280Context(void *p);
   static void destruct_NDcLcLTND280Context(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TND280Context*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ND::TND280Context) == sizeof( ::ROOTShadow::Shadow::ND::TND280Context));
      ::ND::TND280Context *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ND::TND280Context),0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TND280Context", "./../../inc/prod7_V12/ND__TND280Context.h", 17,
                  typeid(::ND::TND280Context), ::ROOT::DefineBehavior(ptr, ptr),
                  &NDcLcLTND280Context_ShowMembers, &NDcLcLTND280Context_Dictionary, isa_proxy, 4,
                  sizeof(::ND::TND280Context) );
      instance.SetNew(&new_NDcLcLTND280Context);
      instance.SetNewArray(&newArray_NDcLcLTND280Context);
      instance.SetDelete(&delete_NDcLcLTND280Context);
      instance.SetDeleteArray(&deleteArray_NDcLcLTND280Context);
      instance.SetDestructor(&destruct_NDcLcLTND280Context);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TND280Context*)
   {
      return GenerateInitInstanceLocal((::ND::TND280Context*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TND280Context*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void NDcLcLTND280Context_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Context*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTSHAHashValue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void NDcLcLTSHAHashValue_Dictionary();
   static void *new_NDcLcLTSHAHashValue(void *p = 0);
   static void *newArray_NDcLcLTSHAHashValue(Long_t size, void *p);
   static void delete_NDcLcLTSHAHashValue(void *p);
   static void deleteArray_NDcLcLTSHAHashValue(void *p);
   static void destruct_NDcLcLTSHAHashValue(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSHAHashValue*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ND::TSHAHashValue) == sizeof( ::ROOTShadow::Shadow::ND::TSHAHashValue));
      ::ND::TSHAHashValue *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ND::TSHAHashValue),0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSHAHashValue", "./../../inc/prod7_V12/ND__TSHAHashValue.h", 17,
                  typeid(::ND::TSHAHashValue), ::ROOT::DefineBehavior(ptr, ptr),
                  &NDcLcLTSHAHashValue_ShowMembers, &NDcLcLTSHAHashValue_Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSHAHashValue) );
      instance.SetNew(&new_NDcLcLTSHAHashValue);
      instance.SetNewArray(&newArray_NDcLcLTSHAHashValue);
      instance.SetDelete(&delete_NDcLcLTSHAHashValue);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSHAHashValue);
      instance.SetDestructor(&destruct_NDcLcLTSHAHashValue);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TSHAHashValue*)
   {
      return GenerateInitInstanceLocal((::ND::TSHAHashValue*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSHAHashValue*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void NDcLcLTSHAHashValue_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSHAHashValue*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTAlignmentId_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void NDcLcLTAlignmentId_Dictionary();
   static void *new_NDcLcLTAlignmentId(void *p = 0);
   static void *newArray_NDcLcLTAlignmentId(Long_t size, void *p);
   static void delete_NDcLcLTAlignmentId(void *p);
   static void deleteArray_NDcLcLTAlignmentId(void *p);
   static void destruct_NDcLcLTAlignmentId(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TAlignmentId*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ND::TAlignmentId) == sizeof( ::ROOTShadow::Shadow::ND::TAlignmentId));
      ::ND::TAlignmentId *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ND::TAlignmentId),0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TAlignmentId", "./../../inc/prod7_V12/ND__TAlignmentId.h", 19,
                  typeid(::ND::TAlignmentId), ::ROOT::DefineBehavior(ptr, ptr),
                  &NDcLcLTAlignmentId_ShowMembers, &NDcLcLTAlignmentId_Dictionary, isa_proxy, 4,
                  sizeof(::ND::TAlignmentId) );
      instance.SetNew(&new_NDcLcLTAlignmentId);
      instance.SetNewArray(&newArray_NDcLcLTAlignmentId);
      instance.SetDelete(&delete_NDcLcLTAlignmentId);
      instance.SetDeleteArray(&deleteArray_NDcLcLTAlignmentId);
      instance.SetDestructor(&destruct_NDcLcLTAlignmentId);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TAlignmentId*)
   {
      return GenerateInitInstanceLocal((::ND::TAlignmentId*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TAlignmentId*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void NDcLcLTAlignmentId_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TAlignmentId*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTND280EventcLcLHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTND280EventcLcLHeader(void *p = 0);
   static void *newArray_NDcLcLTND280EventcLcLHeader(Long_t size, void *p);
   static void delete_NDcLcLTND280EventcLcLHeader(void *p);
   static void deleteArray_NDcLcLTND280EventcLcLHeader(void *p);
   static void destruct_NDcLcLTND280EventcLcLHeader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TND280Event::Header*)
   {
      ::ND::TND280Event::Header *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TND280Event::Header >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TND280Event::Header", ::ND::TND280Event::Header::Class_Version(), "./../../inc/prod7_V12/ND__TND280Event.h", 29,
                  typeid(::ND::TND280Event::Header), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TND280Event::Header::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TND280Event::Header) );
      instance.SetNew(&new_NDcLcLTND280EventcLcLHeader);
      instance.SetNewArray(&newArray_NDcLcLTND280EventcLcLHeader);
      instance.SetDelete(&delete_NDcLcLTND280EventcLcLHeader);
      instance.SetDeleteArray(&deleteArray_NDcLcLTND280EventcLcLHeader);
      instance.SetDestructor(&destruct_NDcLcLTND280EventcLcLHeader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TND280Event::Header*)
   {
      return GenerateInitInstanceLocal((::ND::TND280Event::Header*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLNRooTrackerVtx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLNRooTrackerVtx(void *p = 0);
   static void *newArray_NDcLcLNRooTrackerVtx(Long_t size, void *p);
   static void delete_NDcLcLNRooTrackerVtx(void *p);
   static void deleteArray_NDcLcLNRooTrackerVtx(void *p);
   static void destruct_NDcLcLNRooTrackerVtx(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::NRooTrackerVtx*)
   {
      ::ND::NRooTrackerVtx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::NRooTrackerVtx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::NRooTrackerVtx", ::ND::NRooTrackerVtx::Class_Version(), "./../../inc/prod7_V12/ND__NRooTrackerVtx.h", 18,
                  typeid(::ND::NRooTrackerVtx), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::NRooTrackerVtx::Dictionary, isa_proxy, 4,
                  sizeof(::ND::NRooTrackerVtx) );
      instance.SetNew(&new_NDcLcLNRooTrackerVtx);
      instance.SetNewArray(&newArray_NDcLcLNRooTrackerVtx);
      instance.SetDelete(&delete_NDcLcLNRooTrackerVtx);
      instance.SetDeleteArray(&deleteArray_NDcLcLNRooTrackerVtx);
      instance.SetDestructor(&destruct_NDcLcLNRooTrackerVtx);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::NRooTrackerVtx*)
   {
      return GenerateInitInstanceLocal((::ND::NRooTrackerVtx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLJNuBeamFlux_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLJNuBeamFlux(void *p = 0);
   static void *newArray_NDcLcLJNuBeamFlux(Long_t size, void *p);
   static void delete_NDcLcLJNuBeamFlux(void *p);
   static void deleteArray_NDcLcLJNuBeamFlux(void *p);
   static void destruct_NDcLcLJNuBeamFlux(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::JNuBeamFlux*)
   {
      ::ND::JNuBeamFlux *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::JNuBeamFlux >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::JNuBeamFlux", ::ND::JNuBeamFlux::Class_Version(), "./../../inc/prod7_V12/ND__JNuBeamFlux.h", 18,
                  typeid(::ND::JNuBeamFlux), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::JNuBeamFlux::Dictionary, isa_proxy, 4,
                  sizeof(::ND::JNuBeamFlux) );
      instance.SetNew(&new_NDcLcLJNuBeamFlux);
      instance.SetNewArray(&newArray_NDcLcLJNuBeamFlux);
      instance.SetDelete(&delete_NDcLcLJNuBeamFlux);
      instance.SetDeleteArray(&deleteArray_NDcLcLJNuBeamFlux);
      instance.SetDestructor(&destruct_NDcLcLJNuBeamFlux);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::JNuBeamFlux*)
   {
      return GenerateInitInstanceLocal((::ND::JNuBeamFlux*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLRooTrackerVtxBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLRooTrackerVtxBase(void *p = 0);
   static void *newArray_NDcLcLRooTrackerVtxBase(Long_t size, void *p);
   static void delete_NDcLcLRooTrackerVtxBase(void *p);
   static void deleteArray_NDcLcLRooTrackerVtxBase(void *p);
   static void destruct_NDcLcLRooTrackerVtxBase(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::RooTrackerVtxBase*)
   {
      ::ND::RooTrackerVtxBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::RooTrackerVtxBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::RooTrackerVtxBase", ::ND::RooTrackerVtxBase::Class_Version(), "./../../inc/prod7_V12/ND__RooTrackerVtxBase.h", 17,
                  typeid(::ND::RooTrackerVtxBase), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::RooTrackerVtxBase::Dictionary, isa_proxy, 4,
                  sizeof(::ND::RooTrackerVtxBase) );
      instance.SetNew(&new_NDcLcLRooTrackerVtxBase);
      instance.SetNewArray(&newArray_NDcLcLRooTrackerVtxBase);
      instance.SetDelete(&delete_NDcLcLRooTrackerVtxBase);
      instance.SetDeleteArray(&deleteArray_NDcLcLRooTrackerVtxBase);
      instance.SetDestructor(&destruct_NDcLcLRooTrackerVtxBase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::RooTrackerVtxBase*)
   {
      return GenerateInitInstanceLocal((::ND::RooTrackerVtxBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLGRooTrackerVtx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLGRooTrackerVtx(void *p = 0);
   static void *newArray_NDcLcLGRooTrackerVtx(Long_t size, void *p);
   static void delete_NDcLcLGRooTrackerVtx(void *p);
   static void deleteArray_NDcLcLGRooTrackerVtx(void *p);
   static void destruct_NDcLcLGRooTrackerVtx(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::GRooTrackerVtx*)
   {
      ::ND::GRooTrackerVtx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::GRooTrackerVtx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::GRooTrackerVtx", ::ND::GRooTrackerVtx::Class_Version(), "./../../inc/prod7_V12/ND__GRooTrackerVtx.h", 18,
                  typeid(::ND::GRooTrackerVtx), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::GRooTrackerVtx::Dictionary, isa_proxy, 4,
                  sizeof(::ND::GRooTrackerVtx) );
      instance.SetNew(&new_NDcLcLGRooTrackerVtx);
      instance.SetNewArray(&newArray_NDcLcLGRooTrackerVtx);
      instance.SetDelete(&delete_NDcLcLGRooTrackerVtx);
      instance.SetDeleteArray(&deleteArray_NDcLcLGRooTrackerVtx);
      instance.SetDestructor(&destruct_NDcLcLGRooTrackerVtx);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::GRooTrackerVtx*)
   {
      return GenerateInitInstanceLocal((::ND::GRooTrackerVtx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TTRExReconModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTTRExReconModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TTRExReconModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TTRExReconModule__TTPCAnaPath.h", 20,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTTRExReconModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTTRExReconModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTTRExReconModulecLcLTTPCAnaPattern_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p = 0);
   static void *newArray_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(Long_t size, void *p);
   static void delete_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p);
   static void deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p);
   static void destruct_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTRExReconModule::TTPCAnaPattern*)
   {
      ::ND::TTRExReconModule::TTPCAnaPattern *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTRExReconModule::TTPCAnaPattern >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTRExReconModule::TTPCAnaPattern", ::ND::TTRExReconModule::TTPCAnaPattern::Class_Version(), "./../../inc/prod7_V12/ND__TTRExReconModule__TTPCAnaPattern.h", 21,
                  typeid(::ND::TTRExReconModule::TTPCAnaPattern), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTRExReconModule::TTPCAnaPattern::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTRExReconModule::TTPCAnaPattern) );
      instance.SetNew(&new_NDcLcLTTRExReconModulecLcLTTPCAnaPattern);
      instance.SetNewArray(&newArray_NDcLcLTTRExReconModulecLcLTTPCAnaPattern);
      instance.SetDelete(&delete_NDcLcLTTRExReconModulecLcLTTPCAnaPattern);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaPattern);
      instance.SetDestructor(&destruct_NDcLcLTTRExReconModulecLcLTTPCAnaPattern);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTRExReconModule::TTPCAnaPattern*)
   {
      return GenerateInitInstanceLocal((::ND::TTRExReconModule::TTPCAnaPattern*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPattern*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TGeometrySummaryModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTGeometrySummaryModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TGeometrySummaryModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TGeometrySummaryModule__TTPCMicroMegasVolumes.h", 23,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTGeometrySummaryModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTGeometrySummaryModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p = 0);
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(Long_t size, void *p);
   static void delete_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p);
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p);
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)
   {
      ::ND::TGeometrySummaryModule::TDetectorBoundingBox *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGeometrySummaryModule::TDetectorBoundingBox >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGeometrySummaryModule::TDetectorBoundingBox", ::ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Version(), "./../../inc/prod7_V12/ND__TGeometrySummaryModule__TDetectorBoundingBox.h", 21,
                  typeid(::ND::TGeometrySummaryModule::TDetectorBoundingBox), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGeometrySummaryModule::TDetectorBoundingBox::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGeometrySummaryModule::TDetectorBoundingBox) );
      instance.SetNew(&new_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetNewArray(&newArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetDelete(&delete_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetDestructor(&destruct_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)
   {
      return GenerateInitInstanceLocal((::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p = 0);
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(Long_t size, void *p);
   static void delete_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p);
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p);
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)
   {
      ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGeometrySummaryModule::TTPCMicroMegasVolumes", ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Version(), "./../../inc/prod7_V12/ND__TGeometrySummaryModule__TTPCMicroMegasVolumes.h", 24,
                  typeid(::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes) );
      instance.SetNew(&new_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetNewArray(&newArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetDelete(&delete_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetDestructor(&destruct_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)
   {
      return GenerateInitInstanceLocal((::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlEintcOconstsPTGeoNodemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcOconstsPTGeoNodemUgR_Dictionary();
   static void *new_pairlEintcOconstsPTGeoNodemUgR(void *p = 0);
   static void *newArray_pairlEintcOconstsPTGeoNodemUgR(Long_t size, void *p);
   static void delete_pairlEintcOconstsPTGeoNodemUgR(void *p);
   static void deleteArray_pairlEintcOconstsPTGeoNodemUgR(void *p);
   static void destruct_pairlEintcOconstsPTGeoNodemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,const TGeoNode*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<int,const TGeoNode*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,const TGeoNode*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,const TGeoNode*>", "prec_stl/utility", 17,
                  typeid(pair<int,const TGeoNode*>), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlEintcOconstsPTGeoNodemUgR_ShowMembers, &pairlEintcOconstsPTGeoNodemUgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,const TGeoNode*>) );
      instance.SetNew(&new_pairlEintcOconstsPTGeoNodemUgR);
      instance.SetNewArray(&newArray_pairlEintcOconstsPTGeoNodemUgR);
      instance.SetDelete(&delete_pairlEintcOconstsPTGeoNodemUgR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOconstsPTGeoNodemUgR);
      instance.SetDestructor(&destruct_pairlEintcOconstsPTGeoNodemUgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<int,const TGeoNode*>*)
   {
      return GenerateInitInstanceLocal((pair<int,const TGeoNode*>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,const TGeoNode*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcOconstsPTGeoNodemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<int,const TGeoNode*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary();
   static void *new_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p = 0);
   static void *newArray_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(Long_t size, void *p);
   static void delete_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);
   static void deleteArray_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);
   static void destruct_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,pair<int,const TGeoNode*> >*)
   {
      // Make sure the shadow class has the right sizeof
      pair<int,pair<int,const TGeoNode*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,pair<int,const TGeoNode*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,pair<int,const TGeoNode*> >", "prec_stl/utility", 17,
                  typeid(pair<int,pair<int,const TGeoNode*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_ShowMembers, &pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,pair<int,const TGeoNode*> >) );
      instance.SetNew(&new_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetNewArray(&newArray_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDelete(&delete_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDestructor(&destruct_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<int,pair<int,const TGeoNode*> >*)
   {
      return GenerateInitInstanceLocal((pair<int,pair<int,const TGeoNode*> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,pair<int,const TGeoNode*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<int,pair<int,const TGeoNode*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ND {
namespace TBeamSummaryDataModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTBeamSummaryDataModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TBeamSummaryDataModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TBeamSummaryDataModule__TBeamSummaryData.h", 21,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTBeamSummaryDataModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTBeamSummaryDataModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p = 0);
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(Long_t size, void *p);
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p);
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p);
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)
   {
      ::ND::TBeamSummaryDataModule::TBeamSummaryData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TBeamSummaryDataModule::TBeamSummaryData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TBeamSummaryDataModule::TBeamSummaryData", ::ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Version(), "./../../inc/prod7_V12/ND__TBeamSummaryDataModule__TBeamSummaryData.h", 22,
                  typeid(::ND::TBeamSummaryDataModule::TBeamSummaryData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TBeamSummaryDataModule::TBeamSummaryData::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TBeamSummaryDataModule::TBeamSummaryData) );
      instance.SetNew(&new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetNewArray(&newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetDelete(&delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetDeleteArray(&deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetDestructor(&destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)
   {
      return GenerateInitInstanceLocal((::ND::TBeamSummaryDataModule::TBeamSummaryData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p = 0);
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(Long_t size, void *p);
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p);
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p);
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)
   {
      ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData", ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Version(), "./../../inc/prod7_V12/ND__TBeamSummaryDataModule__TBeamSummaryData.h", 30,
                  typeid(::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData) );
      instance.SetNew(&new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetNewArray(&newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetDelete(&delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetDeleteArray(&deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetDestructor(&destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)
   {
      return GenerateInitInstanceLocal((::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TFgdOnlyModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTFgdOnlyModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TFgdOnlyModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TFgdOnlyModule__TFgd2DCluster.h", 24,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTFgdOnlyModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTFgdOnlyModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)
   {
      ::ND::TFgdOnlyModule::TFgd2DIsoTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd2DIsoTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd2DIsoTrack", ::ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Version(), "./../../inc/prod7_V12/ND__TFgdOnlyModule__TFgd2DIsoTrack.h", 25,
                  typeid(::ND::TFgdOnlyModule::TFgd2DIsoTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd2DIsoTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd2DIsoTrack) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)
   {
      ::ND::TFgdOnlyModule::TFgd3DIsoTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd3DIsoTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd3DIsoTrack", ::ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Version(), "./../../inc/prod7_V12/ND__TFgdOnlyModule__TFgd3DIsoTrack.h", 25,
                  typeid(::ND::TFgdOnlyModule::TFgd3DIsoTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd3DIsoTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd3DIsoTrack) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)
   {
      ::ND::TFgdOnlyModule::TFgd3DShowerPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd3DShowerPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd3DShowerPID", ::ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Version(), "./../../inc/prod7_V12/ND__TFgdOnlyModule__TFgd3DShowerPID.h", 24,
                  typeid(::ND::TFgdOnlyModule::TFgd3DShowerPID), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd3DShowerPID::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd3DShowerPID) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd3DShowerPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)
   {
      ::ND::TFgdOnlyModule::TFgd3DShowerHyp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd3DShowerHyp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd3DShowerHyp", ::ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Version(), "./../../inc/prod7_V12/ND__TFgdOnlyModule__TFgd3DShowerHyp.h", 22,
                  typeid(::ND::TFgdOnlyModule::TFgd3DShowerHyp), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd3DShowerHyp::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd3DShowerHyp) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTFgdOnlyModulecLcLTFgd2DCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd2DCluster*)
   {
      ::ND::TFgdOnlyModule::TFgd2DCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd2DCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd2DCluster", ::ND::TFgdOnlyModule::TFgd2DCluster::Class_Version(), "./../../inc/prod7_V12/ND__TFgdOnlyModule__TFgd2DCluster.h", 25,
                  typeid(::ND::TFgdOnlyModule::TFgd2DCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd2DCluster::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd2DCluster) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd2DCluster*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd2DCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TSmrdReconModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTSmrdReconModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TSmrdReconModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TSmrdReconModule__TSmrdIsoTrack.h", 23,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTSmrdReconModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTSmrdReconModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTSmrdReconModulecLcLTSmrdReconHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p = 0);
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(Long_t size, void *p);
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p);
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p);
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSmrdReconModule::TSmrdReconHit*)
   {
      ::ND::TSmrdReconModule::TSmrdReconHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSmrdReconModule::TSmrdReconHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSmrdReconModule::TSmrdReconHit", ::ND::TSmrdReconModule::TSmrdReconHit::Class_Version(), "./../../inc/prod7_V12/ND__TSmrdReconModule__TSmrdReconHit.h", 21,
                  typeid(::ND::TSmrdReconModule::TSmrdReconHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TSmrdReconModule::TSmrdReconHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSmrdReconModule::TSmrdReconHit) );
      instance.SetNew(&new_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetNewArray(&newArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetDelete(&delete_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetDestructor(&destruct_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TSmrdReconModule::TSmrdReconHit*)
   {
      return GenerateInitInstanceLocal((::ND::TSmrdReconModule::TSmrdReconHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p = 0);
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(Long_t size, void *p);
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p);
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p);
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSmrdReconModule::TSmrdIsoTrack*)
   {
      ::ND::TSmrdReconModule::TSmrdIsoTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSmrdReconModule::TSmrdIsoTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSmrdReconModule::TSmrdIsoTrack", ::ND::TSmrdReconModule::TSmrdIsoTrack::Class_Version(), "./../../inc/prod7_V12/ND__TSmrdReconModule__TSmrdIsoTrack.h", 24,
                  typeid(::ND::TSmrdReconModule::TSmrdIsoTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TSmrdReconModule::TSmrdIsoTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSmrdReconModule::TSmrdIsoTrack) );
      instance.SetNew(&new_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetNewArray(&newArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetDelete(&delete_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetDestructor(&destruct_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TSmrdReconModule::TSmrdIsoTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TSmrdReconModule::TSmrdIsoTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TTrackerReconModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTTrackerReconModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TTrackerReconModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TTrackerReconModule__TTrackOther.h", 24,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTTrackerReconModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTTrackerReconModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTTrackerVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerVertex*)
   {
      ::ND::TTrackerReconModule::TTrackerVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerVertex", ::ND::TTrackerReconModule::TTrackerVertex::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TTrackerVertex.h", 22,
                  typeid(::ND::TTrackerReconModule::TTrackerVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerVertex) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTTrackerResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerResult*)
   {
      ::ND::TTrackerReconModule::TTrackerResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerResult", ::ND::TTrackerReconModule::TTrackerResult::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TTrackerResult.h", 31,
                  typeid(::ND::TTrackerReconModule::TTrackerResult), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerResult::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerResult) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerResult*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTTrueParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrueParticle*)
   {
      ::ND::TTrackerReconModule::TTrueParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrueParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrueParticle", ::ND::TTrackerReconModule::TTrueParticle::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TTrueParticle.h", 21,
                  typeid(::ND::TTrackerReconModule::TTrueParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrueParticle::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrueParticle) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrueParticle*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrueParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrueVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrueVertex(void *p = 0);
   static void *newArray_NDcLcLTTrueVertex(Long_t size, void *p);
   static void delete_NDcLcLTTrueVertex(void *p);
   static void deleteArray_NDcLcLTTrueVertex(void *p);
   static void destruct_NDcLcLTTrueVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrueVertex*)
   {
      ::ND::TTrueVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrueVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrueVertex", ::ND::TTrueVertex::Class_Version(), "./../../inc/prod7_V12/ND__TTrueVertex.h", 18,
                  typeid(::ND::TTrueVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrueVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrueVertex) );
      instance.SetNew(&new_NDcLcLTTrueVertex);
      instance.SetNewArray(&newArray_NDcLcLTTrueVertex);
      instance.SetDelete(&delete_NDcLcLTTrueVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrueVertex);
      instance.SetDestructor(&destruct_NDcLcLTTrueVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrueVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TTrueVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTTrackerConstituent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerConstituent*)
   {
      ::ND::TTrackerReconModule::TTrackerConstituent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerConstituent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerConstituent", ::ND::TTrackerReconModule::TTrackerConstituent::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TTrackerConstituent.h", 24,
                  typeid(::ND::TTrackerReconModule::TTrackerConstituent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerConstituent::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerConstituent) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerConstituent*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerConstituent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTTPCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTPCTrack*)
   {
      ::ND::TTrackerReconModule::TTPCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTPCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTPCTrack", ::ND::TTrackerReconModule::TTPCTrack::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TTPCTrack.h", 22,
                  typeid(::ND::TTrackerReconModule::TTPCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTPCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTPCTrack) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTPCTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTPCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTFGDTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TFGDTrack*)
   {
      ::ND::TTrackerReconModule::TFGDTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TFGDTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TFGDTrack", ::ND::TTrackerReconModule::TFGDTrack::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TFGDTrack.h", 22,
                  typeid(::ND::TTrackerReconModule::TFGDTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TFGDTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TFGDTrack) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TFGDTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TFGDTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTTrackerNode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerNode*)
   {
      ::ND::TTrackerReconModule::TTrackerNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerNode", ::ND::TTrackerReconModule::TTrackerNode::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TTrackerNode.h", 22,
                  typeid(::ND::TTrackerReconModule::TTrackerNode), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerNode::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerNode) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerNode*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTTrackOther_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackOther(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackOther*)
   {
      ::ND::TTrackerReconModule::TTrackOther *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackOther >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackOther", ::ND::TTrackerReconModule::TTrackOther::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TTrackOther.h", 25,
                  typeid(::ND::TTrackerReconModule::TTrackOther), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackOther::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackOther) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackOther);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackOther*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackOther*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerReconModulecLcLTUnusedHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TUnusedHit*)
   {
      ::ND::TTrackerReconModule::TUnusedHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TUnusedHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TUnusedHit", ::ND::TTrackerReconModule::TUnusedHit::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerReconModule__TUnusedHit.h", 21,
                  typeid(::ND::TTrackerReconModule::TUnusedHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TUnusedHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TUnusedHit) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TUnusedHit*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TUnusedHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TGlobalReconModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTGlobalReconModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TGlobalReconModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TGlobalReconModule__TSMRDHit.h", 20,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTGlobalReconModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTGlobalReconModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTTpcPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTpcPID(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TTpcPID*)
   {
      ::ND::TGlobalReconModule::TTpcPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TTpcPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TTpcPID", ::ND::TGlobalReconModule::TTpcPID::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TTpcPID.h", 26,
                  typeid(::ND::TGlobalReconModule::TTpcPID), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TTpcPID::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TTpcPID) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTTpcPID);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTTpcPID);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTTpcPID);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTTpcPID);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTTpcPID);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TTpcPID*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TTpcPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTpcPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrueParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrueParticle(void *p = 0);
   static void *newArray_NDcLcLTTrueParticle(Long_t size, void *p);
   static void delete_NDcLcLTTrueParticle(void *p);
   static void deleteArray_NDcLcLTTrueParticle(void *p);
   static void destruct_NDcLcLTTrueParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrueParticle*)
   {
      ::ND::TTrueParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrueParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrueParticle", ::ND::TTrueParticle::Class_Version(), "./../../inc/prod7_V12/ND__TTrueParticle.h", 18,
                  typeid(::ND::TTrueParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrueParticle::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrueParticle) );
      instance.SetNew(&new_NDcLcLTTrueParticle);
      instance.SetNewArray(&newArray_NDcLcLTTrueParticle);
      instance.SetDelete(&delete_NDcLcLTTrueParticle);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrueParticle);
      instance.SetDestructor(&destruct_NDcLcLTTrueParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrueParticle*)
   {
      return GenerateInitInstanceLocal((::ND::TTrueParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTGlobalVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalVertex*)
   {
      ::ND::TGlobalReconModule::TGlobalVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalVertex", ::ND::TGlobalReconModule::TGlobalVertex::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TGlobalVertex.h", 26,
                  typeid(::ND::TGlobalReconModule::TGlobalVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalVertex) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTVertexConstituent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TVertexConstituent*)
   {
      ::ND::TGlobalReconModule::TVertexConstituent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TVertexConstituent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TVertexConstituent", ::ND::TGlobalReconModule::TVertexConstituent::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TVertexConstituent.h", 21,
                  typeid(::ND::TGlobalReconModule::TVertexConstituent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TVertexConstituent::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TVertexConstituent) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TVertexConstituent*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TVertexConstituent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTFgdTimeBin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TFgdTimeBin*)
   {
      ::ND::TGlobalReconModule::TFgdTimeBin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TFgdTimeBin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TFgdTimeBin", ::ND::TGlobalReconModule::TFgdTimeBin::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TFgdTimeBin.h", 26,
                  typeid(::ND::TGlobalReconModule::TFgdTimeBin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TFgdTimeBin::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TFgdTimeBin) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TFgdTimeBin*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TFgdTimeBin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTOutermostHits_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TOutermostHits*)
   {
      ::ND::TGlobalReconModule::TOutermostHits *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TOutermostHits >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TOutermostHits", ::ND::TGlobalReconModule::TOutermostHits::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TOutermostHits.h", 21,
                  typeid(::ND::TGlobalReconModule::TOutermostHits), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TOutermostHits::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TOutermostHits) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TOutermostHits*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TOutermostHits*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTGlobalHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalHit*)
   {
      ::ND::TGlobalReconModule::TGlobalHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalHit", ::ND::TGlobalReconModule::TGlobalHit::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TGlobalHit.h", 21,
                  typeid(::ND::TGlobalReconModule::TGlobalHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalHit) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalHit*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTGlobalPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalPID*)
   {
      ::ND::TGlobalReconModule::TGlobalPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalPID", ::ND::TGlobalReconModule::TGlobalPID::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TGlobalPID.h", 36,
                  typeid(::ND::TGlobalReconModule::TGlobalPID), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalPID::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalPID) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalPID*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTTPCObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TTPCObject*)
   {
      ::ND::TGlobalReconModule::TTPCObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TTPCObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TTPCObject", ::ND::TGlobalReconModule::TTPCObject::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TTPCObject.h", 22,
                  typeid(::ND::TGlobalReconModule::TTPCObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TTPCObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TTPCObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTTPCObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TTPCObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TTPCObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTSubBaseObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSubBaseObject(void *p = 0);
   static void *newArray_NDcLcLTSubBaseObject(Long_t size, void *p);
   static void delete_NDcLcLTSubBaseObject(void *p);
   static void deleteArray_NDcLcLTSubBaseObject(void *p);
   static void destruct_NDcLcLTSubBaseObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSubBaseObject*)
   {
      ::ND::TSubBaseObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSubBaseObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSubBaseObject", ::ND::TSubBaseObject::Class_Version(), "./../../inc/prod7_V12/ND__TSubBaseObject.h", 20,
                  typeid(::ND::TSubBaseObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TSubBaseObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSubBaseObject) );
      instance.SetNew(&new_NDcLcLTSubBaseObject);
      instance.SetNewArray(&newArray_NDcLcLTSubBaseObject);
      instance.SetDelete(&delete_NDcLcLTSubBaseObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSubBaseObject);
      instance.SetDestructor(&destruct_NDcLcLTSubBaseObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TSubBaseObject*)
   {
      return GenerateInitInstanceLocal((::ND::TSubBaseObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTFGDObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFGDObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TFGDObject*)
   {
      ::ND::TGlobalReconModule::TFGDObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TFGDObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TFGDObject", ::ND::TGlobalReconModule::TFGDObject::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TFGDObject.h", 23,
                  typeid(::ND::TGlobalReconModule::TFGDObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TFGDObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TFGDObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTFGDObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TFGDObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TFGDObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTECALObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTECALObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTECALObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTECALObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTECALObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTECALObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TECALObject*)
   {
      ::ND::TGlobalReconModule::TECALObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TECALObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TECALObject", ::ND::TGlobalReconModule::TECALObject::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TECALObject.h", 21,
                  typeid(::ND::TGlobalReconModule::TECALObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TECALObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TECALObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTECALObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TECALObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TECALObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTSubBaseShowerObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSubBaseShowerObject(void *p = 0);
   static void *newArray_NDcLcLTSubBaseShowerObject(Long_t size, void *p);
   static void delete_NDcLcLTSubBaseShowerObject(void *p);
   static void deleteArray_NDcLcLTSubBaseShowerObject(void *p);
   static void destruct_NDcLcLTSubBaseShowerObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSubBaseShowerObject*)
   {
      ::ND::TSubBaseShowerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSubBaseShowerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSubBaseShowerObject", ::ND::TSubBaseShowerObject::Class_Version(), "./../../inc/prod7_V12/ND__TSubBaseShowerObject.h", 18,
                  typeid(::ND::TSubBaseShowerObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TSubBaseShowerObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSubBaseShowerObject) );
      instance.SetNew(&new_NDcLcLTSubBaseShowerObject);
      instance.SetNewArray(&newArray_NDcLcLTSubBaseShowerObject);
      instance.SetDelete(&delete_NDcLcLTSubBaseShowerObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSubBaseShowerObject);
      instance.SetDestructor(&destruct_NDcLcLTSubBaseShowerObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TSubBaseShowerObject*)
   {
      return GenerateInitInstanceLocal((::ND::TSubBaseShowerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTP0DObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTP0DObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TP0DObject*)
   {
      ::ND::TGlobalReconModule::TP0DObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TP0DObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TP0DObject", ::ND::TGlobalReconModule::TP0DObject::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TP0DObject.h", 22,
                  typeid(::ND::TGlobalReconModule::TP0DObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TP0DObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TP0DObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTP0DObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TP0DObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TP0DObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTSMRDObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TSMRDObject*)
   {
      ::ND::TGlobalReconModule::TSMRDObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TSMRDObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TSMRDObject", ::ND::TGlobalReconModule::TSMRDObject::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TSMRDObject.h", 20,
                  typeid(::ND::TGlobalReconModule::TSMRDObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TSMRDObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TSMRDObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TSMRDObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TSMRDObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTTrackerObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TTrackerObject*)
   {
      ::ND::TGlobalReconModule::TTrackerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TTrackerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TTrackerObject", ::ND::TGlobalReconModule::TTrackerObject::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TTrackerObject.h", 20,
                  typeid(::ND::TGlobalReconModule::TTrackerObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TTrackerObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TTrackerObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TTrackerObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TTrackerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)
   {
      ::ND::TGlobalReconModule::TGlobalPIDAlternate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalPIDAlternate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalPIDAlternate", ::ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TGlobalPIDAlternate.h", 22,
                  typeid(::ND::TGlobalReconModule::TGlobalPIDAlternate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalPIDAlternate::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalPIDAlternate) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalPIDAlternate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlEintcOTVector2gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcOTVector2gR_Dictionary();
   static void *new_pairlEintcOTVector2gR(void *p = 0);
   static void *newArray_pairlEintcOTVector2gR(Long_t size, void *p);
   static void delete_pairlEintcOTVector2gR(void *p);
   static void deleteArray_pairlEintcOTVector2gR(void *p);
   static void destruct_pairlEintcOTVector2gR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,TVector2>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<int,TVector2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,TVector2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,TVector2>", "prec_stl/utility", 17,
                  typeid(pair<int,TVector2>), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlEintcOTVector2gR_ShowMembers, &pairlEintcOTVector2gR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,TVector2>) );
      instance.SetNew(&new_pairlEintcOTVector2gR);
      instance.SetNewArray(&newArray_pairlEintcOTVector2gR);
      instance.SetDelete(&delete_pairlEintcOTVector2gR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOTVector2gR);
      instance.SetDestructor(&destruct_pairlEintcOTVector2gR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<int,TVector2>*)
   {
      return GenerateInitInstanceLocal((pair<int,TVector2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,TVector2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcOTVector2gR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<int,TVector2>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTTPCOtherObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TTPCOtherObject*)
   {
      ::ND::TGlobalReconModule::TTPCOtherObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TTPCOtherObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TTPCOtherObject", ::ND::TGlobalReconModule::TTPCOtherObject::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TTPCOtherObject.h", 23,
                  typeid(::ND::TGlobalReconModule::TTPCOtherObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TTPCOtherObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TTPCOtherObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TTPCOtherObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TTPCOtherObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTGlobalReconModulecLcLTSMRDHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TSMRDHit*)
   {
      ::ND::TGlobalReconModule::TSMRDHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TSMRDHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TSMRDHit", ::ND::TGlobalReconModule::TSMRDHit::Class_Version(), "./../../inc/prod7_V12/ND__TGlobalReconModule__TSMRDHit.h", 21,
                  typeid(::ND::TGlobalReconModule::TSMRDHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TSMRDHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TSMRDHit) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TSMRDHit*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TSMRDHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TTrackerECALReconModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTTrackerECALReconModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TTrackerECALReconModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TTrackerECALReconModule__TECALReconUnmatchedObject.h", 20,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTTrackerECALReconModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTTrackerECALReconModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconObject*)
   {
      ::ND::TTrackerECALReconModule::TECALReconObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconObject", ::ND::TTrackerECALReconModule::TECALReconObject::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerECALReconModule__TECALReconObject.h", 26,
                  typeid(::ND::TTrackerECALReconModule::TECALReconObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconObject) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconObject*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconTrack*)
   {
      ::ND::TTrackerECALReconModule::TECALReconTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconTrack", ::ND::TTrackerECALReconModule::TECALReconTrack::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerECALReconModule__TECALReconTrack.h", 22,
                  typeid(::ND::TTrackerECALReconModule::TECALReconTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconTrack) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconShower*)
   {
      ::ND::TTrackerECALReconModule::TECALReconShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconShower", ::ND::TTrackerECALReconModule::TECALReconShower::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerECALReconModule__TECALReconShower.h", 22,
                  typeid(::ND::TTrackerECALReconModule::TECALReconShower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconShower::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconShower) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconShower*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconCluster*)
   {
      ::ND::TTrackerECALReconModule::TECALReconCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconCluster", ::ND::TTrackerECALReconModule::TECALReconCluster::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerECALReconModule__TECALReconCluster.h", 21,
                  typeid(::ND::TTrackerECALReconModule::TECALReconCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconCluster::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconCluster) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconCluster*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)
   {
      ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconUnmatchedObject", ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Version(), "./../../inc/prod7_V12/ND__TTrackerECALReconModule__TECALReconUnmatchedObject.h", 21,
                  typeid(::ND::TTrackerECALReconModule::TECALReconUnmatchedObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconUnmatchedObject) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TP0DECALReconModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTP0DECALReconModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TP0DECALReconModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TP0DECALReconModule__TP0DECALLayerCharge.h", 20,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTP0DECALReconModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTP0DECALReconModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p = 0);
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(Long_t size, void *p);
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p);
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p);
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)
   {
      ::ND::TP0DECALReconModule::TP0DECALReconTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DECALReconModule::TP0DECALReconTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DECALReconModule::TP0DECALReconTrack", ::ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Version(), "./../../inc/prod7_V12/ND__TP0DECALReconModule__TP0DECALReconTrack.h", 24,
                  typeid(::ND::TP0DECALReconModule::TP0DECALReconTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DECALReconModule::TP0DECALReconTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DECALReconModule::TP0DECALReconTrack) );
      instance.SetNew(&new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetNewArray(&newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetDelete(&delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetDestructor(&destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DECALReconModule::TP0DECALReconTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p = 0);
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(Long_t size, void *p);
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p);
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p);
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DECALReconModule::TP0DECALReconShower*)
   {
      ::ND::TP0DECALReconModule::TP0DECALReconShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DECALReconModule::TP0DECALReconShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DECALReconModule::TP0DECALReconShower", ::ND::TP0DECALReconModule::TP0DECALReconShower::Class_Version(), "./../../inc/prod7_V12/ND__TP0DECALReconModule__TP0DECALReconShower.h", 24,
                  typeid(::ND::TP0DECALReconModule::TP0DECALReconShower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DECALReconModule::TP0DECALReconShower::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DECALReconModule::TP0DECALReconShower) );
      instance.SetNew(&new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetNewArray(&newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetDelete(&delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetDestructor(&destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DECALReconModule::TP0DECALReconShower*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DECALReconModule::TP0DECALReconShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p = 0);
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(Long_t size, void *p);
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p);
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p);
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DECALReconModule::TP0DECALLayerCharge*)
   {
      ::ND::TP0DECALReconModule::TP0DECALLayerCharge *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DECALReconModule::TP0DECALLayerCharge >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DECALReconModule::TP0DECALLayerCharge", ::ND::TP0DECALReconModule::TP0DECALLayerCharge::Class_Version(), "./../../inc/prod7_V12/ND__TP0DECALReconModule__TP0DECALLayerCharge.h", 21,
                  typeid(::ND::TP0DECALReconModule::TP0DECALLayerCharge), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DECALReconModule::TP0DECALLayerCharge::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DECALReconModule::TP0DECALLayerCharge) );
      instance.SetNew(&new_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge);
      instance.SetNewArray(&newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge);
      instance.SetDelete(&delete_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge);
      instance.SetDestructor(&destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DECALReconModule::TP0DECALLayerCharge*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DECALReconModule::TP0DECALLayerCharge*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALLayerCharge*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TP0DReconModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTP0DReconModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TP0DReconModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DCluster.h", 23,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTP0DReconModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTP0DReconModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DAlgoRes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DAlgoRes*)
   {
      ::ND::TP0DReconModule::TP0DAlgoRes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DAlgoRes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DAlgoRes", ::ND::TP0DReconModule::TP0DAlgoRes::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DAlgoRes.h", 23,
                  typeid(::ND::TP0DReconModule::TP0DAlgoRes), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DAlgoRes::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DAlgoRes) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DAlgoRes*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DAlgoRes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DVertex(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DVertex*)
   {
      ::ND::TP0DReconModule::TP0DVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DVertex", ::ND::TP0DReconModule::TP0DVertex::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DVertex.h", 24,
                  typeid(::ND::TP0DReconModule::TP0DVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DVertex) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DParticle(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DParticle*)
   {
      ::ND::TP0DReconModule::TP0DParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DParticle", ::ND::TP0DReconModule::TP0DParticle::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DParticle.h", 27,
                  typeid(::ND::TP0DReconModule::TP0DParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DParticle::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DParticle) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DParticle*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DShower(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DShower(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DShower(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DShower(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DShower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DShower*)
   {
      ::ND::TP0DReconModule::TP0DShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DShower", ::ND::TP0DReconModule::TP0DShower::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DShower.h", 25,
                  typeid(::ND::TP0DReconModule::TP0DShower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DShower::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DShower) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DShower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DShower*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DTrack(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DTrack*)
   {
      ::ND::TP0DReconModule::TP0DTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DTrack", ::ND::TP0DReconModule::TP0DTrack::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DTrack.h", 25,
                  typeid(::ND::TP0DReconModule::TP0DTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DTrack) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DNode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DNode(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DNode(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DNode(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DNode(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DNode(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DNode*)
   {
      ::ND::TP0DReconModule::TP0DNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DNode", ::ND::TP0DReconModule::TP0DNode::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DNode.h", 24,
                  typeid(::ND::TP0DReconModule::TP0DNode), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DNode::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DNode) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DNode);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DNode*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DHit(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DHit(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DHit(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DHit(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DHit*)
   {
      ::ND::TP0DReconModule::TP0DHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DHit", ::ND::TP0DReconModule::TP0DHit::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DHit.h", 20,
                  typeid(::ND::TP0DReconModule::TP0DHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DHit) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DHit*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTP0DReconModulecLcLTP0DCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DCluster(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DCluster*)
   {
      ::ND::TP0DReconModule::TP0DCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DCluster", ::ND::TP0DReconModule::TP0DCluster::Class_Version(), "./../../inc/prod7_V12/ND__TP0DReconModule__TP0DCluster.h", 24,
                  typeid(::ND::TP0DReconModule::TP0DCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DCluster::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DCluster) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DCluster*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TTruthVerticesModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTTruthVerticesModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TTruthVerticesModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TTruthVerticesModule__TTruthVertex.h", 23,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTTruthVerticesModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTTruthVerticesModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTTruthVerticesModulecLcLTTruthVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p = 0);
   static void *newArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(Long_t size, void *p);
   static void delete_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p);
   static void deleteArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p);
   static void destruct_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTruthVerticesModule::TTruthVertex*)
   {
      ::ND::TTruthVerticesModule::TTruthVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTruthVerticesModule::TTruthVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTruthVerticesModule::TTruthVertex", ::ND::TTruthVerticesModule::TTruthVertex::Class_Version(), "./../../inc/prod7_V12/ND__TTruthVerticesModule__TTruthVertex.h", 24,
                  typeid(::ND::TTruthVerticesModule::TTruthVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTruthVerticesModule::TTruthVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTruthVerticesModule::TTruthVertex) );
      instance.SetNew(&new_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetNewArray(&newArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetDelete(&delete_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetDestructor(&destruct_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTruthVerticesModule::TTruthVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TTruthVerticesModule::TTruthVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ND {
namespace TTruthTrajectoriesModule {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NDcLcLTTruthTrajectoriesModule_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND::TTruthTrajectoriesModule", 0 /*version*/, "./../../inc/prod7_V12/ND__TTruthTrajectoriesModule__TTruthTrajectory.h", 25,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NDcLcLTTruthTrajectoriesModule_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NDcLcLTTruthTrajectoriesModule_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p = 0);
   static void *newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(Long_t size, void *p);
   static void delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p);
   static void deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p);
   static void destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)
   {
      ::ND::TTruthTrajectoriesModule::TTruthTrajectory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTruthTrajectoriesModule::TTruthTrajectory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTruthTrajectoriesModule::TTruthTrajectory", ::ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Version(), "./../../inc/prod7_V12/ND__TTruthTrajectoriesModule__TTruthTrajectory.h", 26,
                  typeid(::ND::TTruthTrajectoriesModule::TTruthTrajectory), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTruthTrajectoriesModule::TTruthTrajectory::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTruthTrajectoriesModule::TTruthTrajectory) );
      instance.SetNew(&new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetNewArray(&newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetDelete(&delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetDestructor(&destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)
   {
      return GenerateInitInstanceLocal((::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p = 0);
   static void *newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(Long_t size, void *p);
   static void delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p);
   static void deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p);
   static void destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)
   {
      ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint", ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class_Version(), "./../../inc/prod7_V12/ND__TTruthTrajectoriesModule__TTruthTrajectoryPoint.h", 20,
                  typeid(::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint) );
      instance.SetNew(&new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint);
      instance.SetNewArray(&newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint);
      instance.SetDelete(&delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint);
      instance.SetDestructor(&destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)
   {
      return GenerateInitInstanceLocal((::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ROOTcLcLTIOFeatures_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ROOTcLcLTIOFeatures_Dictionary();
   static void *new_ROOTcLcLTIOFeatures(void *p = 0);
   static void *newArray_ROOTcLcLTIOFeatures(Long_t size, void *p);
   static void delete_ROOTcLcLTIOFeatures(void *p);
   static void deleteArray_ROOTcLcLTIOFeatures(void *p);
   static void destruct_ROOTcLcLTIOFeatures(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TIOFeatures*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TIOFeatures) == sizeof( ::ROOTShadow::Shadow::ROOT::TIOFeatures));
      ::ROOT::TIOFeatures *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TIOFeatures),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TIOFeatures", "./../../inc/prod7_V12/ROOT__TIOFeatures.h", 17,
                  typeid(::ROOT::TIOFeatures), ::ROOT::DefineBehavior(ptr, ptr),
                  &ROOTcLcLTIOFeatures_ShowMembers, &ROOTcLcLTIOFeatures_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TIOFeatures) );
      instance.SetNew(&new_ROOTcLcLTIOFeatures);
      instance.SetNewArray(&newArray_ROOTcLcLTIOFeatures);
      instance.SetDelete(&delete_ROOTcLcLTIOFeatures);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTIOFeatures);
      instance.SetDestructor(&destruct_ROOTcLcLTIOFeatures);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ROOT::TIOFeatures*)
   {
      return GenerateInitInstanceLocal((::ROOT::TIOFeatures*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TIOFeatures*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTIOFeatures_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ROOT::TIOFeatures*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTRExReconModulecLcLTTPCAnaJunction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p = 0);
   static void *newArray_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(Long_t size, void *p);
   static void delete_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p);
   static void deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p);
   static void destruct_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTRExReconModule::TTPCAnaJunction*)
   {
      ::ND::TTRExReconModule::TTPCAnaJunction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTRExReconModule::TTPCAnaJunction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTRExReconModule::TTPCAnaJunction", ::ND::TTRExReconModule::TTPCAnaJunction::Class_Version(), "./../../inc/prod7_V12/ND__TTRExReconModule__TTPCAnaJunction.h", 22,
                  typeid(::ND::TTRExReconModule::TTPCAnaJunction), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTRExReconModule::TTPCAnaJunction::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTRExReconModule::TTPCAnaJunction) );
      instance.SetNew(&new_NDcLcLTTRExReconModulecLcLTTPCAnaJunction);
      instance.SetNewArray(&newArray_NDcLcLTTRExReconModulecLcLTTPCAnaJunction);
      instance.SetDelete(&delete_NDcLcLTTRExReconModulecLcLTTPCAnaJunction);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaJunction);
      instance.SetDestructor(&destruct_NDcLcLTTRExReconModulecLcLTTPCAnaJunction);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTRExReconModule::TTPCAnaJunction*)
   {
      return GenerateInitInstanceLocal((::ND::TTRExReconModule::TTPCAnaJunction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaJunction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDcLcLTTRExReconModulecLcLTTPCAnaPath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p = 0);
   static void *newArray_NDcLcLTTRExReconModulecLcLTTPCAnaPath(Long_t size, void *p);
   static void delete_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p);
   static void deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p);
   static void destruct_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTRExReconModule::TTPCAnaPath*)
   {
      ::ND::TTRExReconModule::TTPCAnaPath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTRExReconModule::TTPCAnaPath >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTRExReconModule::TTPCAnaPath", ::ND::TTRExReconModule::TTPCAnaPath::Class_Version(), "./../../inc/prod7_V12/ND__TTRExReconModule__TTPCAnaPath.h", 21,
                  typeid(::ND::TTRExReconModule::TTPCAnaPath), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ND::TTRExReconModule::TTPCAnaPath::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTRExReconModule::TTPCAnaPath) );
      instance.SetNew(&new_NDcLcLTTRExReconModulecLcLTTPCAnaPath);
      instance.SetNewArray(&newArray_NDcLcLTTRExReconModulecLcLTTPCAnaPath);
      instance.SetDelete(&delete_NDcLcLTTRExReconModulecLcLTTPCAnaPath);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaPath);
      instance.SetDestructor(&destruct_NDcLcLTTRExReconModulecLcLTTPCAnaPath);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ND::TTRExReconModule::TTPCAnaPath*)
   {
      return GenerateInitInstanceLocal((::ND::TTRExReconModule::TTPCAnaPath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPath*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TND280Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TND280Event::Class_Name()
{
   return "ND::TND280Event";
}

//______________________________________________________________________________
const char *TND280Event::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TND280Event::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TND280Event::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TND280Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TDataVector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TDataVector::Class_Name()
{
   return "ND::TDataVector";
}

//______________________________________________________________________________
const char *TDataVector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDataVector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDataVector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDataVector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TData::Class_Name()
{
   return "ND::TData";
}

//______________________________________________________________________________
const char *TData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TDatum::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TDatum::Class_Name()
{
   return "ND::TDatum";
}

//______________________________________________________________________________
const char *TDatum::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDatum::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDatum::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDatum::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TND280Event::Header::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TND280Event::Header::Class_Name()
{
   return "ND::TND280Event::Header";
}

//______________________________________________________________________________
const char *TND280Event::Header::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TND280Event::Header::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TND280Event::Header::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TND280Event::Header::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr NRooTrackerVtx::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *NRooTrackerVtx::Class_Name()
{
   return "ND::NRooTrackerVtx";
}

//______________________________________________________________________________
const char *NRooTrackerVtx::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NRooTrackerVtx::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NRooTrackerVtx::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NRooTrackerVtx::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr JNuBeamFlux::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JNuBeamFlux::Class_Name()
{
   return "ND::JNuBeamFlux";
}

//______________________________________________________________________________
const char *JNuBeamFlux::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JNuBeamFlux::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JNuBeamFlux::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JNuBeamFlux::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr RooTrackerVtxBase::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RooTrackerVtxBase::Class_Name()
{
   return "ND::RooTrackerVtxBase";
}

//______________________________________________________________________________
const char *RooTrackerVtxBase::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooTrackerVtxBase::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooTrackerVtxBase::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooTrackerVtxBase::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr GRooTrackerVtx::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GRooTrackerVtx::Class_Name()
{
   return "ND::GRooTrackerVtx";
}

//______________________________________________________________________________
const char *GRooTrackerVtx::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GRooTrackerVtx::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GRooTrackerVtx::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GRooTrackerVtx::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
         namespace TTRExReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTPCAnaPattern::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCAnaPattern::Class_Name()
{
   return "ND::TTRExReconModule::TTPCAnaPattern";
}

//______________________________________________________________________________
const char *TTPCAnaPattern::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPattern*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCAnaPattern::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPattern*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCAnaPattern::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPattern*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCAnaPattern::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPattern*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
      namespace ND {
         namespace TGeometrySummaryModule {
//______________________________________________________________________________
atomic_TClass_ptr TDetectorBoundingBox::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TDetectorBoundingBox::Class_Name()
{
   return "ND::TGeometrySummaryModule::TDetectorBoundingBox";
}

//______________________________________________________________________________
const char *TDetectorBoundingBox::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDetectorBoundingBox::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDetectorBoundingBox::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDetectorBoundingBox::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGeometrySummaryModule
} // namespace ND::TGeometrySummaryModule
      namespace ND {
         namespace TGeometrySummaryModule {
//______________________________________________________________________________
atomic_TClass_ptr TTPCMicroMegasVolumes::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCMicroMegasVolumes::Class_Name()
{
   return "ND::TGeometrySummaryModule::TTPCMicroMegasVolumes";
}

//______________________________________________________________________________
const char *TTPCMicroMegasVolumes::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCMicroMegasVolumes::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCMicroMegasVolumes::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCMicroMegasVolumes::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGeometrySummaryModule
} // namespace ND::TGeometrySummaryModule
      namespace ND {
         namespace TBeamSummaryDataModule {
//______________________________________________________________________________
atomic_TClass_ptr TBeamSummaryData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TBeamSummaryData::Class_Name()
{
   return "ND::TBeamSummaryDataModule::TBeamSummaryData";
}

//______________________________________________________________________________
const char *TBeamSummaryData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBeamSummaryData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBeamSummaryData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBeamSummaryData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TBeamSummaryDataModule
} // namespace ND::TBeamSummaryDataModule
      namespace ND {
         namespace TBeamSummaryDataModule {
//______________________________________________________________________________
atomic_TClass_ptr TBeamSummaryData::TOtherData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TBeamSummaryData::TOtherData::Class_Name()
{
   return "ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData";
}

//______________________________________________________________________________
const char *TBeamSummaryData::TOtherData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBeamSummaryData::TOtherData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBeamSummaryData::TOtherData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBeamSummaryData::TOtherData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TBeamSummaryDataModule
} // namespace ND::TBeamSummaryDataModule
      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
atomic_TClass_ptr TFgd2DIsoTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFgd2DIsoTrack::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd2DIsoTrack";
}

//______________________________________________________________________________
const char *TFgd2DIsoTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgd2DIsoTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgd2DIsoTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgd2DIsoTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
atomic_TClass_ptr TFgd3DIsoTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFgd3DIsoTrack::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd3DIsoTrack";
}

//______________________________________________________________________________
const char *TFgd3DIsoTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgd3DIsoTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgd3DIsoTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgd3DIsoTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
atomic_TClass_ptr TFgd3DShowerPID::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFgd3DShowerPID::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd3DShowerPID";
}

//______________________________________________________________________________
const char *TFgd3DShowerPID::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgd3DShowerPID::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgd3DShowerPID::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgd3DShowerPID::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
atomic_TClass_ptr TFgd3DShowerHyp::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFgd3DShowerHyp::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd3DShowerHyp";
}

//______________________________________________________________________________
const char *TFgd3DShowerHyp::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgd3DShowerHyp::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgd3DShowerHyp::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgd3DShowerHyp::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
atomic_TClass_ptr TFgd2DCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFgd2DCluster::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd2DCluster";
}

//______________________________________________________________________________
const char *TFgd2DCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgd2DCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgd2DCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgd2DCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
      namespace ND {
         namespace TSmrdReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TSmrdReconHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSmrdReconHit::Class_Name()
{
   return "ND::TSmrdReconModule::TSmrdReconHit";
}

//______________________________________________________________________________
const char *TSmrdReconHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSmrdReconHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSmrdReconHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSmrdReconHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TSmrdReconModule
} // namespace ND::TSmrdReconModule
      namespace ND {
         namespace TSmrdReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TSmrdIsoTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSmrdIsoTrack::Class_Name()
{
   return "ND::TSmrdReconModule::TSmrdIsoTrack";
}

//______________________________________________________________________________
const char *TSmrdIsoTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSmrdIsoTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSmrdIsoTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSmrdIsoTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TSmrdReconModule
} // namespace ND::TSmrdReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTrackerVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerVertex::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerVertex";
}

//______________________________________________________________________________
const char *TTrackerVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTrackerResult::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerResult::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerResult";
}

//______________________________________________________________________________
const char *TTrackerResult::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerResult::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerResult::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerResult::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTrueParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrueParticle::Class_Name()
{
   return "ND::TTrackerReconModule::TTrueParticle";
}

//______________________________________________________________________________
const char *TTrueParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrueParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrueParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrueParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TTrueVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrueVertex::Class_Name()
{
   return "ND::TTrueVertex";
}

//______________________________________________________________________________
const char *TTrueVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrueVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrueVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrueVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTrackerConstituent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerConstituent::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerConstituent";
}

//______________________________________________________________________________
const char *TTrackerConstituent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerConstituent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerConstituent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerConstituent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTPCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCTrack::Class_Name()
{
   return "ND::TTrackerReconModule::TTPCTrack";
}

//______________________________________________________________________________
const char *TTPCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TFGDTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFGDTrack::Class_Name()
{
   return "ND::TTrackerReconModule::TFGDTrack";
}

//______________________________________________________________________________
const char *TFGDTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFGDTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFGDTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFGDTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTrackerNode::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerNode::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerNode";
}

//______________________________________________________________________________
const char *TTrackerNode::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerNode::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerNode::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerNode::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTrackOther::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackOther::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackOther";
}

//______________________________________________________________________________
const char *TTrackOther::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackOther::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackOther::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackOther::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TUnusedHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TUnusedHit::Class_Name()
{
   return "ND::TTrackerReconModule::TUnusedHit";
}

//______________________________________________________________________________
const char *TUnusedHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TUnusedHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TUnusedHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TUnusedHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTpcPID::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTpcPID::Class_Name()
{
   return "ND::TGlobalReconModule::TTpcPID";
}

//______________________________________________________________________________
const char *TTpcPID::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTpcPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTpcPID::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTpcPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTpcPID::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTpcPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTpcPID::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTpcPID*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TTrueParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrueParticle::Class_Name()
{
   return "ND::TTrueParticle";
}

//______________________________________________________________________________
const char *TTrueParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrueParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrueParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrueParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TGlobalVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalVertex::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalVertex";
}

//______________________________________________________________________________
const char *TGlobalVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TVertexConstituent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TVertexConstituent::Class_Name()
{
   return "ND::TGlobalReconModule::TVertexConstituent";
}

//______________________________________________________________________________
const char *TVertexConstituent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVertexConstituent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVertexConstituent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVertexConstituent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TFgdTimeBin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFgdTimeBin::Class_Name()
{
   return "ND::TGlobalReconModule::TFgdTimeBin";
}

//______________________________________________________________________________
const char *TFgdTimeBin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgdTimeBin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgdTimeBin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgdTimeBin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TOutermostHits::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TOutermostHits::Class_Name()
{
   return "ND::TGlobalReconModule::TOutermostHits";
}

//______________________________________________________________________________
const char *TOutermostHits::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOutermostHits::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOutermostHits::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOutermostHits::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TGlobalHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalHit::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalHit";
}

//______________________________________________________________________________
const char *TGlobalHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TGlobalPID::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalPID::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalPID";
}

//______________________________________________________________________________
const char *TGlobalPID::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalPID::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalPID::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalPID::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTPCObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCObject::Class_Name()
{
   return "ND::TGlobalReconModule::TTPCObject";
}

//______________________________________________________________________________
const char *TTPCObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TSubBaseObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSubBaseObject::Class_Name()
{
   return "ND::TSubBaseObject";
}

//______________________________________________________________________________
const char *TSubBaseObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSubBaseObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSubBaseObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSubBaseObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TFGDObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFGDObject::Class_Name()
{
   return "ND::TGlobalReconModule::TFGDObject";
}

//______________________________________________________________________________
const char *TFGDObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFGDObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFGDObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFGDObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TECALObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TECALObject::Class_Name()
{
   return "ND::TGlobalReconModule::TECALObject";
}

//______________________________________________________________________________
const char *TECALObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECALObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECALObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECALObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
//______________________________________________________________________________
atomic_TClass_ptr TSubBaseShowerObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSubBaseShowerObject::Class_Name()
{
   return "ND::TSubBaseShowerObject";
}

//______________________________________________________________________________
const char *TSubBaseShowerObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSubBaseShowerObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSubBaseShowerObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSubBaseShowerObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DObject::Class_Name()
{
   return "ND::TGlobalReconModule::TP0DObject";
}

//______________________________________________________________________________
const char *TP0DObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TSMRDObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSMRDObject::Class_Name()
{
   return "ND::TGlobalReconModule::TSMRDObject";
}

//______________________________________________________________________________
const char *TSMRDObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSMRDObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSMRDObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSMRDObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTrackerObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerObject::Class_Name()
{
   return "ND::TGlobalReconModule::TTrackerObject";
}

//______________________________________________________________________________
const char *TTrackerObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TGlobalPIDAlternate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalPIDAlternate::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalPIDAlternate";
}

//______________________________________________________________________________
const char *TGlobalPIDAlternate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalPIDAlternate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalPIDAlternate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalPIDAlternate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTPCOtherObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCOtherObject::Class_Name()
{
   return "ND::TGlobalReconModule::TTPCOtherObject";
}

//______________________________________________________________________________
const char *TTPCOtherObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCOtherObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCOtherObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCOtherObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TSMRDHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSMRDHit::Class_Name()
{
   return "ND::TGlobalReconModule::TSMRDHit";
}

//______________________________________________________________________________
const char *TSMRDHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSMRDHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSMRDHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSMRDHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TECALReconObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TECALReconObject::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconObject";
}

//______________________________________________________________________________
const char *TECALReconObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECALReconObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECALReconObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECALReconObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TECALReconTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TECALReconTrack::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconTrack";
}

//______________________________________________________________________________
const char *TECALReconTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECALReconTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECALReconTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECALReconTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TECALReconShower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TECALReconShower::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconShower";
}

//______________________________________________________________________________
const char *TECALReconShower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECALReconShower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECALReconShower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECALReconShower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TECALReconCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TECALReconCluster::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconCluster";
}

//______________________________________________________________________________
const char *TECALReconCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECALReconCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECALReconCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECALReconCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TECALReconUnmatchedObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TECALReconUnmatchedObject::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconUnmatchedObject";
}

//______________________________________________________________________________
const char *TECALReconUnmatchedObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECALReconUnmatchedObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECALReconUnmatchedObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECALReconUnmatchedObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
      namespace ND {
         namespace TP0DECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DECALReconTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DECALReconTrack::Class_Name()
{
   return "ND::TP0DECALReconModule::TP0DECALReconTrack";
}

//______________________________________________________________________________
const char *TP0DECALReconTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DECALReconTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DECALReconTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DECALReconTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
      namespace ND {
         namespace TP0DECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DECALReconShower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DECALReconShower::Class_Name()
{
   return "ND::TP0DECALReconModule::TP0DECALReconShower";
}

//______________________________________________________________________________
const char *TP0DECALReconShower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DECALReconShower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DECALReconShower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DECALReconShower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
      namespace ND {
         namespace TP0DECALReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DECALLayerCharge::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DECALLayerCharge::Class_Name()
{
   return "ND::TP0DECALReconModule::TP0DECALLayerCharge";
}

//______________________________________________________________________________
const char *TP0DECALLayerCharge::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALLayerCharge*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DECALLayerCharge::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALLayerCharge*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DECALLayerCharge::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALLayerCharge*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DECALLayerCharge::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALLayerCharge*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DAlgoRes::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DAlgoRes::Class_Name()
{
   return "ND::TP0DReconModule::TP0DAlgoRes";
}

//______________________________________________________________________________
const char *TP0DAlgoRes::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DAlgoRes::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DAlgoRes::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DAlgoRes::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DVertex::Class_Name()
{
   return "ND::TP0DReconModule::TP0DVertex";
}

//______________________________________________________________________________
const char *TP0DVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DParticle::Class_Name()
{
   return "ND::TP0DReconModule::TP0DParticle";
}

//______________________________________________________________________________
const char *TP0DParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DShower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DShower::Class_Name()
{
   return "ND::TP0DReconModule::TP0DShower";
}

//______________________________________________________________________________
const char *TP0DShower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DShower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DShower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DShower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DTrack::Class_Name()
{
   return "ND::TP0DReconModule::TP0DTrack";
}

//______________________________________________________________________________
const char *TP0DTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DNode::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DNode::Class_Name()
{
   return "ND::TP0DReconModule::TP0DNode";
}

//______________________________________________________________________________
const char *TP0DNode::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DNode::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DNode::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DNode::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DHit::Class_Name()
{
   return "ND::TP0DReconModule::TP0DHit";
}

//______________________________________________________________________________
const char *TP0DHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TP0DCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DCluster::Class_Name()
{
   return "ND::TP0DReconModule::TP0DCluster";
}

//______________________________________________________________________________
const char *TP0DCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
      namespace ND {
         namespace TTruthVerticesModule {
//______________________________________________________________________________
atomic_TClass_ptr TTruthVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTruthVertex::Class_Name()
{
   return "ND::TTruthVerticesModule::TTruthVertex";
}

//______________________________________________________________________________
const char *TTruthVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTruthVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTruthVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTruthVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTruthVerticesModule
} // namespace ND::TTruthVerticesModule
      namespace ND {
         namespace TTruthTrajectoriesModule {
//______________________________________________________________________________
atomic_TClass_ptr TTruthTrajectory::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTruthTrajectory::Class_Name()
{
   return "ND::TTruthTrajectoriesModule::TTruthTrajectory";
}

//______________________________________________________________________________
const char *TTruthTrajectory::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTruthTrajectory::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTruthTrajectory::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTruthTrajectory::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTruthTrajectoriesModule
} // namespace ND::TTruthTrajectoriesModule
      namespace ND {
         namespace TTruthTrajectoriesModule {
//______________________________________________________________________________
atomic_TClass_ptr TTruthTrajectoryPoint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTruthTrajectoryPoint::Class_Name()
{
   return "ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint";
}

//______________________________________________________________________________
const char *TTruthTrajectoryPoint::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTruthTrajectoryPoint::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTruthTrajectoryPoint::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTruthTrajectoryPoint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTruthTrajectoriesModule
} // namespace ND::TTruthTrajectoriesModule
      namespace ND {
         namespace TTRExReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTPCAnaJunction::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCAnaJunction::Class_Name()
{
   return "ND::TTRExReconModule::TTPCAnaJunction";
}

//______________________________________________________________________________
const char *TTPCAnaJunction::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaJunction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCAnaJunction::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaJunction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCAnaJunction::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaJunction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCAnaJunction::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaJunction*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
      namespace ND {
         namespace TTRExReconModule {
//______________________________________________________________________________
atomic_TClass_ptr TTPCAnaPath::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCAnaPath::Class_Name()
{
   return "ND::TTRExReconModule::TTPCAnaPath";
}

//______________________________________________________________________________
const char *TTPCAnaPath::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPath*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCAnaPath::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPath*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCAnaPath::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPath*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCAnaPath::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TTRExReconModule::TTPCAnaPath*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
      namespace ND {
//______________________________________________________________________________
void TND280Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TND280Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TND280Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TND280Event::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TND280Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TND280Event.
      TClass *R__cl = ::ND::TND280Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fContext", (void*)&fContext);
      R__insp.InspectMember("ND::TND280Context", (void*)&fContext, "fContext.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeometryHash", (void*)&fGeometryHash);
      R__insp.InspectMember("ND::TSHAHashValue", (void*)&fGeometryHash, "fGeometryHash.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlignmentId", (void*)&fAlignmentId);
      R__insp.InspectMember("ND::TAlignmentId", (void*)&fAlignmentId, "fAlignmentId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeader", &fHeader);
      R__insp.InspectMember(fHeader, "fHeader.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TDataVector baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTND280Event(void *p) {
      return  p ? new(p) ::ND::TND280Event : new ::ND::TND280Event;
   }
   static void *newArray_NDcLcLTND280Event(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TND280Event[nElements] : new ::ND::TND280Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTND280Event(void *p) {
      delete ((::ND::TND280Event*)p);
   }
   static void deleteArray_NDcLcLTND280Event(void *p) {
      delete [] ((::ND::TND280Event*)p);
   }
   static void destruct_NDcLcLTND280Event(void *p) {
      typedef ::ND::TND280Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TND280Event

      namespace ND {
//______________________________________________________________________________
void TDataVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TDataVector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TDataVector::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TDataVector::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TDataVector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TDataVector.
      TClass *R__cl = ::ND::TDataVector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVector", (void*)&fVector);
      R__insp.InspectMember("vector<ND::TDatum*>", (void*)&fVector, "fVector.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TData baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTDataVector(void *p) {
      return  p ? new(p) ::ND::TDataVector : new ::ND::TDataVector;
   }
   static void *newArray_NDcLcLTDataVector(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TDataVector[nElements] : new ::ND::TDataVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTDataVector(void *p) {
      delete ((::ND::TDataVector*)p);
   }
   static void deleteArray_NDcLcLTDataVector(void *p) {
      delete [] ((::ND::TDataVector*)p);
   }
   static void destruct_NDcLcLTDataVector(void *p) {
      typedef ::ND::TDataVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TDataVector

      namespace ND {
//______________________________________________________________________________
void TData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TData::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TData::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TData.
      TClass *R__cl = ::ND::TData::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TDatum baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTData(void *p) {
      return  p ? new(p) ::ND::TData : new ::ND::TData;
   }
   static void *newArray_NDcLcLTData(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TData[nElements] : new ::ND::TData[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTData(void *p) {
      delete ((::ND::TData*)p);
   }
   static void deleteArray_NDcLcLTData(void *p) {
      delete [] ((::ND::TData*)p);
   }
   static void destruct_NDcLcLTData(void *p) {
      typedef ::ND::TData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TData

      namespace ND {
//______________________________________________________________________________
void TDatum::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TDatum.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TDatum::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TDatum::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TDatum::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TDatum.
      TClass *R__cl = ::ND::TDatum::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParent", &fParent);
      TNamed::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTDatum(void *p) {
      return  p ? new(p) ::ND::TDatum : new ::ND::TDatum;
   }
   static void *newArray_NDcLcLTDatum(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TDatum[nElements] : new ::ND::TDatum[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTDatum(void *p) {
      delete ((::ND::TDatum*)p);
   }
   static void deleteArray_NDcLcLTDatum(void *p) {
      delete [] ((::ND::TDatum*)p);
   }
   static void destruct_NDcLcLTDatum(void *p) {
      typedef ::ND::TDatum current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TDatum

//______________________________________________________________________________
namespace ROOTDict {
   void NDcLcLTND280Context_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ND::TND280Context.
      typedef ::ROOTShadow::Shadow::ND::TND280Context ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TND280Context*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPartition", &sobj->fPartition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &sobj->fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubRun", &sobj->fSubRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvent", &sobj->fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpill", &sobj->fSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &sobj->fTimeStamp);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTND280Context(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Context : new ::ND::TND280Context;
   }
   static void *newArray_NDcLcLTND280Context(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Context[nElements] : new ::ND::TND280Context[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTND280Context(void *p) {
      delete ((::ND::TND280Context*)p);
   }
   static void deleteArray_NDcLcLTND280Context(void *p) {
      delete [] ((::ND::TND280Context*)p);
   }
   static void destruct_NDcLcLTND280Context(void *p) {
      typedef ::ND::TND280Context current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TND280Context

//______________________________________________________________________________
namespace ROOTDict {
   void NDcLcLTSHAHashValue_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ND::TSHAHashValue.
      typedef ::ROOTShadow::Shadow::ND::TSHAHashValue ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TSHAHashValue*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHash[5]", sobj->fHash);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTSHAHashValue(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TSHAHashValue : new ::ND::TSHAHashValue;
   }
   static void *newArray_NDcLcLTSHAHashValue(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TSHAHashValue[nElements] : new ::ND::TSHAHashValue[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSHAHashValue(void *p) {
      delete ((::ND::TSHAHashValue*)p);
   }
   static void deleteArray_NDcLcLTSHAHashValue(void *p) {
      delete [] ((::ND::TSHAHashValue*)p);
   }
   static void destruct_NDcLcLTSHAHashValue(void *p) {
      typedef ::ND::TSHAHashValue current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TSHAHashValue

//______________________________________________________________________________
namespace ROOTDict {
   void NDcLcLTAlignmentId_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ND::TAlignmentId.
      typedef ::ROOTShadow::Shadow::ND::TAlignmentId ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ND::TAlignmentId*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDocString", (void*)&sobj->fDocString);
      R__insp.InspectMember("string", (void*)&sobj->fDocString, "fDocString.", false);
      R__insp.GenericShowMembers("ND::TSHAHashValue", ( ::ND::TSHAHashValue * )( (::ND::TAlignmentId*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTAlignmentId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TAlignmentId : new ::ND::TAlignmentId;
   }
   static void *newArray_NDcLcLTAlignmentId(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TAlignmentId[nElements] : new ::ND::TAlignmentId[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTAlignmentId(void *p) {
      delete ((::ND::TAlignmentId*)p);
   }
   static void deleteArray_NDcLcLTAlignmentId(void *p) {
      delete [] ((::ND::TAlignmentId*)p);
   }
   static void destruct_NDcLcLTAlignmentId(void *p) {
      typedef ::ND::TAlignmentId current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TAlignmentId

      namespace ND {
//______________________________________________________________________________
void TND280Event::Header::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TND280Event::Header.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TND280Event::Header::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TND280Event::Header::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TND280Event::Header::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TND280Event::Header.
      TClass *R__cl = ::ND::TND280Event::Header::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecordType", &fRecordType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &fTimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunType", &fRunType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorCode", &fErrorCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerWord", &fTriggerWord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCMSecond", &fMCMSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCMSubSecond", &fMCMSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCMTimeSinceBusy", &fMCMTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP0DSecond", &fP0DSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP0DSubSecond", &fP0DSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP0DTimeSinceBusy", &fP0DTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPCSecond", &fTPCSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPCSubSecond", &fTPCSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPCTimeSinceBusy", &fTPCTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDSecond", &fFGDSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDSubSecond", &fFGDSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDTimeSinceBusy", &fFGDTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECalSecond", &fECalSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECalSubSecond", &fECalSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECalTimeSinceBusy", &fECalTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSMRDSecond", &fSMRDSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSMRDSubSecond", &fSMRDSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSMRDTimeSinceBusy", &fSMRDTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fINGRIDSecond", &fINGRIDSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fINGRIDSubSecond", &fINGRIDSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fINGRIDTimeSinceBusy", &fINGRIDTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCTMTriggerPattern[3]", fCTMTriggerPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDCTMTriggerPattern[3]", fFGDCTMTriggerPattern);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTND280EventcLcLHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Event::Header : new ::ND::TND280Event::Header;
   }
   static void *newArray_NDcLcLTND280EventcLcLHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Event::Header[nElements] : new ::ND::TND280Event::Header[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTND280EventcLcLHeader(void *p) {
      delete ((::ND::TND280Event::Header*)p);
   }
   static void deleteArray_NDcLcLTND280EventcLcLHeader(void *p) {
      delete [] ((::ND::TND280Event::Header*)p);
   }
   static void destruct_NDcLcLTND280EventcLcLHeader(void *p) {
      typedef ::ND::TND280Event::Header current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TND280Event::Header

      namespace ND {
//______________________________________________________________________________
void NRooTrackerVtx::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::NRooTrackerVtx.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::NRooTrackerVtx::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::NRooTrackerVtx::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void NRooTrackerVtx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::NRooTrackerVtx.
      TClass *R__cl = ::ND::NRooTrackerVtx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EvtCode", &EvtCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtNum", &EvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtXSec", &EvtXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtDXSec", &EvtDXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtWght", &EvtWght);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtProb", &EvtProb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtVtx[4]", EvtVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepN", &StdHepN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepPdg", &StdHepPdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepStatus", &StdHepStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepX4[100][4]", StdHepX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepP4[100][4]", StdHepP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepPolz[100][3]", StdHepPolz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepFd", &StdHepFd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepLd", &StdHepLd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepFm", &StdHepFm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepLm", &StdHepLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEnvc", &NEnvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEipvc", &NEipvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEpvc[100][3]", NEpvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEiorgvc", &NEiorgvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEiflgvc", &NEiflgvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEicrnvc", &NEicrnvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsx", &NEcrsx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsy", &NEcrsy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsz", &NEcrsz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsphi", &NEcrsphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEnvert", &NEnvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEposvert[100][3]", NEposvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEiflgvert", &NEiflgvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEnvcvert", &NEnvcvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEdirvert[300][3]", NEdirvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEabspvert", &NEabspvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEabstpvert", &NEabstpvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEipvert", &NEipvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEiverti", &NEiverti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NEivertf", &NEivertf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFnvert", &NFnvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFiflag", &NFiflag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFx", &NFx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFy", &NFy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFz", &NFz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFpx", &NFpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFpy", &NFpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFpz", &NFpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFe", &NFe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFfirststep", &NFfirststep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFnstep", &NFnstep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NFecms2", &NFecms2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PCascProb", &PCascProb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Prob", &Prob);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VertFlagStep", &VertFlagStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VertFsiRhon", &VertFsiRhon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StepPel", &StepPel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StepPsp", &StepPsp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StepPdp", &StepPdp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SPIDelta", &SPIDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeomPath", &GeomPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeneratorName", &GeneratorName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigFileName", &OrigFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigTreeName", &OrigTreeName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigEvtNum", &OrigEvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreeEntries", &OrigTreeEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreePOT", &OrigTreePOT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeInSpill", &TimeInSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TruthVertexID", &TruthVertexID);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::JNuBeamFlux baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLNRooTrackerVtx(void *p) {
      return  p ? new(p) ::ND::NRooTrackerVtx : new ::ND::NRooTrackerVtx;
   }
   static void *newArray_NDcLcLNRooTrackerVtx(Long_t nElements, void *p) {
      return p ? new(p) ::ND::NRooTrackerVtx[nElements] : new ::ND::NRooTrackerVtx[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLNRooTrackerVtx(void *p) {
      delete ((::ND::NRooTrackerVtx*)p);
   }
   static void deleteArray_NDcLcLNRooTrackerVtx(void *p) {
      delete [] ((::ND::NRooTrackerVtx*)p);
   }
   static void destruct_NDcLcLNRooTrackerVtx(void *p) {
      typedef ::ND::NRooTrackerVtx current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::NRooTrackerVtx

      namespace ND {
//______________________________________________________________________________
void JNuBeamFlux::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::JNuBeamFlux.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::JNuBeamFlux::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::JNuBeamFlux::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void JNuBeamFlux::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::JNuBeamFlux.
      TClass *R__cl = ::ND::JNuBeamFlux::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuFluxEntry", &NuFluxEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NuFileName", &NuFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentPdg", &NuParentPdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentDecMode", &NuParentDecMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentDecP4[4]", NuParentDecP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentDecX4[4]", NuParentDecX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuCospibm", &NuCospibm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNorm", &NuNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentProP4[4]", NuParentProP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentProX4[4]", NuParentProX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuCospi0bm", &NuCospi0bm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuRnu", &NuRnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuXnu[2]", NuXnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuIdfd", &NuIdfd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGipart", &NuGipart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGpos0[3]", NuGpos0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGvec0[3]", NuGvec0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGamom0", &NuGamom0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNg", &NuNg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGp[12][3]", NuGp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGcosbm[12]", NuGcosbm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGv[12][3]", NuGv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGpid[12]", NuGpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGmec[12]", NuGmec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuEnusk", &NuEnusk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNormsk", &NuNormsk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuAnorm", &NuAnorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGmat[12]", NuGmat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistc[12]", NuGdistc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistal[12]", NuGdistal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistti[12]", NuGdistti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistfe[12]", NuGdistfe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuVersion", &NuVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuTuneid", &NuTuneid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNtrig", &NuNtrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuPint", &NuPint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuBpos[2]", NuBpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuBtilt[2]", NuBtilt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuBrms[2]", NuBrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuEmit[2]", NuEmit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuAlpha[2]", NuAlpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuHcur[3]", NuHcur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuRand", &NuRand);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::RooTrackerVtxBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLJNuBeamFlux(void *p) {
      return  p ? new(p) ::ND::JNuBeamFlux : new ::ND::JNuBeamFlux;
   }
   static void *newArray_NDcLcLJNuBeamFlux(Long_t nElements, void *p) {
      return p ? new(p) ::ND::JNuBeamFlux[nElements] : new ::ND::JNuBeamFlux[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLJNuBeamFlux(void *p) {
      delete ((::ND::JNuBeamFlux*)p);
   }
   static void deleteArray_NDcLcLJNuBeamFlux(void *p) {
      delete [] ((::ND::JNuBeamFlux*)p);
   }
   static void destruct_NDcLcLJNuBeamFlux(void *p) {
      typedef ::ND::JNuBeamFlux current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::JNuBeamFlux

      namespace ND {
//______________________________________________________________________________
void RooTrackerVtxBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::RooTrackerVtxBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::RooTrackerVtxBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::RooTrackerVtxBase::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void RooTrackerVtxBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::RooTrackerVtxBase.
      TClass *R__cl = ::ND::RooTrackerVtxBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLRooTrackerVtxBase(void *p) {
      return  p ? new(p) ::ND::RooTrackerVtxBase : new ::ND::RooTrackerVtxBase;
   }
   static void *newArray_NDcLcLRooTrackerVtxBase(Long_t nElements, void *p) {
      return p ? new(p) ::ND::RooTrackerVtxBase[nElements] : new ::ND::RooTrackerVtxBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLRooTrackerVtxBase(void *p) {
      delete ((::ND::RooTrackerVtxBase*)p);
   }
   static void deleteArray_NDcLcLRooTrackerVtxBase(void *p) {
      delete [] ((::ND::RooTrackerVtxBase*)p);
   }
   static void destruct_NDcLcLRooTrackerVtxBase(void *p) {
      typedef ::ND::RooTrackerVtxBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::RooTrackerVtxBase

      namespace ND {
//______________________________________________________________________________
void GRooTrackerVtx::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::GRooTrackerVtx.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::GRooTrackerVtx::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::GRooTrackerVtx::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void GRooTrackerVtx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::GRooTrackerVtx.
      TClass *R__cl = ::ND::GRooTrackerVtx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EvtCode", &EvtCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtNum", &EvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtXSec", &EvtXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtDXSec", &EvtDXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtWght", &EvtWght);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtProb", &EvtProb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtVtx[4]", EvtVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepN", &StdHepN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepPdg", &StdHepPdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepRescat", &StdHepRescat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepStatus", &StdHepStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepX4[350][4]", StdHepX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepP4[350][4]", StdHepP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepPolz[350][3]", StdHepPolz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepFd", &StdHepFd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepLd", &StdHepLd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepFm", &StdHepFm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StdHepLm", &StdHepLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G2NeutEvtCode", &G2NeutEvtCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeomPath", &GeomPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeneratorName", &GeneratorName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigFileName", &OrigFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigTreeName", &OrigTreeName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigEvtNum", &OrigEvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreeEntries", &OrigTreeEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreePOT", &OrigTreePOT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeInSpill", &TimeInSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TruthVertexID", &TruthVertexID);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::JNuBeamFlux baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLGRooTrackerVtx(void *p) {
      return  p ? new(p) ::ND::GRooTrackerVtx : new ::ND::GRooTrackerVtx;
   }
   static void *newArray_NDcLcLGRooTrackerVtx(Long_t nElements, void *p) {
      return p ? new(p) ::ND::GRooTrackerVtx[nElements] : new ::ND::GRooTrackerVtx[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLGRooTrackerVtx(void *p) {
      delete ((::ND::GRooTrackerVtx*)p);
   }
   static void deleteArray_NDcLcLGRooTrackerVtx(void *p) {
      delete [] ((::ND::GRooTrackerVtx*)p);
   }
   static void destruct_NDcLcLGRooTrackerVtx(void *p) {
      typedef ::ND::GRooTrackerVtx current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::GRooTrackerVtx

      namespace ND {
         namespace TTRExReconModule {
//______________________________________________________________________________
void TTPCAnaPattern::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTRExReconModule::TTPCAnaPattern.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTRExReconModule::TTPCAnaPattern::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTRExReconModule::TTPCAnaPattern::Class(),this);
   }
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTRExReconModule {
void TTPCAnaPattern::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTRExReconModule::TTPCAnaPattern.
      TClass *R__cl = ::ND::TTRExReconModule::TTPCAnaPattern::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "S1Sflag", &S1Sflag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PatternID", &PatternID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NJunctions", &NJunctions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Junctions", &Junctions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPaths", &NPaths);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Paths", &Paths);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC", &TPC);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p) {
      return  p ? new(p) ::ND::TTRExReconModule::TTPCAnaPattern : new ::ND::TTRExReconModule::TTPCAnaPattern;
   }
   static void *newArray_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTRExReconModule::TTPCAnaPattern[nElements] : new ::ND::TTRExReconModule::TTPCAnaPattern[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p) {
      delete ((::ND::TTRExReconModule::TTPCAnaPattern*)p);
   }
   static void deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p) {
      delete [] ((::ND::TTRExReconModule::TTPCAnaPattern*)p);
   }
   static void destruct_NDcLcLTTRExReconModulecLcLTTPCAnaPattern(void *p) {
      typedef ::ND::TTRExReconModule::TTPCAnaPattern current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTRExReconModule::TTPCAnaPattern

      namespace ND {
         namespace TGeometrySummaryModule {
//______________________________________________________________________________
void TDetectorBoundingBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGeometrySummaryModule::TDetectorBoundingBox.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGeometrySummaryModule::TDetectorBoundingBox::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGeometrySummaryModule::TDetectorBoundingBox::Class(),this);
   }
}

} // namespace ND::TGeometrySummaryModule
} // namespace ND::TGeometrySummaryModule
//______________________________________________________________________________
      namespace ND {
         namespace TGeometrySummaryModule {
void TDetectorBoundingBox::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGeometrySummaryModule::TDetectorBoundingBox.
      TClass *R__cl = ::ND::TGeometrySummaryModule::TDetectorBoundingBox::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Minimum", &Minimum);
      R__insp.InspectMember(Minimum, "Minimum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Maximum", &Maximum);
      R__insp.InspectMember(Maximum, "Maximum.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGeometrySummaryModule
} // namespace ND::TGeometrySummaryModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      return  p ? new(p) ::ND::TGeometrySummaryModule::TDetectorBoundingBox : new ::ND::TGeometrySummaryModule::TDetectorBoundingBox;
   }
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGeometrySummaryModule::TDetectorBoundingBox[nElements] : new ::ND::TGeometrySummaryModule::TDetectorBoundingBox[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      delete ((::ND::TGeometrySummaryModule::TDetectorBoundingBox*)p);
   }
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      delete [] ((::ND::TGeometrySummaryModule::TDetectorBoundingBox*)p);
   }
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      typedef ::ND::TGeometrySummaryModule::TDetectorBoundingBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGeometrySummaryModule::TDetectorBoundingBox

      namespace ND {
         namespace TGeometrySummaryModule {
//______________________________________________________________________________
void TTPCMicroMegasVolumes::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGeometrySummaryModule::TTPCMicroMegasVolumes.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class(),this);
   }
}

} // namespace ND::TGeometrySummaryModule
} // namespace ND::TGeometrySummaryModule
//______________________________________________________________________________
      namespace ND {
         namespace TGeometrySummaryModule {
void TTPCMicroMegasVolumes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGeometrySummaryModule::TTPCMicroMegasVolumes.
      TClass *R__cl = ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MMvolumes", (void*)&MMvolumes);
      R__insp.InspectMember("map<int,std::pair<int,const TGeoNode*> >", (void*)&MMvolumes, "MMvolumes.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGeometrySummaryModule
} // namespace ND::TGeometrySummaryModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      return  p ? new(p) ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes : new ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes;
   }
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[nElements] : new ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      delete ((::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)p);
   }
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      delete [] ((::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)p);
   }
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      typedef ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes

//______________________________________________________________________________
namespace ROOTDict {
   void pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,pair<int,const TGeoNode*> >.
      typedef ::ROOTShadow::Shadow::pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<int,pair<int,const TGeoNode*> >*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", (void*)&sobj->second);
      R__insp.InspectMember("pair<int,const TGeoNode*>", (void*)&sobj->second, "second.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,pair<int,const TGeoNode*> > : new pair<int,pair<int,const TGeoNode*> >;
   }
   static void *newArray_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,pair<int,const TGeoNode*> >[nElements] : new pair<int,pair<int,const TGeoNode*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      delete ((pair<int,pair<int,const TGeoNode*> >*)p);
   }
   static void deleteArray_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      delete [] ((pair<int,pair<int,const TGeoNode*> >*)p);
   }
   static void destruct_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      typedef pair<int,pair<int,const TGeoNode*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<int,pair<int,const TGeoNode*> >

//______________________________________________________________________________
namespace ROOTDict {
   void pairlEintcOconstsPTGeoNodemUgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,const TGeoNode*>.
      typedef ::ROOTShadow::Shadow::pairlEintcOconstsPTGeoNodemUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<int,const TGeoNode*>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*second", &sobj->second);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlEintcOconstsPTGeoNodemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,const TGeoNode*> : new pair<int,const TGeoNode*>;
   }
   static void *newArray_pairlEintcOconstsPTGeoNodemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,const TGeoNode*>[nElements] : new pair<int,const TGeoNode*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOconstsPTGeoNodemUgR(void *p) {
      delete ((pair<int,const TGeoNode*>*)p);
   }
   static void deleteArray_pairlEintcOconstsPTGeoNodemUgR(void *p) {
      delete [] ((pair<int,const TGeoNode*>*)p);
   }
   static void destruct_pairlEintcOconstsPTGeoNodemUgR(void *p) {
      typedef pair<int,const TGeoNode*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<int,const TGeoNode*>

      namespace ND {
         namespace TBeamSummaryDataModule {
//______________________________________________________________________________
void TBeamSummaryData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TBeamSummaryDataModule::TBeamSummaryData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::Class(),this);
   }
}

} // namespace ND::TBeamSummaryDataModule
} // namespace ND::TBeamSummaryDataModule
//______________________________________________________________________________
      namespace ND {
         namespace TBeamSummaryDataModule {
void TBeamSummaryData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TBeamSummaryDataModule::TBeamSummaryData.
      TClass *R__cl = ::ND::TBeamSummaryDataModule::TBeamSummaryData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamRunNumber", &BeamRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpillNumber", &SpillNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GPS1TriggerTime", &GPS1TriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GPS1TriggerTimeNanoSecond", &GPS1TriggerTimeNanoSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5ProtonsPerSpill", &CT5ProtonsPerSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5ProtonsPerBunch[8]", CT5ProtonsPerBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5BeamBunchTiming[8]", CT5BeamBunchTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5BeamBunchFlag[8]", CT5BeamBunchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OfficialProtonsPerSpill", &OfficialProtonsPerSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OfficialCTNumber", &OfficialCTNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OfficialProtonsPerBunch[8]", OfficialProtonsPerBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OfficialBeamBunchTiming[8]", OfficialBeamBunchTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OfficialBeamBunchFlag[8]", OfficialBeamBunchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OfficialBeamFlag", &OfficialBeamFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Horn1CurrentSum", &Horn1CurrentSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Horn2CurrentSum", &Horn2CurrentSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Horn3CurrentSum", &Horn3CurrentSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GoodSpillFlag", &GoodSpillFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BSDVersion", &BSDVersion);
      R__insp.InspectMember(BSDVersion, "BSDVersion.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OtherData", &OtherData);
      R__insp.InspectMember(OtherData, "OtherData.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TBeamSummaryDataModule
} // namespace ND::TBeamSummaryDataModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      return  p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData : new ::ND::TBeamSummaryDataModule::TBeamSummaryData;
   }
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData[nElements] : new ::ND::TBeamSummaryDataModule::TBeamSummaryData[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      delete ((::ND::TBeamSummaryDataModule::TBeamSummaryData*)p);
   }
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      delete [] ((::ND::TBeamSummaryDataModule::TBeamSummaryData*)p);
   }
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      typedef ::ND::TBeamSummaryDataModule::TBeamSummaryData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TBeamSummaryDataModule::TBeamSummaryData

      namespace ND {
         namespace TBeamSummaryDataModule {
//______________________________________________________________________________
void TBeamSummaryData::TOtherData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class(),this);
   }
}

} // namespace ND::TBeamSummaryDataModule
} // namespace ND::TBeamSummaryDataModule
//______________________________________________________________________________
      namespace ND {
         namespace TBeamSummaryDataModule {
void TBeamSummaryData::TOtherData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData.
      TClass *R__cl = ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MidasEvent", &MidasEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamRunNumber", &BeamRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpillNumber", &SpillNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MRRunNumber", &MRRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GPSStatus[2]", GPSStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerTime[3]", TriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerTimeNanoSecond[3]", TriggerTimeNanoSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProtonsPerSpill[5]", ProtonsPerSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProtonsPerBunch[5][9]", ProtonsPerBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamTiming[5]", BeamTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamBunchTiming[5][9]", BeamBunchTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamFlag[5]", BeamFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamBunchFlag[5][9]", BeamBunchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HornCurrent[3]", HornCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HornBusBarCurrent[3][5]", HornBusBarCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamPositionOnTarget[2]", BeamPositionOnTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamDirectionOnTarget[2]", BeamDirectionOnTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamSizeOnTarget[2]", BeamSizeOnTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiTotalQ", &MumonSiTotalQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiPeak", &MumonSiPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiX", &MumonSiX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiwX", &MumonSiwX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiY", &MumonSiY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiwY", &MumonSiwY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICTotalQ", &MumonICTotalQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICPeak", &MumonICPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICX", &MumonICX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICwX", &MumonICwX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICY", &MumonICY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICwY", &MumonICwY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRLightYield", &OTRLightYield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRX", &OTRX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwX", &OTRwX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRY", &OTRY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwY", &OTRwY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRXError", &OTRXError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwXError", &OTRwXError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRYError", &OTRYError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwYError", &OTRwYError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GoodGPSFlag", &GoodGPSFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerFlag", &TriggerFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpillFlag", &SpillFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GoodSpillFlag", &GoodSpillFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetEfficiency[3]", TargetEfficiency);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TBeamSummaryDataModule
} // namespace ND::TBeamSummaryDataModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      return  p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData : new ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData;
   }
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[nElements] : new ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      delete ((::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)p);
   }
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      delete [] ((::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)p);
   }
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      typedef ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData

      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
void TFgd2DIsoTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd2DIsoTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd2DIsoTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd2DIsoTrack::Class(),this);
   }
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
//______________________________________________________________________________
      namespace ND {
         namespace TFgdOnlyModule {
void TFgd2DIsoTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd2DIsoTrack.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd2DIsoTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Angle", &Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SumCharge", &SumCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Origin", &Origin);
      R__insp.InspectMember(Origin, "Origin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OriginVariance", &OriginVariance);
      R__insp.InspectMember(OriginVariance, "OriginVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitPositions", (void*)&HitPositions);
      R__insp.InspectMember("vector<TVector3*>", (void*)&HitPositions, "HitPositions.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrajId", &TrajId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness", &Completeness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness", &Cleanliness);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd2DIsoTrack : new ::ND::TFgdOnlyModule::TFgd2DIsoTrack;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd2DIsoTrack[nElements] : new ::ND::TFgdOnlyModule::TFgd2DIsoTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd2DIsoTrack*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd2DIsoTrack*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd2DIsoTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TFgdOnlyModule::TFgd2DIsoTrack

      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
void TFgd3DIsoTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd3DIsoTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd3DIsoTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd3DIsoTrack::Class(),this);
   }
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
//______________________________________________________________________________
      namespace ND {
         namespace TFgdOnlyModule {
void TFgd3DIsoTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd3DIsoTrack.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd3DIsoTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SumCharge", &SumCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Origin", &Origin);
      R__insp.InspectMember(Origin, "Origin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OriginVariance", &OriginVariance);
      R__insp.InspectMember(OriginVariance, "OriginVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muonPull", &muonPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pionPull", &pionPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonPull", &protonPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XZHitPositions", (void*)&XZHitPositions);
      R__insp.InspectMember("vector<TVector3*>", (void*)&XZHitPositions, "XZHitPositions.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YZHitPositions", (void*)&YZHitPositions);
      R__insp.InspectMember("vector<TVector3*>", (void*)&YZHitPositions, "YZHitPositions.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrajId", &TrajId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness", &Completeness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness", &Cleanliness);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd3DIsoTrack : new ::ND::TFgdOnlyModule::TFgd3DIsoTrack;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd3DIsoTrack[nElements] : new ::ND::TFgdOnlyModule::TFgd3DIsoTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd3DIsoTrack*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd3DIsoTrack*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd3DIsoTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TFgdOnlyModule::TFgd3DIsoTrack

      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
void TFgd3DShowerPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd3DShowerPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerPID::Class(),this);
   }
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
//______________________________________________________________________________
      namespace ND {
         namespace TFgdOnlyModule {
void TFgd3DShowerPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd3DShowerPID.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd3DShowerPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hyp1", &Hyp1);
      R__insp.InspectMember(Hyp1, "Hyp1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hyp2", &Hyp2);
      R__insp.InspectMember(Hyp2, "Hyp2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PCAEigenValues", &PCAEigenValues);
      R__insp.InspectMember(PCAEigenValues, "PCAEigenValues.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumHits", &NumHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchingLikelihood3D", &MatchingLikelihood3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Circularity", &Circularity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trajectories", (void*)&Trajectories);
      R__insp.InspectMember("map<int,int>", (void*)&Trajectories, "Trajectories.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerPID : new ::ND::TFgdOnlyModule::TFgd3DShowerPID;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerPID[nElements] : new ::ND::TFgdOnlyModule::TFgd3DShowerPID[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd3DShowerPID*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd3DShowerPID*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd3DShowerPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TFgdOnlyModule::TFgd3DShowerPID

      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
void TFgd3DShowerHyp::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd3DShowerHyp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerHyp::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerHyp::Class(),this);
   }
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
//______________________________________________________________________________
      namespace ND {
         namespace TFgdOnlyModule {
void TFgd3DShowerHyp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd3DShowerHyp.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd3DShowerHyp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVar", &DirectionVar);
      R__insp.InspectMember(DirectionVar, "DirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngle", &ConeAngle);
      R__insp.InspectMember(ConeAngle, "ConeAngle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngleVar", &ConeAngleVar);
      R__insp.InspectMember(ConeAngleVar, "ConeAngleVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QAvgInThirds", &QAvgInThirds);
      R__insp.InspectMember(QAvgInThirds, "QAvgInThirds.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpreadInThirds", &SpreadInThirds);
      R__insp.InspectMember(SpreadInThirds, "SpreadInThirds.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerHyp : new ::ND::TFgdOnlyModule::TFgd3DShowerHyp;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerHyp[nElements] : new ::ND::TFgdOnlyModule::TFgd3DShowerHyp[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd3DShowerHyp*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd3DShowerHyp*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd3DShowerHyp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TFgdOnlyModule::TFgd3DShowerHyp

      namespace ND {
         namespace TFgdOnlyModule {
//______________________________________________________________________________
void TFgd2DCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd2DCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd2DCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd2DCluster::Class(),this);
   }
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
//______________________________________________________________________________
      namespace ND {
         namespace TFgdOnlyModule {
void TFgd2DCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd2DCluster.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd2DCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PCADirection", &PCADirection);
      R__insp.InspectMember(PCADirection, "PCADirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StartPosition", &StartPosition);
      R__insp.InspectMember(StartPosition, "StartPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndPosition", &EndPosition);
      R__insp.InspectMember(EndPosition, "EndPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AvgHitTime", &AvgHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumHits", &NumHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trajectories", (void*)&Trajectories);
      R__insp.InspectMember("map<int,int>", (void*)&Trajectories, "Trajectories.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TFgdOnlyModule
} // namespace ND::TFgdOnlyModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd2DCluster : new ::ND::TFgdOnlyModule::TFgd2DCluster;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd2DCluster[nElements] : new ::ND::TFgdOnlyModule::TFgd2DCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd2DCluster*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd2DCluster*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd2DCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TFgdOnlyModule::TFgd2DCluster

      namespace ND {
         namespace TSmrdReconModule {
//______________________________________________________________________________
void TSmrdReconHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSmrdReconModule::TSmrdReconHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSmrdReconModule::TSmrdReconHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSmrdReconModule::TSmrdReconHit::Class(),this);
   }
}

} // namespace ND::TSmrdReconModule
} // namespace ND::TSmrdReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TSmrdReconModule {
void TSmrdReconHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSmrdReconModule::TSmrdReconHit.
      TClass *R__cl = ::ND::TSmrdReconModule::TSmrdReconHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionUncertainty", &PositionUncertainty);
      R__insp.InspectMember(PositionUncertainty, "PositionUncertainty.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dZ", &dZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dT", &dT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ContribCharge[2]", ContribCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Wall", &Wall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yoke", &Yoke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Layer", &Layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tower", &Tower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter", &Counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RMM", &RMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TFB", &TFB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsInnerMatched", &IsInnerMatched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsUsed", &IsUsed);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TSmrdReconModule
} // namespace ND::TSmrdReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      return  p ? new(p) ::ND::TSmrdReconModule::TSmrdReconHit : new ::ND::TSmrdReconModule::TSmrdReconHit;
   }
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSmrdReconModule::TSmrdReconHit[nElements] : new ::ND::TSmrdReconModule::TSmrdReconHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      delete ((::ND::TSmrdReconModule::TSmrdReconHit*)p);
   }
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      delete [] ((::ND::TSmrdReconModule::TSmrdReconHit*)p);
   }
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      typedef ::ND::TSmrdReconModule::TSmrdReconHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TSmrdReconModule::TSmrdReconHit

      namespace ND {
         namespace TSmrdReconModule {
//______________________________________________________________________________
void TSmrdIsoTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSmrdReconModule::TSmrdIsoTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSmrdReconModule::TSmrdIsoTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSmrdReconModule::TSmrdIsoTrack::Class(),this);
   }
}

} // namespace ND::TSmrdReconModule
} // namespace ND::TSmrdReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TSmrdReconModule {
void TSmrdIsoTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSmrdReconModule::TSmrdIsoTrack.
      TClass *R__cl = ::ND::TSmrdReconModule::TSmrdIsoTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPos", &FrontPos);
      R__insp.InspectMember(FrontPos, "FrontPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosVariance", &FrontPosVariance);
      R__insp.InspectMember(FrontPosVariance, "FrontPosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPos", &BackPos);
      R__insp.InspectMember(BackPos, "BackPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosVariance", &BackPosVariance);
      R__insp.InspectMember(BackPosVariance, "BackPosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KalmanStatus", &KalmanStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgtime", &avgtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThetaAngle", &ThetaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PhiAngle", &PhiAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitPos", &TrueInitPos);
      R__insp.InspectMember(TrueInitPos, "TrueInitPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitDet", &TrueInitDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueFinalPos", &TrueFinalPos);
      R__insp.InspectMember(TrueFinalPos, "TrueFinalPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueFinalDet", &TrueFinalDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitMom", &TrueInitMom);
      R__insp.InspectMember(TrueInitMom, "TrueInitMom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueId", &TrueId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TruePDG", &TruePDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParentId", &TrueParentId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueHitPurity", &TrueHitPurity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueHitEff", &TrueHitEff);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TSmrdReconModule
} // namespace ND::TSmrdReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      return  p ? new(p) ::ND::TSmrdReconModule::TSmrdIsoTrack : new ::ND::TSmrdReconModule::TSmrdIsoTrack;
   }
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSmrdReconModule::TSmrdIsoTrack[nElements] : new ::ND::TSmrdReconModule::TSmrdIsoTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      delete ((::ND::TSmrdReconModule::TSmrdIsoTrack*)p);
   }
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      delete [] ((::ND::TSmrdReconModule::TSmrdIsoTrack*)p);
   }
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      typedef ::ND::TSmrdReconModule::TSmrdIsoTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TSmrdReconModule::TSmrdIsoTrack

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TTrackerVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerVertex::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TTrackerVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerVertex.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerVertex : new ::ND::TTrackerReconModule::TTrackerVertex;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerVertex[nElements] : new ::ND::TTrackerReconModule::TTrackerVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerVertex*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerVertex*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TTrackerVertex

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TTrackerResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerResult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerResult::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerResult::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TTrackerResult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerResult.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerResult::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConstitIdx[2]", ConstitIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTotalConstituents", &NTotalConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Constituents", &Constituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isForward", &isForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "matchingFailure_flag", &matchingFailure_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Likelihoods", (void*)&Likelihoods);
      R__insp.InspectMember("vector<double>", (void*)&Likelihoods, "Likelihoods.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pids", (void*)&Pids);
      R__insp.InspectMember("vector<int>", (void*)&Pids, "Pids.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTPCs", &NTPCs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TPC", &TPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGDs", &NFGDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD", &FGD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nodes", &Nodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackConstituentsObject", &hackConstituentsObject);
      R__insp.InspectMember(hackConstituentsObject, "hackConstituentsObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTPCTrack", &hackTPCTrack);
      R__insp.InspectMember(hackTPCTrack, "hackTPCTrack.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackFGDTrack", &hackFGDTrack);
      R__insp.InspectMember(hackFGDTrack, "hackFGDTrack.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackNodes", &hackNodes);
      R__insp.InspectMember(hackNodes, "hackNodes.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerResult : new ::ND::TTrackerReconModule::TTrackerResult;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerResult[nElements] : new ::ND::TTrackerReconModule::TTrackerResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerResult*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerResult*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TTrackerResult

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TTrueParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrueParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrueParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrueParticle::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TTrueParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrueParticle.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrueParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pur", &Pur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eff", &Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex", &Vertex);
      R__insp.InspectMember(Vertex, "Vertex.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrueParticle : new ::ND::TTrackerReconModule::TTrueParticle;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrueParticle[nElements] : new ::ND::TTrackerReconModule::TTrueParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      delete ((::ND::TTrackerReconModule::TTrueParticle*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrueParticle*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      typedef ::ND::TTrackerReconModule::TTrueParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TTrueParticle

      namespace ND {
//______________________________________________________________________________
void TTrueVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrueVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrueVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrueVertex::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrueVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrueVertex.
      TClass *R__cl = ::ND::TTrueVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pur", &Pur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eff", &Eff);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrueVertex(void *p) {
      return  p ? new(p) ::ND::TTrueVertex : new ::ND::TTrueVertex;
   }
   static void *newArray_NDcLcLTTrueVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrueVertex[nElements] : new ::ND::TTrueVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrueVertex(void *p) {
      delete ((::ND::TTrueVertex*)p);
   }
   static void deleteArray_NDcLcLTTrueVertex(void *p) {
      delete [] ((::ND::TTrueVertex*)p);
   }
   static void destruct_NDcLcLTTrueVertex(void *p) {
      typedef ::ND::TTrueVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrueVertex

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TTrackerConstituent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerConstituent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerConstituent::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerConstituent::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TTrackerConstituent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerConstituent.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerConstituent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConstitIdx[2]", ConstitIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isForward", &isForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontVariance", &FrontVariance);
      R__insp.InspectMember(FrontVariance, "FrontVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackVariance", &BackVariance);
      R__insp.InspectMember(BackVariance, "BackVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerConstituent : new ::ND::TTrackerReconModule::TTrackerConstituent;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerConstituent[nElements] : new ::ND::TTrackerReconModule::TTrackerConstituent[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerConstituent*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerConstituent*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerConstituent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TTrackerConstituent

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TTPCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTPCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTPCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTPCTrack::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TTPCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTPCTrack.
      TClass *R__cl = ::ND::TTrackerReconModule::TTPCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndof", &Ndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVariance", &PositionVariance);
      R__insp.InspectMember(PositionVariance, "PositionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrun", &NTrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ccorr", &Ccorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullEle", &PullEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullMuon", &PullMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullPion", &PullPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullKaon", &PullKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullProton", &PullProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpEle", &dEdxexpEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpMuon", &dEdxexpMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpPion", &dEdxexpPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpKaon", &dEdxexpKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpProton", &dEdxexpProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaEle", &SigmaEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaMuon", &SigmaMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaPion", &SigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaKaon", &SigmaKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaProton", &SigmaProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sigma0", &Sigma0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sigma1", &Sigma1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sigma2", &Sigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanDrift", &MeanDrift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrDirection", &TrDirection);
      R__insp.InspectMember(TrDirection, "TrDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrDirectionVar", &TrDirectionVar);
      R__insp.InspectMember(TrDirectionVar, "TrDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrCurvature", &TrCurvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrCurvatureVar", &TrCurvatureVar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HasExtrapolation", &HasExtrapolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexXX", &ExtrapolatedVertexXX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexZX", &ExtrapolatedVertexZX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexYY", &ExtrapolatedVertexYY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexZY", &ExtrapolatedVertexZY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnteringFGD", &EnteringFGD);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTPCTrack : new ::ND::TTrackerReconModule::TTPCTrack;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTPCTrack[nElements] : new ::ND::TTrackerReconModule::TTPCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      delete ((::ND::TTrackerReconModule::TTPCTrack*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTPCTrack*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      typedef ::ND::TTrackerReconModule::TTPCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TTPCTrack

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TFGDTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TFGDTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TFGDTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TFGDTrack::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TFGDTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TFGDTrack.
      TClass *R__cl = ::ND::TTrackerReconModule::TFGDTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndof", &Ndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TFGDTrack : new ::ND::TTrackerReconModule::TFGDTrack;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TFGDTrack[nElements] : new ::ND::TTrackerReconModule::TFGDTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      delete ((::ND::TTrackerReconModule::TFGDTrack*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      delete [] ((::ND::TTrackerReconModule::TFGDTrack*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      typedef ::ND::TTrackerReconModule::TFGDTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TFGDTrack

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TTrackerNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerNode.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerNode::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerNode::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TTrackerNode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerNode.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerNode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerNode : new ::ND::TTrackerReconModule::TTrackerNode;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerNode[nElements] : new ::ND::TTrackerReconModule::TTrackerNode[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerNode*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerNode*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TTrackerNode

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TTrackOther::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackOther.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackOther::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackOther::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TTrackOther::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackOther.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackOther::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Hits", &Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackHits", &hackHits);
      R__insp.InspectMember(hackHits, "hackHits.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackOther : new ::ND::TTrackerReconModule::TTrackOther;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackOther(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackOther[nElements] : new ::ND::TTrackerReconModule::TTrackOther[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackOther*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackOther*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackOther current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TTrackOther

      namespace ND {
         namespace TTrackerReconModule {
//______________________________________________________________________________
void TUnusedHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TUnusedHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TUnusedHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TUnusedHit::Class(),this);
   }
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerReconModule {
void TUnusedHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TUnusedHit.
      TClass *R__cl = ::ND::TTrackerReconModule::TUnusedHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalCharge", &TotalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeUnc", &TimeUnc);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerReconModule
} // namespace ND::TTrackerReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TUnusedHit : new ::ND::TTrackerReconModule::TUnusedHit;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TUnusedHit[nElements] : new ::ND::TTrackerReconModule::TUnusedHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      delete ((::ND::TTrackerReconModule::TUnusedHit*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      delete [] ((::ND::TTrackerReconModule::TUnusedHit*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      typedef ::ND::TTrackerReconModule::TUnusedHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerReconModule::TUnusedHit

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TTpcPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TTpcPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TTpcPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TTpcPID::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TTpcPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TTpcPID.
      TClass *R__cl = ::ND::TGlobalReconModule::TTpcPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isForward", &isForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cone", &Cone);
      R__insp.InspectMember(Cone, "Cone.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Likelihoods", (void*)&Likelihoods);
      R__insp.InspectMember("vector<double>", (void*)&Likelihoods, "Likelihoods.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPositionVar", &FrontPositionVar);
      R__insp.InspectMember(FrontPositionVar, "FrontPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPositionVar", &BackPositionVar);
      R__insp.InspectMember(BackPositionVar, "BackPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirectionVar", &FrontDirectionVar);
      R__insp.InspectMember(FrontDirectionVar, "FrontDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirectionVar", &BackDirectionVar);
      R__insp.InspectMember(BackDirectionVar, "BackDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentumError", &FrontMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentumError", &BackMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionAtTrueVertex", &PositionAtTrueVertex);
      R__insp.InspectMember(PositionAtTrueVertex, "PositionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVarAtTrueVertex", &PositionVarAtTrueVertex);
      R__insp.InspectMember(PositionVarAtTrueVertex, "PositionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionAtTrueVertex", &DirectionAtTrueVertex);
      R__insp.InspectMember(DirectionAtTrueVertex, "DirectionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVarAtTrueVertex", &DirectionVarAtTrueVertex);
      R__insp.InspectMember(DirectionVarAtTrueVertex, "DirectionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumAtTrueVertex", &MomentumAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumErrorAtTrueVertex", &MomentumErrorAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntrancePosition", (void*)&EntrancePosition);
      R__insp.InspectMember("vector<TLorentzVector*>", (void*)&EntrancePosition, "EntrancePosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitPosition", (void*)&ExitPosition);
      R__insp.InspectMember("vector<TLorentzVector*>", (void*)&ExitPosition, "ExitPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TTpcPID : new ::ND::TGlobalReconModule::TTpcPID;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTpcPID(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TTpcPID[nElements] : new ::ND::TGlobalReconModule::TTpcPID[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p) {
      delete ((::ND::TGlobalReconModule::TTpcPID*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p) {
      delete [] ((::ND::TGlobalReconModule::TTpcPID*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTTpcPID(void *p) {
      typedef ::ND::TGlobalReconModule::TTpcPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TTpcPID

      namespace ND {
//______________________________________________________________________________
void TTrueParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrueParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrueParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrueParticle::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrueParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrueParticle.
      TClass *R__cl = ::ND::TTrueParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pur", &Pur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eff", &Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex", &Vertex);
      R__insp.InspectMember(Vertex, "Vertex.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrueParticle(void *p) {
      return  p ? new(p) ::ND::TTrueParticle : new ::ND::TTrueParticle;
   }
   static void *newArray_NDcLcLTTrueParticle(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrueParticle[nElements] : new ::ND::TTrueParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrueParticle(void *p) {
      delete ((::ND::TTrueParticle*)p);
   }
   static void deleteArray_NDcLcLTTrueParticle(void *p) {
      delete [] ((::ND::TTrueParticle*)p);
   }
   static void destruct_NDcLcLTTrueParticle(void *p) {
      typedef ::ND::TTrueParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrueParticle

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TGlobalVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalVertex::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TGlobalVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalVertex.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryIndex", &PrimaryIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrueVertices", &NTrueVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TrueVertices", &TrueVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Constituents", &Constituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTrueVertexObject", &hackTrueVertexObject);
      R__insp.InspectMember(hackTrueVertexObject, "hackTrueVertexObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackVertexConstituentObject", &hackVertexConstituentObject);
      R__insp.InspectMember(hackVertexConstituentObject, "hackVertexConstituentObject.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalVertex : new ::ND::TGlobalReconModule::TGlobalVertex;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalVertex[nElements] : new ::ND::TGlobalReconModule::TGlobalVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalVertex*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalVertex*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TGlobalVertex

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TVertexConstituent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TVertexConstituent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TVertexConstituent::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TVertexConstituent::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TVertexConstituent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TVertexConstituent.
      TClass *R__cl = ::ND::TGlobalReconModule::TVertexConstituent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.InspectMember(Momentum, "Momentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", &PID);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TVertexConstituent : new ::ND::TGlobalReconModule::TVertexConstituent;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TVertexConstituent[nElements] : new ::ND::TGlobalReconModule::TVertexConstituent[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      delete ((::ND::TGlobalReconModule::TVertexConstituent*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      delete [] ((::ND::TGlobalReconModule::TVertexConstituent*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      typedef ::ND::TGlobalReconModule::TVertexConstituent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TVertexConstituent

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TFgdTimeBin::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TFgdTimeBin.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TFgdTimeBin::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TFgdTimeBin::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TFgdTimeBin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TFgdTimeBin.
      TClass *R__cl = ::ND::TGlobalReconModule::TFgdTimeBin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minTime", &minTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxTime", &maxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHits[2]", nHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawChargeSum[2]", rawChargeSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargePerLayer[2][30]", chargePerLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeWeightedPos[2]", chargeWeightedPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1OutermostHits", &FGD1OutermostHits);
      R__insp.InspectMember(FGD1OutermostHits, "FGD1OutermostHits.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2OutermostHits", &FGD2OutermostHits);
      R__insp.InspectMember(FGD2OutermostHits, "FGD2OutermostHits.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1HitLayer", (void*)&FGD1HitLayer);
      R__insp.InspectMember("vector<int>", (void*)&FGD1HitLayer, "FGD1HitLayer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1HitPosition", (void*)&FGD1HitPosition);
      R__insp.InspectMember("vector<float>", (void*)&FGD1HitPosition, "FGD1HitPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1HitQ", (void*)&FGD1HitQ);
      R__insp.InspectMember("vector<float>", (void*)&FGD1HitQ, "FGD1HitQ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1HitTrueE", (void*)&FGD1HitTrueE);
      R__insp.InspectMember("vector<float>", (void*)&FGD1HitTrueE, "FGD1HitTrueE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1HitT", (void*)&FGD1HitT);
      R__insp.InspectMember("vector<float>", (void*)&FGD1HitT, "FGD1HitT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1HitTrajID", (void*)&FGD1HitTrajID);
      R__insp.InspectMember("vector<int>", (void*)&FGD1HitTrajID, "FGD1HitTrajID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2HitLayer", (void*)&FGD2HitLayer);
      R__insp.InspectMember("vector<int>", (void*)&FGD2HitLayer, "FGD2HitLayer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2HitPosition", (void*)&FGD2HitPosition);
      R__insp.InspectMember("vector<float>", (void*)&FGD2HitPosition, "FGD2HitPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2HitQ", (void*)&FGD2HitQ);
      R__insp.InspectMember("vector<float>", (void*)&FGD2HitQ, "FGD2HitQ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2HitTrueE", (void*)&FGD2HitTrueE);
      R__insp.InspectMember("vector<float>", (void*)&FGD2HitTrueE, "FGD2HitTrueE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2HitT", (void*)&FGD2HitT);
      R__insp.InspectMember("vector<float>", (void*)&FGD2HitT, "FGD2HitT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2HitTrajID", (void*)&FGD2HitTrajID);
      R__insp.InspectMember("vector<int>", (void*)&FGD2HitTrajID, "FGD2HitTrajID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGD1Unused", &NFGD1Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD1Unused", &FGD1Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGD2Unused", &NFGD2Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD2Unused", &FGD2Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g4ID", &g4ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackFGDUnused", &hackFGDUnused);
      R__insp.InspectMember(hackFGDUnused, "hackFGDUnused.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TFgdTimeBin : new ::ND::TGlobalReconModule::TFgdTimeBin;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TFgdTimeBin[nElements] : new ::ND::TGlobalReconModule::TFgdTimeBin[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      delete ((::ND::TGlobalReconModule::TFgdTimeBin*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      delete [] ((::ND::TGlobalReconModule::TFgdTimeBin*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      typedef ::ND::TGlobalReconModule::TFgdTimeBin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TFgdTimeBin

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TOutermostHits::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TOutermostHits.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TOutermostHits::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TOutermostHits::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TOutermostHits::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TOutermostHits.
      TClass *R__cl = ::ND::TGlobalReconModule::TOutermostHits::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMinX", &hitMinX);
      R__insp.InspectMember(hitMinX, "hitMinX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMaxX", &hitMaxX);
      R__insp.InspectMember(hitMaxX, "hitMaxX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMinY", &hitMinY);
      R__insp.InspectMember(hitMinY, "hitMinY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMaxY", &hitMaxY);
      R__insp.InspectMember(hitMaxY, "hitMaxY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMinZ", &hitMinZ);
      R__insp.InspectMember(hitMinZ, "hitMinZ.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMaxZ", &hitMaxZ);
      R__insp.InspectMember(hitMaxZ, "hitMaxZ.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TOutermostHits : new ::ND::TGlobalReconModule::TOutermostHits;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TOutermostHits[nElements] : new ::ND::TGlobalReconModule::TOutermostHits[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      delete ((::ND::TGlobalReconModule::TOutermostHits*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      delete [] ((::ND::TGlobalReconModule::TOutermostHits*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      typedef ::ND::TGlobalReconModule::TOutermostHits current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TOutermostHits

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TGlobalHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalHit::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TGlobalHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalHit.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionError", &PositionError);
      R__insp.InspectMember(PositionError, "PositionError.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type", &Type);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalHit : new ::ND::TGlobalReconModule::TGlobalHit;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalHit[nElements] : new ::ND::TGlobalReconModule::TGlobalHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalHit*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalHit*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TGlobalHit

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TGlobalPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalPID::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TGlobalPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalPID.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BrokenUniqueIDs", (void*)&BrokenUniqueIDs);
      R__insp.InspectMember("vector<unsigned int>", (void*)&BrokenUniqueIDs, "BrokenUniqueIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetectorUsed[19]", DetectorUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isForward", &isForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SenseOK", &SenseOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsCurvBack", &IsCurvBack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsFgdECalIncremental", &IsFgdECalIncremental);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cone", &Cone);
      R__insp.InspectMember(Cone, "Cone.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleIds", (void*)&ParticleIds);
      R__insp.InspectMember("vector<int>", (void*)&ParticleIds, "ParticleIds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDWeights", (void*)&PIDWeights);
      R__insp.InspectMember("vector<double>", (void*)&PIDWeights, "PIDWeights.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontCharge", &FrontCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackCharge", &BackCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentumError", &FrontMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentumError", &BackMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontStateCov[7][7]", FrontStateCov);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackStateCov[7][7]", BackStateCov);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumMuon", &RangeMomentumMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumMuonFlip", &RangeMomentumMuonFlip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumPion", &RangeMomentumPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumPionFlip", &RangeMomentumPionFlip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumElectron", &RangeMomentumElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumElectronFlip", &RangeMomentumElectronFlip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumProton", &RangeMomentumProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumProtonFlip", &RangeMomentumProtonFlip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumEndToTPCMuon", &RangeMomentumEndToTPCMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumEndToTPCPion", &RangeMomentumEndToTPCPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumEndToTPCElectron", &RangeMomentumEndToTPCElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RangeMomentumEndToTPCProton", &RangeMomentumEndToTPCProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NodeTimes", (void*)&NodeTimes);
      R__insp.InspectMember("vector<pair<int,TVector2> >", (void*)&NodeTimes, "NodeTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionAtTrueVertex", &PositionAtTrueVertex);
      R__insp.InspectMember(PositionAtTrueVertex, "PositionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionAtTrueVertex", &DirectionAtTrueVertex);
      R__insp.InspectMember(DirectionAtTrueVertex, "DirectionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumAtTrueVertex", &MomentumAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumErrorAtTrueVertex", &MomentumErrorAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChargeAtTrueVertex", &ChargeAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StateCovAtTrueVertex[7][7]", StateCovAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceOK[25]", EntranceOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitOK[25]", ExitOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntrancePosition[25]", EntrancePosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitPosition[25]", ExitPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceDirection[25]", EntranceDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitDirection[25]", ExitDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceMomentum[25]", EntranceMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitMomentum[25]", ExitMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntrancePositionErr[25]", EntrancePositionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitPositionErr[25]", ExitPositionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceDirectionErr[25]", EntranceDirectionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitDirectionErr[25]", ExitDirectionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceMomentumErr[25]", EntranceMomentumErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitMomentumErr[25]", ExitMomentumErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHitsSaved", &NHitsSaved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HitsSaved", &HitsSaved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTRACKERs", &NTRACKERs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TRACKER", &TRACKER);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTPCs", &NTPCs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TPC", &TPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGDs", &NFGDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD", &FGD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NECALs", &NECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDsECALs", &NDsECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrECALs", &NTrECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ECAL", &ECAL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NP0DECALs", &NP0DECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*P0DECAL", &P0DECAL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NP0Ds", &NP0Ds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*P0D", &P0D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NSMRDs", &NSMRDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SMRD", &SMRD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NAlternates", &NAlternates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Alternates", &Alternates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPCGasPatternIDs", (void*)&TPCGasPatternIDs);
      R__insp.InspectMember("vector<int>", (void*)&TPCGasPatternIDs, "TPCGasPatternIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPCGasPathIDs", (void*)&TPCGasPathIDs);
      R__insp.InspectMember("vector<int>", (void*)&TPCGasPathIDs, "TPCGasPathIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPCGasJunctionIDs", (void*)&TPCGasJunctionIDs);
      R__insp.InspectMember("vector<int>", (void*)&TPCGasJunctionIDs, "TPCGasJunctionIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTPCObject", &hackTPCObject);
      R__insp.InspectMember(hackTPCObject, "hackTPCObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackFGDObject", &hackFGDObject);
      R__insp.InspectMember(hackFGDObject, "hackFGDObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackECALObject", &hackECALObject);
      R__insp.InspectMember(hackECALObject, "hackECALObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackP0DObject", &hackP0DObject);
      R__insp.InspectMember(hackP0DObject, "hackP0DObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackSMRDObject", &hackSMRDObject);
      R__insp.InspectMember(hackSMRDObject, "hackSMRDObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTrackerObject", &hackTrackerObject);
      R__insp.InspectMember(hackTrackerObject, "hackTrackerObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackGlobalPIDAlternate", &hackGlobalPIDAlternate);
      R__insp.InspectMember(hackGlobalPIDAlternate, "hackGlobalPIDAlternate.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalPID : new ::ND::TGlobalReconModule::TGlobalPID;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalPID[nElements] : new ::ND::TGlobalReconModule::TGlobalPID[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalPID*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalPID*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TGlobalPID

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TTPCObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TTPCObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TTPCObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TTPCObject::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TTPCObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TTPCObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TTPCObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrun", &NTrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ccorr", &Ccorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullEle", &PullEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullMuon", &PullMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullPion", &PullPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullKaon", &PullKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullProton", &PullProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpEle", &dEdxexpEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpMuon", &dEdxexpMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpPion", &dEdxexpPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpKaon", &dEdxexpKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpProton", &dEdxexpProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaEle", &SigmaEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaMuon", &SigmaMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaPion", &SigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaKaon", &SigmaKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaProton", &SigmaProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T0Source", (void*)&T0Source);
      R__insp.InspectMember("vector<int>", (void*)&T0Source, "T0Source.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHorRows", (void*)&NHorRows);
      R__insp.InspectMember("vector<int>", (void*)&NHorRows, "NHorRows.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NVerRows", (void*)&NVerRows);
      R__insp.InspectMember("vector<int>", (void*)&NVerRows, "NVerRows.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbFittedVerticalClusters", &NbFittedVerticalClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbFittedHorizontalClusters", &NbFittedHorizontalClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDist", &PDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PEField", &PEField);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPCLength", &TPCLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackType", &TrackType);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TTPCObject : new ::ND::TGlobalReconModule::TTPCObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TTPCObject[nElements] : new ::ND::TGlobalReconModule::TTPCObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      delete ((::ND::TGlobalReconModule::TTPCObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TTPCObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      typedef ::ND::TGlobalReconModule::TTPCObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TTPCObject

      namespace ND {
//______________________________________________________________________________
void TSubBaseObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSubBaseObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSubBaseObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSubBaseObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TSubBaseObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSubBaseObject.
      TClass *R__cl = ::ND::TSubBaseObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPositionVar", &FrontPositionVar);
      R__insp.InspectMember(FrontPositionVar, "FrontPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPositionVar", &BackPositionVar);
      R__insp.InspectMember(BackPositionVar, "BackPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirectionVar", &FrontDirectionVar);
      R__insp.InspectMember(FrontDirectionVar, "FrontDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirectionVar", &BackDirectionVar);
      R__insp.InspectMember(BackDirectionVar, "BackDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentumError", &FrontMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentumError", &BackMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTSubBaseObject(void *p) {
      return  p ? new(p) ::ND::TSubBaseObject : new ::ND::TSubBaseObject;
   }
   static void *newArray_NDcLcLTSubBaseObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSubBaseObject[nElements] : new ::ND::TSubBaseObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSubBaseObject(void *p) {
      delete ((::ND::TSubBaseObject*)p);
   }
   static void deleteArray_NDcLcLTSubBaseObject(void *p) {
      delete [] ((::ND::TSubBaseObject*)p);
   }
   static void destruct_NDcLcLTSubBaseObject(void *p) {
      typedef ::ND::TSubBaseObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TSubBaseObject

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TFGDObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TFGDObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TFGDObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TFGDObject::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TFGDObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TFGDObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TFGDObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgtime", &avgtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargePerLayer[30]", chargePerLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargePerLayerAttenCorr[30]", chargePerLayerAttenCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdContainment", &fgdContainment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueE", &TrueE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_exp_muon", &E_exp_muon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_exp_pion", &E_exp_pion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_exp_proton", &E_exp_proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_exp_electron", &E_exp_electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE_muon", &sigmaE_muon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE_pion", &sigmaE_pion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE_proton", &sigmaE_proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE_electron", &sigmaE_electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullMuon", &PullMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullPion", &PullPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullProton", &PullProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullElectron", &PullElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullNotSet", &PullNotSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFgdVA", &isFgdVA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFgdVA_flag", &isFgdVA_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "globpassVA_flag", &globpassVA_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_upMinZ", &fgdVA_upMinZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_downMaxZ", &fgdVA_downMaxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_upCosTheta", &fgdVA_upCosTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_downCosTheta", &fgdVA_downCosTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_otherUpQ", &fgdVA_otherUpQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_otherDownQ", &fgdVA_otherDownQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verQ", &fgdVA_verQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verLayQ", &fgdVA_verLayQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNearQ", &fgdVA_verNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNextNearQ", &fgdVA_verNextNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNextNextNearQ", &fgdVA_verNextNextNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNearQ_rect", &fgdVA_verNearQ_rect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNextNearQ_rect", &fgdVA_verNextNearQ_rect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNextNextNearQ_rect", &fgdVA_verNextNextNearQ_rect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_totalQ", &fgdVA_totalQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_totalCorrE", &fgdVA_totalCorrE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFgdEA", &isFgdEA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFgdEA_flag", &isFgdEA_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "globpassEA_flag", &globpassEA_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_otherUpQ", &fgdEA_otherUpQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_otherDownQ", &fgdEA_otherDownQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verQ", &fgdEA_verQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verLayQ", &fgdEA_verLayQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verNearQ", &fgdEA_verNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verNextNearQ", &fgdEA_verNextNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verNextNextNearQ", &fgdEA_verNextNextNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verNearQ_rect", &fgdEA_verNearQ_rect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verNextNearQ_rect", &fgdEA_verNextNearQ_rect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdEA_verNextNextNearQ_rect", &fgdEA_verNextNextNearQ_rect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdhits_Layer", (void*)&fgdhits_Layer);
      R__insp.InspectMember("vector<int>", (void*)&fgdhits_Layer, "fgdhits_Layer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdhits_Position", (void*)&fgdhits_Position);
      R__insp.InspectMember("vector<TVector3>", (void*)&fgdhits_Position, "fgdhits_Position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdhits_Time", (void*)&fgdhits_Time);
      R__insp.InspectMember("vector<float>", (void*)&fgdhits_Time, "fgdhits_Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdhits_Charge", (void*)&fgdhits_Charge);
      R__insp.InspectMember("vector<float>", (void*)&fgdhits_Charge, "fgdhits_Charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdhits_TrajID", (void*)&fgdhits_TrajID);
      R__insp.InspectMember("vector<int>", (void*)&fgdhits_TrajID, "fgdhits_TrajID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdhits_TrueE", (void*)&fgdhits_TrueE);
      R__insp.InspectMember("vector<float>", (void*)&fgdhits_TrueE, "fgdhits_TrueE.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TFGDObject : new ::ND::TGlobalReconModule::TFGDObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFGDObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TFGDObject[nElements] : new ::ND::TGlobalReconModule::TFGDObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      delete ((::ND::TGlobalReconModule::TFGDObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TFGDObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      typedef ::ND::TGlobalReconModule::TFGDObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TFGDObject

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TECALObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TECALObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TECALObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TECALObject::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TECALObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TECALObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TECALObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LLR_Quality", &LLR_Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LLR_MIP_EM", &LLR_MIP_EM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LLR_MIP_Pion", &LLR_MIP_Pion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LLR_EM_HIP", &LLR_EM_HIP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LLR_MIP_EM_LowMomentum", &LLR_MIP_EM_LowMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LLR_MIP_HIP_VACut", &LLR_MIP_HIP_VACut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageHitTime", &AverageHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageZPosition", &AverageZPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Result", &EMEnergyFit_Result);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Uncertainty", &EMEnergyFit_Uncertainty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FilledAsType", &FilledAsType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Circularity", &PID_Circularity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Angle", &PID_Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_ShowerAngle", &PID_ShowerAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Asymmetry", &PID_Asymmetry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_TruncatedMaxRatio", &PID_TruncatedMaxRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_TransverseChargeRatio", &PID_TransverseChargeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_FrontBackRatio", &PID_FrontBackRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Containment", &Containment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Thrust", &Thrust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThrustOrigin", &ThrustOrigin);
      R__insp.InspectMember(ThrustOrigin, "ThrustOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThrustAxis", &ThrustAxis);
      R__insp.InspectMember(ThrustAxis, "ThrustAxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InnerMostLayerHit", &InnerMostLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OuterMostLayerHit", &OuterMostLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.InspectMember(Width, "Width.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseShowerObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TECALObject : new ::ND::TGlobalReconModule::TECALObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTECALObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TECALObject[nElements] : new ::ND::TGlobalReconModule::TECALObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      delete ((::ND::TGlobalReconModule::TECALObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TECALObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      typedef ::ND::TGlobalReconModule::TECALObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TECALObject

      namespace ND {
//______________________________________________________________________________
void TSubBaseShowerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSubBaseShowerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSubBaseShowerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSubBaseShowerObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TSubBaseShowerObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSubBaseShowerObject.
      TClass *R__cl = ::ND::TSubBaseShowerObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cone", &Cone);
      R__insp.InspectMember(Cone, "Cone.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTSubBaseShowerObject(void *p) {
      return  p ? new(p) ::ND::TSubBaseShowerObject : new ::ND::TSubBaseShowerObject;
   }
   static void *newArray_NDcLcLTSubBaseShowerObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSubBaseShowerObject[nElements] : new ::ND::TSubBaseShowerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSubBaseShowerObject(void *p) {
      delete ((::ND::TSubBaseShowerObject*)p);
   }
   static void deleteArray_NDcLcLTSubBaseShowerObject(void *p) {
      delete [] ((::ND::TSubBaseShowerObject*)p);
   }
   static void destruct_NDcLcLTSubBaseShowerObject(void *p) {
      typedef ::ND::TSubBaseShowerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TSubBaseShowerObject

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TP0DObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TP0DObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TP0DObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TP0DObject::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TP0DObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TP0DObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TP0DObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgtime", &avgtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleId", (void*)&ParticleId);
      R__insp.InspectMember("vector<int>", (void*)&ParticleId, "ParticleId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDWeight", (void*)&PIDWeight);
      R__insp.InspectMember("vector<double>", (void*)&PIDWeight, "PIDWeight.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseShowerObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TP0DObject : new ::ND::TGlobalReconModule::TP0DObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTP0DObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TP0DObject[nElements] : new ::ND::TGlobalReconModule::TP0DObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      delete ((::ND::TGlobalReconModule::TP0DObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TP0DObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      typedef ::ND::TGlobalReconModule::TP0DObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TP0DObject

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TSMRDObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TSMRDObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TSMRDObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TSMRDObject::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TSMRDObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TSMRDObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TSMRDObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgtime", &avgtime);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TSMRDObject : new ::ND::TGlobalReconModule::TSMRDObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TSMRDObject[nElements] : new ::ND::TGlobalReconModule::TSMRDObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      delete ((::ND::TGlobalReconModule::TSMRDObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TSMRDObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      typedef ::ND::TGlobalReconModule::TSMRDObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TSMRDObject

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TTrackerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TTrackerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TTrackerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TTrackerObject::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TTrackerObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TTrackerObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TTrackerObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "matchingFailure_flag", &matchingFailure_flag);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TTrackerObject : new ::ND::TGlobalReconModule::TTrackerObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TTrackerObject[nElements] : new ::ND::TGlobalReconModule::TTrackerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      delete ((::ND::TGlobalReconModule::TTrackerObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TTrackerObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      typedef ::ND::TGlobalReconModule::TTrackerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TTrackerObject

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TGlobalPIDAlternate::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalPIDAlternate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalPIDAlternate::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalPIDAlternate::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TGlobalPIDAlternate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalPIDAlternate.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalPIDAlternate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetectorUsed[19]", DetectorUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleId", &ParticleId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDWeight", &PIDWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPositionVar", &FrontPositionVar);
      R__insp.InspectMember(FrontPositionVar, "FrontPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPositionVar", &BackPositionVar);
      R__insp.InspectMember(BackPositionVar, "BackPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirectionVar", &FrontDirectionVar);
      R__insp.InspectMember(FrontDirectionVar, "FrontDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirectionVar", &BackDirectionVar);
      R__insp.InspectMember(BackDirectionVar, "BackDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentumError", &FrontMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentumError", &BackMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionAtTrueVertex", &PositionAtTrueVertex);
      R__insp.InspectMember(PositionAtTrueVertex, "PositionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVarAtTrueVertex", &PositionVarAtTrueVertex);
      R__insp.InspectMember(PositionVarAtTrueVertex, "PositionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionAtTrueVertex", &DirectionAtTrueVertex);
      R__insp.InspectMember(DirectionAtTrueVertex, "DirectionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVarAtTrueVertex", &DirectionVarAtTrueVertex);
      R__insp.InspectMember(DirectionVarAtTrueVertex, "DirectionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumAtTrueVertex", &MomentumAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumErrorAtTrueVertex", &MomentumErrorAtTrueVertex);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalPIDAlternate : new ::ND::TGlobalReconModule::TGlobalPIDAlternate;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalPIDAlternate[nElements] : new ::ND::TGlobalReconModule::TGlobalPIDAlternate[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalPIDAlternate*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalPIDAlternate*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalPIDAlternate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TGlobalPIDAlternate

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TTPCOtherObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TTPCOtherObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TTPCOtherObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TTPCOtherObject::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TTPCOtherObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TTPCOtherObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TTPCOtherObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TTPCOtherObject : new ::ND::TGlobalReconModule::TTPCOtherObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TTPCOtherObject[nElements] : new ::ND::TGlobalReconModule::TTPCOtherObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      delete ((::ND::TGlobalReconModule::TTPCOtherObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TTPCOtherObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      typedef ::ND::TGlobalReconModule::TTPCOtherObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TTPCOtherObject

      namespace ND {
         namespace TGlobalReconModule {
//______________________________________________________________________________
void TSMRDHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TSMRDHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TSMRDHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TSMRDHit::Class(),this);
   }
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TGlobalReconModule {
void TSMRDHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TSMRDHit.
      TClass *R__cl = ::ND::TGlobalReconModule::TSMRDHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Wall", &Wall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yoke", &Yoke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Layer", &Layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tower", &Tower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter", &Counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionError", &PositionError);
      R__insp.InspectMember(PositionError, "PositionError.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type", &Type);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TGlobalReconModule
} // namespace ND::TGlobalReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TSMRDHit : new ::ND::TGlobalReconModule::TSMRDHit;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TSMRDHit[nElements] : new ::ND::TGlobalReconModule::TSMRDHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      delete ((::ND::TGlobalReconModule::TSMRDHit*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      delete [] ((::ND::TGlobalReconModule::TSMRDHit*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      typedef ::ND::TGlobalReconModule::TSMRDHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TGlobalReconModule::TSMRDHit

      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
void TECALReconObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconObject::Class(),this);
   }
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerECALReconModule {
void TECALReconObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconObject.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FilledAsTrack", &FilledAsTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FilledAsShower", &FilledAsShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Track", &Track);
      R__insp.InspectMember(Track, "Track.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Shower", &Shower);
      R__insp.InspectMember(Shower, "Shower.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cluster", &Cluster);
      R__insp.InspectMember(Cluster, "Cluster.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID", &G4ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Primary", &G4ID_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness_Primary", &Completeness_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness_Primary", &Cleanliness_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Recursive", &G4ID_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Recursive2", &G4ID_Recursive2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Recursive3", &G4ID_Recursive3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Recursive4", &G4ID_Recursive4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness_Recursive", &Completeness_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness_Recursive", &Cleanliness_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Single", &G4ID_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Proximity_Single", &Proximity_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness_Single", &Completeness_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness_Single", &Cleanliness_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NIsXHits", &NIsXHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NIsYHits", &NIsYHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NIsZHits", &NIsZHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersHit", &NLayersHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxPerpBarHit", &MaxPerpBarHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxParaBarHit", &MaxParaBarHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinBarHit", &MinBarHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InnerMostLayerHit", &InnerMostLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OuterMostLayerHit", &OuterMostLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalHitCharge", &TotalHitCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageHitTime", &AverageHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Module", (void*)&Module);
      R__insp.InspectMember("string", (void*)&Module, "Module.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ObjectLength", &ObjectLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Circularity", &PID_Circularity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Angle", &PID_Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_ShowerAngle", &PID_ShowerAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Asymmetry", &PID_Asymmetry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_TruncatedMaxRatio", &PID_TruncatedMaxRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_TransverseChargeRatio", &PID_TransverseChargeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_FrontBackRatio", &PID_FrontBackRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Containment", &Containment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_LLR_Quality", &PID_LLR_Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_LLR_MIP_EM", &PID_LLR_MIP_EM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_LLR_MIP_Pion", &PID_LLR_MIP_Pion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_LLR_EM_HIP", &PID_LLR_EM_HIP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_LLR_MIP_EM_LowMomentum", &PID_LLR_MIP_EM_LowMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageZPosition", &AverageZPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Result", &EMEnergyFit_Result);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Uncertainty", &EMEnergyFit_Uncertainty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Likelihood_energyGrad", &EMEnergyFit_Likelihood_energyGrad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Likelihood_energy_qsumGrad", &EMEnergyFit_Likelihood_energy_qsumGrad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Likelihood_qsum_like", &EMEnergyFit_Likelihood_qsum_like);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QSum", &EMEnergyFit_Para_QSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QMean", &EMEnergyFit_Para_QMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QRMS", &EMEnergyFit_Para_QRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QSkew", &EMEnergyFit_Para_QSkew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QMax", &EMEnergyFit_Para_QMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Thrust", &Thrust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThrustOrigin", &ThrustOrigin);
      R__insp.InspectMember(ThrustOrigin, "ThrustOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThrustAxis", &ThrustAxis);
      R__insp.InspectMember(ThrustAxis, "ThrustAxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchingLikelihood", &MatchingLikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHitsAtLayersWithManyHits", &NHitsAtLayersWithManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersTwoHits", &NLayersTwoHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersThreeHits", &NLayersThreeHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FirstLayerManyHits", &FirstLayerManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LastLayerManyHits", &LastLayerManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxHitsInALayer", &MaxHitsInALayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxHitChargeLayer", &MaxHitChargeLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clustering_3DSeedType", &Clustering_3DSeedType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clustering_Added3DClusterHits", &Clustering_Added3DClusterHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pointing", &Pointing);
      R__insp.InspectMember(Pointing, "Pointing.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconObject : new ::ND::TTrackerECALReconModule::TECALReconObject;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconObject[nElements] : new ::ND::TTrackerECALReconModule::TECALReconObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconObject*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconObject*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerECALReconModule::TECALReconObject

      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
void TECALReconTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconTrack::Class(),this);
   }
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerECALReconModule {
void TECALReconTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconTrack.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconTrack : new ::ND::TTrackerECALReconModule::TECALReconTrack;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconTrack[nElements] : new ::ND::TTrackerECALReconModule::TECALReconTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconTrack*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconTrack*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerECALReconModule::TECALReconTrack

      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
void TECALReconShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconShower::Class(),this);
   }
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerECALReconModule {
void TECALReconShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconShower.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngle", &ConeAngle);
      R__insp.InspectMember(ConeAngle, "ConeAngle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconShower : new ::ND::TTrackerECALReconModule::TECALReconShower;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconShower[nElements] : new ::ND::TTrackerECALReconModule::TECALReconShower[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconShower*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconShower*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerECALReconModule::TECALReconShower

      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
void TECALReconCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconCluster::Class(),this);
   }
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerECALReconModule {
void TECALReconCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconCluster.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconCluster : new ::ND::TTrackerECALReconModule::TECALReconCluster;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconCluster[nElements] : new ::ND::TTrackerECALReconModule::TECALReconCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconCluster*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconCluster*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerECALReconModule::TECALReconCluster

      namespace ND {
         namespace TTrackerECALReconModule {
//______________________________________________________________________________
void TECALReconUnmatchedObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconUnmatchedObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class(),this);
   }
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTrackerECALReconModule {
void TECALReconUnmatchedObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconUnmatchedObject.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "View", &View);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalHitCharge", &TotalHitCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageHitTime", &AverageHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InnerMostLayerHit", &InnerMostLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OuterMostLayerHit", &OuterMostLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID", &G4ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Primary", &G4ID_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Recursive", &G4ID_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Single", &G4ID_Single);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTrackerECALReconModule
} // namespace ND::TTrackerECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject : new ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject[nElements] : new ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject

      namespace ND {
         namespace TP0DECALReconModule {
//______________________________________________________________________________
void TP0DECALReconTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DECALReconModule::TP0DECALReconTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DECALReconModule::TP0DECALReconTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DECALReconModule::TP0DECALReconTrack::Class(),this);
   }
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DECALReconModule {
void TP0DECALReconTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DECALReconModule::TP0DECALReconTrack.
      TClass *R__cl = ::ND::TP0DECALReconModule::TP0DECALReconTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Curvature", &Curvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.InspectMember(Width, "Width.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AMR", &AMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CWTrackWidth", &CWTrackWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Max_Ratio", &Max_Ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NormChargeSD", &NormChargeSD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PathChargeRatio", &PathChargeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrShval", &TrShval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BenCWPosition", &BenCWPosition);
      R__insp.InspectMember(BenCWPosition, "BenCWPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StackNo", &StackNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Module", (void*)&Module);
      R__insp.InspectMember("string", (void*)&Module, "Module.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueID", &TrueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TruePDG", &TruePDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParentID", &TrueParentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueHitPurity", &TrueHitPurity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueHitEfficiency", &TrueHitEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitPos", &TrueInitPos);
      R__insp.InspectMember(TrueInitPos, "TrueInitPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueFinalPos", &TrueFinalPos);
      R__insp.InspectMember(TrueFinalPos, "TrueFinalPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitMom", &TrueInitMom);
      R__insp.InspectMember(TrueInitMom, "TrueInitMom.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      return  p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconTrack : new ::ND::TP0DECALReconModule::TP0DECALReconTrack;
   }
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconTrack[nElements] : new ::ND::TP0DECALReconModule::TP0DECALReconTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      delete ((::ND::TP0DECALReconModule::TP0DECALReconTrack*)p);
   }
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      delete [] ((::ND::TP0DECALReconModule::TP0DECALReconTrack*)p);
   }
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      typedef ::ND::TP0DECALReconModule::TP0DECALReconTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DECALReconModule::TP0DECALReconTrack

      namespace ND {
         namespace TP0DECALReconModule {
//______________________________________________________________________________
void TP0DECALReconShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DECALReconModule::TP0DECALReconShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DECALReconModule::TP0DECALReconShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DECALReconModule::TP0DECALReconShower::Class(),this);
   }
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DECALReconModule {
void TP0DECALReconShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DECALReconModule::TP0DECALReconShower.
      TClass *R__cl = ::ND::TP0DECALReconModule::TP0DECALReconShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngle", &ConeAngle);
      R__insp.InspectMember(ConeAngle, "ConeAngle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AMR", &AMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CWTrackWidth", &CWTrackWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Max_Ratio", &Max_Ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NormChargeSD", &NormChargeSD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PathChargeRatio", &PathChargeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrShval", &TrShval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BenCWPosition", &BenCWPosition);
      R__insp.InspectMember(BenCWPosition, "BenCWPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StackNo", &StackNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueID", &TrueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Module", (void*)&Module);
      R__insp.InspectMember("string", (void*)&Module, "Module.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      return  p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconShower : new ::ND::TP0DECALReconModule::TP0DECALReconShower;
   }
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconShower[nElements] : new ::ND::TP0DECALReconModule::TP0DECALReconShower[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      delete ((::ND::TP0DECALReconModule::TP0DECALReconShower*)p);
   }
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      delete [] ((::ND::TP0DECALReconModule::TP0DECALReconShower*)p);
   }
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      typedef ::ND::TP0DECALReconModule::TP0DECALReconShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DECALReconModule::TP0DECALReconShower

      namespace ND {
         namespace TP0DECALReconModule {
//______________________________________________________________________________
void TP0DECALLayerCharge::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DECALReconModule::TP0DECALLayerCharge.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DECALReconModule::TP0DECALLayerCharge::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DECALReconModule::TP0DECALLayerCharge::Class(),this);
   }
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DECALReconModule {
void TP0DECALLayerCharge::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DECALReconModule::TP0DECALLayerCharge.
      TClass *R__cl = ::ND::TP0DECALReconModule::TP0DECALLayerCharge::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FirstTime", &FirstTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LastTime", &LastTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge[6]", Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module_name", &module_name);
      R__insp.InspectMember(module_name, "module_name.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DECALReconModule
} // namespace ND::TP0DECALReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p) {
      return  p ? new(p) ::ND::TP0DECALReconModule::TP0DECALLayerCharge : new ::ND::TP0DECALReconModule::TP0DECALLayerCharge;
   }
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DECALReconModule::TP0DECALLayerCharge[nElements] : new ::ND::TP0DECALReconModule::TP0DECALLayerCharge[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p) {
      delete ((::ND::TP0DECALReconModule::TP0DECALLayerCharge*)p);
   }
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p) {
      delete [] ((::ND::TP0DECALReconModule::TP0DECALLayerCharge*)p);
   }
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void *p) {
      typedef ::ND::TP0DECALReconModule::TP0DECALLayerCharge current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DECALReconModule::TP0DECALLayerCharge

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DAlgoRes::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DAlgoRes.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DAlgoRes::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DAlgoRes::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DAlgoRes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DAlgoRes.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DAlgoRes::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FullName", (void*)&FullName);
      R__insp.InspectMember("string", (void*)&FullName, "FullName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgoResults", (void*)&AlgoResults);
      R__insp.InspectMember("vector<short>", (void*)&AlgoResults, "AlgoResults.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Parent", &Parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UsedHitCluster", &UsedHitCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UnusedHitCluster", &UnusedHitCluster);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DAlgoRes : new ::ND::TP0DReconModule::TP0DAlgoRes;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DAlgoRes[nElements] : new ::ND::TP0DReconModule::TP0DAlgoRes[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      delete ((::ND::TP0DReconModule::TP0DAlgoRes*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DAlgoRes*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      typedef ::ND::TP0DReconModule::TP0DAlgoRes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DAlgoRes

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DVertex::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DVertex.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fiducial", &Fiducial);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DVertex : new ::ND::TP0DReconModule::TP0DVertex;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DVertex[nElements] : new ::ND::TP0DReconModule::TP0DVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      delete ((::ND::TP0DReconModule::TP0DVertex*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DVertex*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      typedef ::ND::TP0DReconModule::TP0DVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DVertex

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DParticle::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DParticle.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SideDeposit", &SideDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndDeposit", &EndDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "realPIDNames", (void*)&realPIDNames);
      R__insp.InspectMember("vector<string>", (void*)&realPIDNames, "realPIDNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "realPIDValues", (void*)&realPIDValues);
      R__insp.InspectMember("vector<vector<float> >", (void*)&realPIDValues, "realPIDValues.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "integerPIDNames", (void*)&integerPIDNames);
      R__insp.InspectMember("vector<string>", (void*)&integerPIDNames, "integerPIDNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "integerPIDValues", (void*)&integerPIDValues);
      R__insp.InspectMember("vector<vector<short> >", (void*)&integerPIDValues, "integerPIDValues.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", (void*)&PID);
      R__insp.InspectMember("vector<short>", (void*)&PID, "PID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_weight", (void*)&PID_weight);
      R__insp.InspectMember("vector<float>", (void*)&PID_weight, "PID_weight.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DParticle : new ::ND::TP0DReconModule::TP0DParticle;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DParticle(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DParticle[nElements] : new ::ND::TP0DReconModule::TP0DParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      delete ((::ND::TP0DReconModule::TP0DParticle*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DParticle*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      typedef ::ND::TP0DReconModule::TP0DParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DParticle

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DShower::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DShower.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SideDeposit", &SideDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndDeposit", &EndDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cone", &Cone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DShower : new ::ND::TP0DReconModule::TP0DShower;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DShower(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DShower[nElements] : new ::ND::TP0DReconModule::TP0DShower[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      delete ((::ND::TP0DReconModule::TP0DShower*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DShower*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      typedef ::ND::TP0DReconModule::TP0DShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DShower

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DTrack::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DTrack.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SideDeposit", &SideDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndDeposit", &EndDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DTrack : new ::ND::TP0DReconModule::TP0DTrack;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DTrack[nElements] : new ::ND::TP0DReconModule::TP0DTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      delete ((::ND::TP0DReconModule::TP0DTrack*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DTrack*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      typedef ::ND::TP0DReconModule::TP0DTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DTrack

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DNode.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DNode::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DNode::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DNode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DNode.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DNode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DNode : new ::ND::TP0DReconModule::TP0DNode;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DNode(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DNode[nElements] : new ::ND::TP0DReconModule::TP0DNode[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      delete ((::ND::TP0DReconModule::TP0DNode*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DNode*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      typedef ::ND::TP0DReconModule::TP0DNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DNode

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DHit::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DHit.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeomID", &GeomID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChanID", &ChanID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DHit : new ::ND::TP0DReconModule::TP0DHit;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DHit[nElements] : new ::ND::TP0DReconModule::TP0DHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      delete ((::ND::TP0DReconModule::TP0DHit*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DHit*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      typedef ::ND::TP0DReconModule::TP0DHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DHit

      namespace ND {
         namespace TP0DReconModule {
//______________________________________________________________________________
void TP0DCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DCluster::Class(),this);
   }
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TP0DReconModule {
void TP0DCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DCluster.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFiducialHits", &NFiducialHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Moments[9]", Moments);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TP0DReconModule
} // namespace ND::TP0DReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DCluster : new ::ND::TP0DReconModule::TP0DCluster;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DCluster(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DCluster[nElements] : new ::ND::TP0DReconModule::TP0DCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      delete ((::ND::TP0DReconModule::TP0DCluster*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DCluster*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      typedef ::ND::TP0DReconModule::TP0DCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TP0DReconModule::TP0DCluster

      namespace ND {
         namespace TTruthVerticesModule {
//______________________________________________________________________________
void TTruthVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTruthVerticesModule::TTruthVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTruthVerticesModule::TTruthVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTruthVerticesModule::TTruthVertex::Class(),this);
   }
}

} // namespace ND::TTruthVerticesModule
} // namespace ND::TTruthVerticesModule
//______________________________________________________________________________
      namespace ND {
         namespace TTruthVerticesModule {
void TTruthVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTruthVerticesModule::TTruthVertex.
      TClass *R__cl = ::ND::TTruthVerticesModule::TTruthVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Generator", (void*)&Generator);
      R__insp.InspectMember("string", (void*)&Generator, "Generator.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ReactionCode", (void*)&ReactionCode);
      R__insp.InspectMember("string", (void*)&ReactionCode, "ReactionCode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Subdetector", &Subdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fiducial", &Fiducial);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPrimaryTraj", &NPrimaryTraj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryTrajIDs", (void*)&PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&PrimaryTrajIDs, "PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NeutrinoPDG", &NeutrinoPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NeutrinoMomentum", &NeutrinoMomentum);
      R__insp.InspectMember(NeutrinoMomentum, "NeutrinoMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetPDG", &TargetPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetMomentum", &TargetMomentum);
      R__insp.InspectMember(TargetMomentum, "TargetMomentum.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTruthVerticesModule
} // namespace ND::TTruthVerticesModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      return  p ? new(p) ::ND::TTruthVerticesModule::TTruthVertex : new ::ND::TTruthVerticesModule::TTruthVertex;
   }
   static void *newArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTruthVerticesModule::TTruthVertex[nElements] : new ::ND::TTruthVerticesModule::TTruthVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      delete ((::ND::TTruthVerticesModule::TTruthVertex*)p);
   }
   static void deleteArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      delete [] ((::ND::TTruthVerticesModule::TTruthVertex*)p);
   }
   static void destruct_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      typedef ::ND::TTruthVerticesModule::TTruthVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTruthVerticesModule::TTruthVertex

      namespace ND {
         namespace TTruthTrajectoriesModule {
//______________________________________________________________________________
void TTruthTrajectory::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTruthTrajectoriesModule::TTruthTrajectory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTruthTrajectoriesModule::TTruthTrajectory::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTruthTrajectoriesModule::TTruthTrajectory::Class(),this);
   }
}

} // namespace ND::TTruthTrajectoriesModule
} // namespace ND::TTruthTrajectoriesModule
//______________________________________________________________________________
      namespace ND {
         namespace TTruthTrajectoriesModule {
void TTruthTrajectory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTruthTrajectoriesModule::TTruthTrajectory.
      TClass *R__cl = ::ND::TTruthTrajectoriesModule::TTruthTrajectory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDG", &PDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name", (void*)&Name);
      R__insp.InspectMember("string", (void*)&Name, "Name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Category", &Category);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitMomentum", &InitMomentum);
      R__insp.InspectMember(InitMomentum, "InitMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitPosition", &InitPosition);
      R__insp.InspectMember(InitPosition, "InitPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FinalPosition", &FinalPosition);
      R__insp.InspectMember(FinalPosition, "FinalPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParentID", &ParentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryID", &PrimaryID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass", &Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Points", (void*)&Points);
      R__insp.InspectMember("vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>", (void*)&Points, "Points.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceSubdetectors", (void*)&TraceSubdetectors);
      R__insp.InspectMember("vector<int>", (void*)&TraceSubdetectors, "TraceSubdetectors.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceInActive", (void*)&TraceInActive);
      R__insp.InspectMember("vector<bool>", (void*)&TraceInActive, "TraceInActive.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceEntrancePosition", (void*)&TraceEntrancePosition);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&TraceEntrancePosition, "TraceEntrancePosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceExitPosition", (void*)&TraceExitPosition);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&TraceExitPosition, "TraceExitPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceEntranceMomentum", (void*)&TraceEntranceMomentum);
      R__insp.InspectMember("vector<TVector3>", (void*)&TraceEntranceMomentum, "TraceEntranceMomentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceExitMomentum", (void*)&TraceExitMomentum);
      R__insp.InspectMember("vector<TVector3>", (void*)&TraceExitMomentum, "TraceExitMomentum.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTruthTrajectoriesModule
} // namespace ND::TTruthTrajectoriesModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      return  p ? new(p) ::ND::TTruthTrajectoriesModule::TTruthTrajectory : new ::ND::TTruthTrajectoriesModule::TTruthTrajectory;
   }
   static void *newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTruthTrajectoriesModule::TTruthTrajectory[nElements] : new ::ND::TTruthTrajectoriesModule::TTruthTrajectory[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      delete ((::ND::TTruthTrajectoriesModule::TTruthTrajectory*)p);
   }
   static void deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      delete [] ((::ND::TTruthTrajectoriesModule::TTruthTrajectory*)p);
   }
   static void destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      typedef ::ND::TTruthTrajectoriesModule::TTruthTrajectory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTruthTrajectoriesModule::TTruthTrajectory

//______________________________________________________________________________
namespace ROOTDict {
   void ROOTcLcLTIOFeatures_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ROOT::TIOFeatures.
      typedef ::ROOTShadow::Shadow::ROOT::TIOFeatures ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ROOT::TIOFeatures*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIOBits", &sobj->fIOBits);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ROOTcLcLTIOFeatures(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TIOFeatures : new ::ROOT::TIOFeatures;
   }
   static void *newArray_ROOTcLcLTIOFeatures(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TIOFeatures[nElements] : new ::ROOT::TIOFeatures[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTIOFeatures(void *p) {
      delete ((::ROOT::TIOFeatures*)p);
   }
   static void deleteArray_ROOTcLcLTIOFeatures(void *p) {
      delete [] ((::ROOT::TIOFeatures*)p);
   }
   static void destruct_ROOTcLcLTIOFeatures(void *p) {
      typedef ::ROOT::TIOFeatures current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ROOT::TIOFeatures

//______________________________________________________________________________
namespace ROOTDict {
   void pairlEintcOTVector2gR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,TVector2>.
      typedef ::ROOTShadow::Shadow::pairlEintcOTVector2gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<int,TVector2>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
      R__insp.InspectMember(sobj->second, "second.");
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlEintcOTVector2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,TVector2> : new pair<int,TVector2>;
   }
   static void *newArray_pairlEintcOTVector2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,TVector2>[nElements] : new pair<int,TVector2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOTVector2gR(void *p) {
      delete ((pair<int,TVector2>*)p);
   }
   static void deleteArray_pairlEintcOTVector2gR(void *p) {
      delete [] ((pair<int,TVector2>*)p);
   }
   static void destruct_pairlEintcOTVector2gR(void *p) {
      typedef pair<int,TVector2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<int,TVector2>

      namespace ND {
         namespace TTruthTrajectoriesModule {
//______________________________________________________________________________
void TTruthTrajectoryPoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class(),this);
   }
}

} // namespace ND::TTruthTrajectoriesModule
} // namespace ND::TTruthTrajectoriesModule
//______________________________________________________________________________
      namespace ND {
         namespace TTruthTrajectoriesModule {
void TTruthTrajectoryPoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint.
      TClass *R__cl = ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProcessType", &ProcessType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionX", &PositionX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionY", &PositionY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionZ", &PositionZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionT", &PositionT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumX", &MomentumX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumY", &MomentumY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumZ", &MomentumZ);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTruthTrajectoriesModule
} // namespace ND::TTruthTrajectoriesModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p) {
      return  p ? new(p) ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint : new ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint;
   }
   static void *newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint[nElements] : new ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p) {
      delete ((::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)p);
   }
   static void deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p) {
      delete [] ((::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)p);
   }
   static void destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void *p) {
      typedef ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint

      namespace ND {
         namespace TTRExReconModule {
//______________________________________________________________________________
void TTPCAnaJunction::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTRExReconModule::TTPCAnaJunction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTRExReconModule::TTPCAnaJunction::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTRExReconModule::TTPCAnaJunction::Class(),this);
   }
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTRExReconModule {
void TTPCAnaJunction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTRExReconModule::TTPCAnaJunction.
      TClass *R__cl = ::ND::TTRExReconModule::TTPCAnaJunction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JunctionID", &JunctionID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JunctionMatchingID", &JunctionMatchingID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPaths", &NPaths);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PathIDs", &PathIDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaximumCoordinates", &MaximumCoordinates);
      R__insp.InspectMember(MaximumCoordinates, "MaximumCoordinates.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinimumCoordinates", &MinimumCoordinates);
      R__insp.InspectMember(MinimumCoordinates, "MinimumCoordinates.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p) {
      return  p ? new(p) ::ND::TTRExReconModule::TTPCAnaJunction : new ::ND::TTRExReconModule::TTPCAnaJunction;
   }
   static void *newArray_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTRExReconModule::TTPCAnaJunction[nElements] : new ::ND::TTRExReconModule::TTPCAnaJunction[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p) {
      delete ((::ND::TTRExReconModule::TTPCAnaJunction*)p);
   }
   static void deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p) {
      delete [] ((::ND::TTRExReconModule::TTPCAnaJunction*)p);
   }
   static void destruct_NDcLcLTTRExReconModulecLcLTTPCAnaJunction(void *p) {
      typedef ::ND::TTRExReconModule::TTPCAnaJunction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTRExReconModule::TTPCAnaJunction

      namespace ND {
         namespace TTRExReconModule {
//______________________________________________________________________________
void TTPCAnaPath::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTRExReconModule::TTPCAnaPath.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTRExReconModule::TTPCAnaPath::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTRExReconModule::TTPCAnaPath::Class(),this);
   }
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
//______________________________________________________________________________
      namespace ND {
         namespace TTRExReconModule {
void TTPCAnaPath::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTRExReconModule::TTPCAnaPath.
      TClass *R__cl = ::ND::TTRExReconModule::TTPCAnaPath::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PathID", &PathID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID", &G4ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PathMatchingID", &PathMatchingID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FirstPosition", &FirstPosition);
      R__insp.InspectMember(FirstPosition, "FirstPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LastPosition", &LastPosition);
      R__insp.InspectMember(LastPosition, "LastPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsContained", &IsContained);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LikFit", &LikFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Success", &Success);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitLikelihood", &FitLikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T0Source", &T0Source);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NClusters", &NClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElePull", &ElePull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EleExp", &EleExp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EleSigma", &EleSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonPull", &MuonPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonExp", &MuonExp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonSigma", &MuonSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PionPull", &PionPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PionExp", &PionExp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PionSigma", &PionSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProtonPull", &ProtonPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProtonExp", &ProtonExp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProtonSigma", &ProtonSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KaonPull", &KaonPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KaonExp", &KaonExp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KaonSigma", &KaonSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDist", &PDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PEField", &PEField);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T0Range[2]", T0Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T0RangeDeltaX[2]", T0RangeDeltaX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", &PID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NetCharge", &NetCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NJunctions", &NJunctions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*JunctionIDs", &JunctionIDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NMatchingPaths", &NMatchingPaths);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatchingPathIDs", &MatchingPathIDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PathMatchingLikelihood", &PathMatchingLikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NMatchingPatterns", &NMatchingPatterns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatchingPatternIDs", &MatchingPatternIDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatchingPatternPathIDs", &MatchingPatternPathIDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PatternMatchingLikelihood", &PatternMatchingLikelihood);
      TObject::ShowMembers(R__insp);
}

} // namespace ND::TTRExReconModule
} // namespace ND::TTRExReconModule
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p) {
      return  p ? new(p) ::ND::TTRExReconModule::TTPCAnaPath : new ::ND::TTRExReconModule::TTPCAnaPath;
   }
   static void *newArray_NDcLcLTTRExReconModulecLcLTTPCAnaPath(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTRExReconModule::TTPCAnaPath[nElements] : new ::ND::TTRExReconModule::TTPCAnaPath[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p) {
      delete ((::ND::TTRExReconModule::TTPCAnaPath*)p);
   }
   static void deleteArray_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p) {
      delete [] ((::ND::TTRExReconModule::TTPCAnaPath*)p);
   }
   static void destruct_NDcLcLTTRExReconModulecLcLTTPCAnaPath(void *p) {
      typedef ::ND::TTRExReconModule::TTPCAnaPath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ND::TTRExReconModule::TTPCAnaPath

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

namespace ROOTDict {
   void maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary();
   static void *new_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p = 0);
   static void *newArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);
   static void deleteArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);
   static void destruct_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,pair<int,const TGeoNode*> >*)
   {
      map<int,pair<int,const TGeoNode*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,pair<int,const TGeoNode*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,pair<int,const TGeoNode*> >", -2, "prec_stl/map", 63,
                  typeid(map<int,pair<int,const TGeoNode*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,pair<int,const TGeoNode*> >) );
      instance.SetNew(&new_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDelete(&delete_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,pair<int,const TGeoNode*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,pair<int,const TGeoNode*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,pair<int,const TGeoNode*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,pair<int,const TGeoNode*> > : new map<int,pair<int,const TGeoNode*> >;
   }
   static void *newArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,pair<int,const TGeoNode*> >[nElements] : new map<int,pair<int,const TGeoNode*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      delete ((map<int,pair<int,const TGeoNode*> >*)p);
   }
   static void deleteArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      delete [] ((map<int,pair<int,const TGeoNode*> >*)p);
   }
   static void destruct_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      typedef map<int,pair<int,const TGeoNode*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,pair<int,const TGeoNode*> >

namespace ROOTDict {
   void vectorlENDcLcLTDatummUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlENDcLcLTDatummUgR_Dictionary();
   static void *new_vectorlENDcLcLTDatummUgR(void *p = 0);
   static void *newArray_vectorlENDcLcLTDatummUgR(Long_t size, void *p);
   static void delete_vectorlENDcLcLTDatummUgR(void *p);
   static void deleteArray_vectorlENDcLcLTDatummUgR(void *p);
   static void destruct_vectorlENDcLcLTDatummUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<ND::TDatum*>*)
   {
      vector<ND::TDatum*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ND::TDatum*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ND::TDatum*>", -2, "prec_stl/vector", 49,
                  typeid(vector<ND::TDatum*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlENDcLcLTDatummUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ND::TDatum*>) );
      instance.SetNew(&new_vectorlENDcLcLTDatummUgR);
      instance.SetNewArray(&newArray_vectorlENDcLcLTDatummUgR);
      instance.SetDelete(&delete_vectorlENDcLcLTDatummUgR);
      instance.SetDeleteArray(&deleteArray_vectorlENDcLcLTDatummUgR);
      instance.SetDestructor(&destruct_vectorlENDcLcLTDatummUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<ND::TDatum*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ND::TDatum*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlENDcLcLTDatummUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<ND::TDatum*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlENDcLcLTDatummUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ND::TDatum*> : new vector<ND::TDatum*>;
   }
   static void *newArray_vectorlENDcLcLTDatummUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ND::TDatum*>[nElements] : new vector<ND::TDatum*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlENDcLcLTDatummUgR(void *p) {
      delete ((vector<ND::TDatum*>*)p);
   }
   static void deleteArray_vectorlENDcLcLTDatummUgR(void *p) {
      delete [] ((vector<ND::TDatum*>*)p);
   }
   static void destruct_vectorlENDcLcLTDatummUgR(void *p) {
      typedef vector<ND::TDatum*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<ND::TDatum*>

namespace ROOTDict {
   void vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR_Dictionary();
   static void *new_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p = 0);
   static void *newArray_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(Long_t size, void *p);
   static void delete_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p);
   static void deleteArray_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p);
   static void destruct_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>*)
   {
      vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>", -2, "prec_stl/vector", 49,
                  typeid(vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>) );
      instance.SetNew(&new_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR);
      instance.SetNewArray(&newArray_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR);
      instance.SetDelete(&delete_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR);
      instance.SetDeleteArray(&deleteArray_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR);
      instance.SetDestructor(&destruct_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint> : new vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>;
   }
   static void *newArray_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>[nElements] : new vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p) {
      delete ((vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>*)p);
   }
   static void deleteArray_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p) {
      delete [] ((vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>*)p);
   }
   static void destruct_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgR(void *p) {
      typedef vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>

namespace ROOTDict {
   void vectorlETLorentzVectormUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectormUgR_Dictionary();
   static void *new_vectorlETLorentzVectormUgR(void *p = 0);
   static void *newArray_vectorlETLorentzVectormUgR(Long_t size, void *p);
   static void delete_vectorlETLorentzVectormUgR(void *p);
   static void deleteArray_vectorlETLorentzVectormUgR(void *p);
   static void destruct_vectorlETLorentzVectormUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TLorentzVector*>*)
   {
      vector<TLorentzVector*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TLorentzVector*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TLorentzVector*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectormUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TLorentzVector*>) );
      instance.SetNew(&new_vectorlETLorentzVectormUgR);
      instance.SetNewArray(&newArray_vectorlETLorentzVectormUgR);
      instance.SetDelete(&delete_vectorlETLorentzVectormUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectormUgR);
      instance.SetDestructor(&destruct_vectorlETLorentzVectormUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TLorentzVector*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TLorentzVector*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectormUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TLorentzVector*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectormUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector*> : new vector<TLorentzVector*>;
   }
   static void *newArray_vectorlETLorentzVectormUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector*>[nElements] : new vector<TLorentzVector*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectormUgR(void *p) {
      delete ((vector<TLorentzVector*>*)p);
   }
   static void deleteArray_vectorlETLorentzVectormUgR(void *p) {
      delete [] ((vector<TLorentzVector*>*)p);
   }
   static void destruct_vectorlETLorentzVectormUgR(void *p) {
      typedef vector<TLorentzVector*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TLorentzVector*>

namespace ROOTDict {
   void vectorlETLorentzVectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectorgR_Dictionary();
   static void *new_vectorlETLorentzVectorgR(void *p = 0);
   static void *newArray_vectorlETLorentzVectorgR(Long_t size, void *p);
   static void delete_vectorlETLorentzVectorgR(void *p);
   static void deleteArray_vectorlETLorentzVectorgR(void *p);
   static void destruct_vectorlETLorentzVectorgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TLorentzVector>*)
   {
      vector<TLorentzVector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TLorentzVector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector>", -2, "prec_stl/vector", 49,
                  typeid(vector<TLorentzVector>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectorgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TLorentzVector>) );
      instance.SetNew(&new_vectorlETLorentzVectorgR);
      instance.SetNewArray(&newArray_vectorlETLorentzVectorgR);
      instance.SetDelete(&delete_vectorlETLorentzVectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectorgR);
      instance.SetDestructor(&destruct_vectorlETLorentzVectorgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TLorentzVector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectorgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector> : new vector<TLorentzVector>;
   }
   static void *newArray_vectorlETLorentzVectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector>[nElements] : new vector<TLorentzVector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectorgR(void *p) {
      delete ((vector<TLorentzVector>*)p);
   }
   static void deleteArray_vectorlETLorentzVectorgR(void *p) {
      delete [] ((vector<TLorentzVector>*)p);
   }
   static void destruct_vectorlETLorentzVectorgR(void *p) {
      typedef vector<TLorentzVector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TLorentzVector>

namespace ROOTDict {
   void vectorlETVector3mUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3mUgR_Dictionary();
   static void *new_vectorlETVector3mUgR(void *p = 0);
   static void *newArray_vectorlETVector3mUgR(Long_t size, void *p);
   static void delete_vectorlETVector3mUgR(void *p);
   static void deleteArray_vectorlETVector3mUgR(void *p);
   static void destruct_vectorlETVector3mUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3*>*)
   {
      vector<TVector3*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TVector3*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3mUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3*>) );
      instance.SetNew(&new_vectorlETVector3mUgR);
      instance.SetNewArray(&newArray_vectorlETVector3mUgR);
      instance.SetDelete(&delete_vectorlETVector3mUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3mUgR);
      instance.SetDestructor(&destruct_vectorlETVector3mUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TVector3*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3mUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TVector3*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETVector3mUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3*> : new vector<TVector3*>;
   }
   static void *newArray_vectorlETVector3mUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3*>[nElements] : new vector<TVector3*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3mUgR(void *p) {
      delete ((vector<TVector3*>*)p);
   }
   static void deleteArray_vectorlETVector3mUgR(void *p) {
      delete [] ((vector<TVector3*>*)p);
   }
   static void destruct_vectorlETVector3mUgR(void *p) {
      typedef vector<TVector3*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TVector3*>

namespace ROOTDict {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "prec_stl/vector", 49,
                  typeid(vector<TVector3>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TVector3>

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEpairlEintcOTVector2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEintcOTVector2gRsPgR_Dictionary();
   static void *new_vectorlEpairlEintcOTVector2gRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEintcOTVector2gRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEintcOTVector2gRsPgR(void *p);
   static void deleteArray_vectorlEpairlEintcOTVector2gRsPgR(void *p);
   static void destruct_vectorlEpairlEintcOTVector2gRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<int,TVector2> >*)
   {
      vector<pair<int,TVector2> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<int,TVector2> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<int,TVector2> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<int,TVector2> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEintcOTVector2gRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<int,TVector2> >) );
      instance.SetNew(&new_vectorlEpairlEintcOTVector2gRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEintcOTVector2gRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEintcOTVector2gRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEintcOTVector2gRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEintcOTVector2gRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<pair<int,TVector2> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<int,TVector2> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEintcOTVector2gRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<pair<int,TVector2> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEpairlEintcOTVector2gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<int,TVector2> > : new vector<pair<int,TVector2> >;
   }
   static void *newArray_vectorlEpairlEintcOTVector2gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<int,TVector2> >[nElements] : new vector<pair<int,TVector2> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEintcOTVector2gRsPgR(void *p) {
      delete ((vector<pair<int,TVector2> >*)p);
   }
   static void deleteArray_vectorlEpairlEintcOTVector2gRsPgR(void *p) {
      delete [] ((vector<pair<int,TVector2> >*)p);
   }
   static void destruct_vectorlEpairlEintcOTVector2gRsPgR(void *p) {
      typedef vector<pair<int,TVector2> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<pair<int,TVector2> >

namespace ROOTDict {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<short>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

namespace ROOTDict {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<float> >

namespace ROOTDict {
   void vectorlEvectorlEshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<short> >*)
   {
      vector<vector<short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<short> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<short> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEshortgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<short> >) );
      instance.SetNew(&new_vectorlEvectorlEshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEshortgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEshortgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<short> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> > : new vector<vector<short> >;
   }
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> >[nElements] : new vector<vector<short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEshortgRsPgR(void *p) {
      delete ((vector<vector<short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p) {
      delete [] ((vector<vector<short> >*)p);
   }
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p) {
      typedef vector<vector<short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<short> >

/********************************************************
* oaAnalysisReaderProjectDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableoaAnalysisReaderProjectDict();

extern "C" void G__set_cpp_environmentoaAnalysisReaderProjectDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../../inc/prod7_V12/oaAnalysisReaderProjectHeaders.h");
  G__cpp_reset_tagtableoaAnalysisReaderProjectDict();
}
#include <new>
extern "C" int G__cpp_dllrevoaAnalysisReaderProjectDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ND */

/* ND::TND280Event */
static int G__oaAnalysisReaderProjectDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event[n];
     } else {
       p = new((void*) gvp) ND::TND280Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event;
     } else {
       p = new((void*) gvp) ND::TND280Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TND280Event(*(ND::TND280Event*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TND280Event(*(ND::TND280Event*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TND280Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TND280Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TND280Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TND280Event G__TNDcLcLTND280Event;
static int G__oaAnalysisReaderProjectDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TND280Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TND280Event*) (soff+(sizeof(ND::TND280Event)*i)))->~G__TNDcLcLTND280Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TND280Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TND280Event*) (soff))->~G__TNDcLcLTND280Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event* dest = (ND::TND280Event*) G__getstructoffset();
   *dest = *(ND::TND280Event*) libp->para[0].ref;
   const ND::TND280Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TDataVector */
static int G__oaAnalysisReaderProjectDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDataVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDataVector[n];
     } else {
       p = new((void*) gvp) ND::TDataVector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDataVector;
     } else {
       p = new((void*) gvp) ND::TDataVector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDataVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TDataVector(*(ND::TDataVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TDataVector(*(ND::TDataVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TDataVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDataVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TDataVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TDataVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TDataVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDataVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDataVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDataVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDataVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TDataVector G__TNDcLcLTDataVector;
static int G__oaAnalysisReaderProjectDict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TDataVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TDataVector*) (soff+(sizeof(ND::TDataVector)*i)))->~G__TNDcLcLTDataVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TDataVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TDataVector*) (soff))->~G__TNDcLcLTDataVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDataVector* dest = (ND::TDataVector*) G__getstructoffset();
   *dest = *(ND::TDataVector*) libp->para[0].ref;
   const ND::TDataVector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TData */
static int G__oaAnalysisReaderProjectDict_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TData[n];
     } else {
       p = new((void*) gvp) ND::TData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TData;
     } else {
       p = new((void*) gvp) ND::TData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TData(*(ND::TData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TData(*(ND::TData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TData G__TNDcLcLTData;
static int G__oaAnalysisReaderProjectDict_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TData*) (soff+(sizeof(ND::TData)*i)))->~G__TNDcLcLTData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TData*) (soff))->~G__TNDcLcLTData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TData* dest = (ND::TData*) G__getstructoffset();
   *dest = *(ND::TData*) libp->para[0].ref;
   const ND::TData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TDatum */
static int G__oaAnalysisReaderProjectDict_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDatum* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDatum[n];
     } else {
       p = new((void*) gvp) ND::TDatum[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDatum;
     } else {
       p = new((void*) gvp) ND::TDatum;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDatum* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TDatum(*(ND::TDatum*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TDatum(*(ND::TDatum*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TDatum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDatum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TDatum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TDatum::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TDatum*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDatum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDatum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDatum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDatum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TDatum G__TNDcLcLTDatum;
static int G__oaAnalysisReaderProjectDict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TDatum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TDatum*) (soff+(sizeof(ND::TDatum)*i)))->~G__TNDcLcLTDatum();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TDatum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TDatum*) (soff))->~G__TNDcLcLTDatum();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDatum* dest = (ND::TDatum*) G__getstructoffset();
   *dest = *(ND::TDatum*) libp->para[0].ref;
   const ND::TDatum& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TND280Context */
static int G__oaAnalysisReaderProjectDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Context* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Context[n];
     } else {
       p = new((void*) gvp) ND::TND280Context[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Context;
     } else {
       p = new((void*) gvp) ND::TND280Context;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Context* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TND280Context(*(ND::TND280Context*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TND280Context(*(ND::TND280Context*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TND280Context G__TNDcLcLTND280Context;
static int G__oaAnalysisReaderProjectDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TND280Context*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TND280Context*) (soff+(sizeof(ND::TND280Context)*i)))->~G__TNDcLcLTND280Context();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TND280Context*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TND280Context*) (soff))->~G__TNDcLcLTND280Context();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Context* dest = (ND::TND280Context*) G__getstructoffset();
   *dest = *(ND::TND280Context*) libp->para[0].ref;
   const ND::TND280Context& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSHAHashValue */
static int G__oaAnalysisReaderProjectDict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSHAHashValue* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSHAHashValue[n];
     } else {
       p = new((void*) gvp) ND::TSHAHashValue[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSHAHashValue;
     } else {
       p = new((void*) gvp) ND::TSHAHashValue;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSHAHashValue* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSHAHashValue(*(ND::TSHAHashValue*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSHAHashValue(*(ND::TSHAHashValue*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSHAHashValue G__TNDcLcLTSHAHashValue;
static int G__oaAnalysisReaderProjectDict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSHAHashValue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSHAHashValue*) (soff+(sizeof(ND::TSHAHashValue)*i)))->~G__TNDcLcLTSHAHashValue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSHAHashValue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSHAHashValue*) (soff))->~G__TNDcLcLTSHAHashValue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSHAHashValue* dest = (ND::TSHAHashValue*) G__getstructoffset();
   *dest = *(ND::TSHAHashValue*) libp->para[0].ref;
   const ND::TSHAHashValue& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TAlignmentId */
static int G__oaAnalysisReaderProjectDict_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAlignmentId* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAlignmentId[n];
     } else {
       p = new((void*) gvp) ND::TAlignmentId[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAlignmentId;
     } else {
       p = new((void*) gvp) ND::TAlignmentId;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAlignmentId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TAlignmentId(*(ND::TAlignmentId*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TAlignmentId(*(ND::TAlignmentId*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TAlignmentId G__TNDcLcLTAlignmentId;
static int G__oaAnalysisReaderProjectDict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TAlignmentId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TAlignmentId*) (soff+(sizeof(ND::TAlignmentId)*i)))->~G__TNDcLcLTAlignmentId();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TAlignmentId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TAlignmentId*) (soff))->~G__TNDcLcLTAlignmentId();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAlignmentId* dest = (ND::TAlignmentId*) G__getstructoffset();
   *dest = *(ND::TAlignmentId*) libp->para[0].ref;
   const ND::TAlignmentId& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TND280Event::Header */
static int G__oaAnalysisReaderProjectDict_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event::Header* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event::Header[n];
     } else {
       p = new((void*) gvp) ND::TND280Event::Header[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event::Header;
     } else {
       p = new((void*) gvp) ND::TND280Event::Header;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event::Header* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TND280Event::Header(*(ND::TND280Event::Header*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TND280Event::Header(*(ND::TND280Event::Header*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TND280Event::Header::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Header::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TND280Event::Header::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TND280Event::Header::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ND::TND280Event::Header*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event::Header*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event::Header*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event::Header*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Header::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::Header::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Header::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::Header::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TND280Event::Header G__TNDcLcLTND280EventcLcLHeader;
static int G__oaAnalysisReaderProjectDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TND280Event::Header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TND280Event::Header*) (soff+(sizeof(ND::TND280Event::Header)*i)))->~G__TNDcLcLTND280EventcLcLHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TND280Event::Header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TND280Event::Header*) (soff))->~G__TNDcLcLTND280EventcLcLHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event::Header* dest = (ND::TND280Event::Header*) G__getstructoffset();
   *dest = *(ND::TND280Event::Header*) libp->para[0].ref;
   const ND::TND280Event::Header& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::NRooTrackerVtx */
static int G__oaAnalysisReaderProjectDict_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::NRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::NRooTrackerVtx[n];
     } else {
       p = new((void*) gvp) ND::NRooTrackerVtx[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::NRooTrackerVtx;
     } else {
       p = new((void*) gvp) ND::NRooTrackerVtx;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::NRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::NRooTrackerVtx(*(ND::NRooTrackerVtx*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::NRooTrackerVtx(*(ND::NRooTrackerVtx*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::NRooTrackerVtx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::NRooTrackerVtx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::NRooTrackerVtx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::NRooTrackerVtx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::NRooTrackerVtx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::NRooTrackerVtx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::NRooTrackerVtx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::NRooTrackerVtx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::NRooTrackerVtx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::NRooTrackerVtx G__TNDcLcLNRooTrackerVtx;
static int G__oaAnalysisReaderProjectDict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::NRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::NRooTrackerVtx*) (soff+(sizeof(ND::NRooTrackerVtx)*i)))->~G__TNDcLcLNRooTrackerVtx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::NRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::NRooTrackerVtx*) (soff))->~G__TNDcLcLNRooTrackerVtx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::NRooTrackerVtx* dest = (ND::NRooTrackerVtx*) G__getstructoffset();
   *dest = *(ND::NRooTrackerVtx*) libp->para[0].ref;
   const ND::NRooTrackerVtx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::JNuBeamFlux */
static int G__oaAnalysisReaderProjectDict_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::JNuBeamFlux* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::JNuBeamFlux[n];
     } else {
       p = new((void*) gvp) ND::JNuBeamFlux[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::JNuBeamFlux;
     } else {
       p = new((void*) gvp) ND::JNuBeamFlux;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::JNuBeamFlux* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::JNuBeamFlux(*(ND::JNuBeamFlux*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::JNuBeamFlux(*(ND::JNuBeamFlux*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::JNuBeamFlux::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::JNuBeamFlux::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::JNuBeamFlux::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::JNuBeamFlux::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::JNuBeamFlux*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::JNuBeamFlux::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::JNuBeamFlux::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::JNuBeamFlux::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::JNuBeamFlux::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::JNuBeamFlux G__TNDcLcLJNuBeamFlux;
static int G__oaAnalysisReaderProjectDict_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::JNuBeamFlux*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::JNuBeamFlux*) (soff+(sizeof(ND::JNuBeamFlux)*i)))->~G__TNDcLcLJNuBeamFlux();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::JNuBeamFlux*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::JNuBeamFlux*) (soff))->~G__TNDcLcLJNuBeamFlux();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::JNuBeamFlux* dest = (ND::JNuBeamFlux*) G__getstructoffset();
   *dest = *(ND::JNuBeamFlux*) libp->para[0].ref;
   const ND::JNuBeamFlux& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::RooTrackerVtxBase */
static int G__oaAnalysisReaderProjectDict_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::RooTrackerVtxBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::RooTrackerVtxBase[n];
     } else {
       p = new((void*) gvp) ND::RooTrackerVtxBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::RooTrackerVtxBase;
     } else {
       p = new((void*) gvp) ND::RooTrackerVtxBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::RooTrackerVtxBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::RooTrackerVtxBase(*(ND::RooTrackerVtxBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::RooTrackerVtxBase(*(ND::RooTrackerVtxBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::RooTrackerVtxBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::RooTrackerVtxBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::RooTrackerVtxBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::RooTrackerVtxBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::RooTrackerVtxBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::RooTrackerVtxBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::RooTrackerVtxBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::RooTrackerVtxBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::RooTrackerVtxBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::RooTrackerVtxBase G__TNDcLcLRooTrackerVtxBase;
static int G__oaAnalysisReaderProjectDict_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::RooTrackerVtxBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::RooTrackerVtxBase*) (soff+(sizeof(ND::RooTrackerVtxBase)*i)))->~G__TNDcLcLRooTrackerVtxBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::RooTrackerVtxBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::RooTrackerVtxBase*) (soff))->~G__TNDcLcLRooTrackerVtxBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::RooTrackerVtxBase* dest = (ND::RooTrackerVtxBase*) G__getstructoffset();
   *dest = *(ND::RooTrackerVtxBase*) libp->para[0].ref;
   const ND::RooTrackerVtxBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::GRooTrackerVtx */
static int G__oaAnalysisReaderProjectDict_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::GRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::GRooTrackerVtx[n];
     } else {
       p = new((void*) gvp) ND::GRooTrackerVtx[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::GRooTrackerVtx;
     } else {
       p = new((void*) gvp) ND::GRooTrackerVtx;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::GRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::GRooTrackerVtx(*(ND::GRooTrackerVtx*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::GRooTrackerVtx(*(ND::GRooTrackerVtx*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::GRooTrackerVtx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::GRooTrackerVtx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::GRooTrackerVtx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::GRooTrackerVtx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::GRooTrackerVtx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::GRooTrackerVtx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::GRooTrackerVtx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::GRooTrackerVtx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::GRooTrackerVtx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::GRooTrackerVtx G__TNDcLcLGRooTrackerVtx;
static int G__oaAnalysisReaderProjectDict_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::GRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::GRooTrackerVtx*) (soff+(sizeof(ND::GRooTrackerVtx)*i)))->~G__TNDcLcLGRooTrackerVtx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::GRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::GRooTrackerVtx*) (soff))->~G__TNDcLcLGRooTrackerVtx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::GRooTrackerVtx* dest = (ND::GRooTrackerVtx*) G__getstructoffset();
   *dest = *(ND::GRooTrackerVtx*) libp->para[0].ref;
   const ND::GRooTrackerVtx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTRExReconModule */

/* ND::TTRExReconModule::TTPCAnaPattern */
static int G__oaAnalysisReaderProjectDict_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaPattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTRExReconModule::TTPCAnaPattern[n];
     } else {
       p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaPattern[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTRExReconModule::TTPCAnaPattern;
     } else {
       p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaPattern;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaPattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTRExReconModule::TTPCAnaPattern(*(ND::TTRExReconModule::TTPCAnaPattern*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaPattern(*(ND::TTRExReconModule::TTPCAnaPattern*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTRExReconModule::TTPCAnaPattern::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaPattern::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTRExReconModule::TTPCAnaPattern::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTRExReconModule::TTPCAnaPattern::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTRExReconModule::TTPCAnaPattern*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaPattern::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTRExReconModule::TTPCAnaPattern::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaPattern::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTRExReconModule::TTPCAnaPattern::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTRExReconModule::TTPCAnaPattern G__TNDcLcLTTRExReconModulecLcLTTPCAnaPattern;
static int G__oaAnalysisReaderProjectDict_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTRExReconModule::TTPCAnaPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTRExReconModule::TTPCAnaPattern*) (soff+(sizeof(ND::TTRExReconModule::TTPCAnaPattern)*i)))->~G__TNDcLcLTTRExReconModulecLcLTTPCAnaPattern();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTRExReconModule::TTPCAnaPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTRExReconModule::TTPCAnaPattern*) (soff))->~G__TNDcLcLTTRExReconModulecLcLTTPCAnaPattern();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaPattern* dest = (ND::TTRExReconModule::TTPCAnaPattern*) G__getstructoffset();
   *dest = *(ND::TTRExReconModule::TTPCAnaPattern*) libp->para[0].ref;
   const ND::TTRExReconModule::TTPCAnaPattern& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGeometrySummaryModule */

/* ND::TGeometrySummaryModule::TDetectorBoundingBox */
static int G__oaAnalysisReaderProjectDict_213_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TDetectorBoundingBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TDetectorBoundingBox[n];
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TDetectorBoundingBox[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TDetectorBoundingBox;
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TDetectorBoundingBox;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TDetectorBoundingBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGeometrySummaryModule::TDetectorBoundingBox(*(ND::TGeometrySummaryModule::TDetectorBoundingBox*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGeometrySummaryModule::TDetectorBoundingBox(*(ND::TGeometrySummaryModule::TDetectorBoundingBox*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGeometrySummaryModule::TDetectorBoundingBox::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGeometrySummaryModule::TDetectorBoundingBox*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGeometrySummaryModule::TDetectorBoundingBox G__TNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox;
static int G__oaAnalysisReaderProjectDict_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGeometrySummaryModule::TDetectorBoundingBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGeometrySummaryModule::TDetectorBoundingBox*) (soff+(sizeof(ND::TGeometrySummaryModule::TDetectorBoundingBox)*i)))->~G__TNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGeometrySummaryModule::TDetectorBoundingBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGeometrySummaryModule::TDetectorBoundingBox*) (soff))->~G__TNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TDetectorBoundingBox* dest = (ND::TGeometrySummaryModule::TDetectorBoundingBox*) G__getstructoffset();
   *dest = *(ND::TGeometrySummaryModule::TDetectorBoundingBox*) libp->para[0].ref;
   const ND::TGeometrySummaryModule::TDetectorBoundingBox& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */
static int G__oaAnalysisReaderProjectDict_251_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TTPCMicroMegasVolumes* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[n];
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TTPCMicroMegasVolumes;
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TTPCMicroMegasVolumes* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGeometrySummaryModule::TTPCMicroMegasVolumes(*(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes(*(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_251_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGeometrySummaryModule::TTPCMicroMegasVolumes G__TNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes;
static int G__oaAnalysisReaderProjectDict_251_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) (soff+(sizeof(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes)*i)))->~G__TNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) (soff))->~G__TNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_251_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TTPCMicroMegasVolumes* dest = (ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) G__getstructoffset();
   *dest = *(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) libp->para[0].ref;
   const ND::TGeometrySummaryModule::TTPCMicroMegasVolumes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,const TGeoNode*> */
static int G__oaAnalysisReaderProjectDict_567_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,const TGeoNode*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,const TGeoNode*>[n];
     } else {
       p = new((void*) gvp) pair<int,const TGeoNode*>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,const TGeoNode*>;
     } else {
       p = new((void*) gvp) pair<int,const TGeoNode*>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_567_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,const TGeoNode*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,const TGeoNode*>(*(int*) G__Intref(&libp->para[0]), libp->para[1].ref ? *(const TGeoNode**) libp->para[1].ref : *(const TGeoNode**) (void*) (&G__Mlong(libp->para[1])));
   } else {
     p = new((void*) gvp) pair<int,const TGeoNode*>(*(int*) G__Intref(&libp->para[0]), libp->para[1].ref ? *(const TGeoNode**) libp->para[1].ref : *(const TGeoNode**) (void*) (&G__Mlong(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__oaAnalysisReaderProjectDict_567_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,const TGeoNode*>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,const TGeoNode*>(*(pair<int,const TGeoNode*>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,const TGeoNode*> G__TpairlEintcOconstsPTGeoNodemUgR;
static int G__oaAnalysisReaderProjectDict_567_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,const TGeoNode*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,const TGeoNode*>*) (soff+(sizeof(pair<int,const TGeoNode*>)*i)))->~G__TpairlEintcOconstsPTGeoNodemUgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,const TGeoNode*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,const TGeoNode*>*) (soff))->~G__TpairlEintcOconstsPTGeoNodemUgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,pair<int,const TGeoNode*> > */
static int G__oaAnalysisReaderProjectDict_571_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,pair<int,const TGeoNode*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,pair<int,const TGeoNode*> >[n];
     } else {
       p = new((void*) gvp) pair<int,pair<int,const TGeoNode*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,pair<int,const TGeoNode*> >;
     } else {
       p = new((void*) gvp) pair<int,pair<int,const TGeoNode*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_571_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,pair<int,const TGeoNode*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,pair<int,const TGeoNode*> >(*(int*) G__Intref(&libp->para[0]), *(pair<int,const TGeoNode*>*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<int,pair<int,const TGeoNode*> >(*(int*) G__Intref(&libp->para[0]), *(pair<int,const TGeoNode*>*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__oaAnalysisReaderProjectDict_571_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,pair<int,const TGeoNode*> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,pair<int,const TGeoNode*> >(*(pair<int,pair<int,const TGeoNode*> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,pair<int,const TGeoNode*> > G__TpairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR;
static int G__oaAnalysisReaderProjectDict_571_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,pair<int,const TGeoNode*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,pair<int,const TGeoNode*> >*) (soff+(sizeof(pair<int,pair<int,const TGeoNode*> >)*i)))->~G__TpairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,pair<int,const TGeoNode*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,pair<int,const TGeoNode*> >*) (soff))->~G__TpairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TBeamSummaryDataModule */

/* ND::TBeamSummaryDataModule::TBeamSummaryData */
static int G__oaAnalysisReaderProjectDict_576_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData[n];
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData;
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TBeamSummaryDataModule::TBeamSummaryData(*(ND::TBeamSummaryDataModule::TBeamSummaryData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData(*(ND::TBeamSummaryDataModule::TBeamSummaryData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TBeamSummaryDataModule::TBeamSummaryData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TBeamSummaryDataModule::TBeamSummaryData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_576_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TBeamSummaryDataModule::TBeamSummaryData G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData;
static int G__oaAnalysisReaderProjectDict_576_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TBeamSummaryDataModule::TBeamSummaryData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TBeamSummaryDataModule::TBeamSummaryData*) (soff+(sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData)*i)))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TBeamSummaryDataModule::TBeamSummaryData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TBeamSummaryDataModule::TBeamSummaryData*) (soff))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_576_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData* dest = (ND::TBeamSummaryDataModule::TBeamSummaryData*) G__getstructoffset();
   *dest = *(ND::TBeamSummaryDataModule::TBeamSummaryData*) libp->para[0].ref;
   const ND::TBeamSummaryDataModule::TBeamSummaryData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */
static int G__oaAnalysisReaderProjectDict_577_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[n];
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData;
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData(*(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData(*(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_577_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData;
static int G__oaAnalysisReaderProjectDict_577_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) (soff+(sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData)*i)))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) (soff))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_577_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData* dest = (ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) G__getstructoffset();
   *dest = *(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) libp->para[0].ref;
   const ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule */

/* ND::TFgdOnlyModule::TFgd2DIsoTrack */
static int G__oaAnalysisReaderProjectDict_579_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DIsoTrack[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DIsoTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DIsoTrack;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DIsoTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd2DIsoTrack(*(ND::TFgdOnlyModule::TFgd2DIsoTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DIsoTrack(*(ND::TFgdOnlyModule::TFgd2DIsoTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd2DIsoTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd2DIsoTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_579_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd2DIsoTrack G__TNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack;
static int G__oaAnalysisReaderProjectDict_579_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd2DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd2DIsoTrack*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd2DIsoTrack)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd2DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd2DIsoTrack*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_579_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DIsoTrack* dest = (ND::TFgdOnlyModule::TFgd2DIsoTrack*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd2DIsoTrack*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd2DIsoTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd3DIsoTrack */
static int G__oaAnalysisReaderProjectDict_589_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DIsoTrack[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DIsoTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DIsoTrack;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DIsoTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd3DIsoTrack(*(ND::TFgdOnlyModule::TFgd3DIsoTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DIsoTrack(*(ND::TFgdOnlyModule::TFgd3DIsoTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd3DIsoTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd3DIsoTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_589_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd3DIsoTrack G__TNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack;
static int G__oaAnalysisReaderProjectDict_589_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd3DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd3DIsoTrack*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd3DIsoTrack)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd3DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd3DIsoTrack*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_589_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DIsoTrack* dest = (ND::TFgdOnlyModule::TFgd3DIsoTrack*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd3DIsoTrack*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd3DIsoTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd3DShowerPID */
static int G__oaAnalysisReaderProjectDict_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerPID[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerPID[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerPID;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerPID;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd3DShowerPID(*(ND::TFgdOnlyModule::TFgd3DShowerPID*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerPID(*(ND::TFgdOnlyModule::TFgd3DShowerPID*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd3DShowerPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd3DShowerPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd3DShowerPID G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID;
static int G__oaAnalysisReaderProjectDict_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd3DShowerPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd3DShowerPID*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd3DShowerPID)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd3DShowerPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd3DShowerPID*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerPID* dest = (ND::TFgdOnlyModule::TFgd3DShowerPID*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd3DShowerPID*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd3DShowerPID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd3DShowerHyp */
static int G__oaAnalysisReaderProjectDict_591_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerHyp* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerHyp[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerHyp[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerHyp;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerHyp;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerHyp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd3DShowerHyp(*(ND::TFgdOnlyModule::TFgd3DShowerHyp*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerHyp(*(ND::TFgdOnlyModule::TFgd3DShowerHyp*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd3DShowerHyp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd3DShowerHyp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_591_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd3DShowerHyp G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp;
static int G__oaAnalysisReaderProjectDict_591_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd3DShowerHyp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd3DShowerHyp*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd3DShowerHyp)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd3DShowerHyp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd3DShowerHyp*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_591_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerHyp* dest = (ND::TFgdOnlyModule::TFgd3DShowerHyp*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd3DShowerHyp*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd3DShowerHyp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd2DCluster */
static int G__oaAnalysisReaderProjectDict_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DCluster[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DCluster;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd2DCluster(*(ND::TFgdOnlyModule::TFgd2DCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DCluster(*(ND::TFgdOnlyModule::TFgd2DCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd2DCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd2DCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd2DCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd2DCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_592_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd2DCluster G__TNDcLcLTFgdOnlyModulecLcLTFgd2DCluster;
static int G__oaAnalysisReaderProjectDict_592_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd2DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd2DCluster*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd2DCluster)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd2DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd2DCluster*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_592_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DCluster* dest = (ND::TFgdOnlyModule::TFgd2DCluster*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd2DCluster*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd2DCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSmrdReconModule */

/* ND::TSmrdReconModule::TSmrdReconHit */
static int G__oaAnalysisReaderProjectDict_594_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdReconHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdReconHit[n];
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdReconHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdReconHit;
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdReconHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdReconHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSmrdReconModule::TSmrdReconHit(*(ND::TSmrdReconModule::TSmrdReconHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSmrdReconModule::TSmrdReconHit(*(ND::TSmrdReconModule::TSmrdReconHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSmrdReconModule::TSmrdReconHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdReconHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSmrdReconModule::TSmrdReconHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSmrdReconModule::TSmrdReconHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSmrdReconModule::TSmrdReconHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdReconHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdReconHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdReconHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_594_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdReconHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSmrdReconModule::TSmrdReconHit G__TNDcLcLTSmrdReconModulecLcLTSmrdReconHit;
static int G__oaAnalysisReaderProjectDict_594_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSmrdReconModule::TSmrdReconHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSmrdReconModule::TSmrdReconHit*) (soff+(sizeof(ND::TSmrdReconModule::TSmrdReconHit)*i)))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdReconHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSmrdReconModule::TSmrdReconHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSmrdReconModule::TSmrdReconHit*) (soff))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdReconHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_594_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdReconHit* dest = (ND::TSmrdReconModule::TSmrdReconHit*) G__getstructoffset();
   *dest = *(ND::TSmrdReconModule::TSmrdReconHit*) libp->para[0].ref;
   const ND::TSmrdReconModule::TSmrdReconHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSmrdReconModule::TSmrdIsoTrack */
static int G__oaAnalysisReaderProjectDict_595_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdIsoTrack[n];
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdIsoTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdIsoTrack;
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdIsoTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSmrdReconModule::TSmrdIsoTrack(*(ND::TSmrdReconModule::TSmrdIsoTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSmrdReconModule::TSmrdIsoTrack(*(ND::TSmrdReconModule::TSmrdIsoTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSmrdReconModule::TSmrdIsoTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdIsoTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSmrdReconModule::TSmrdIsoTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSmrdReconModule::TSmrdIsoTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSmrdReconModule::TSmrdIsoTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_595_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSmrdReconModule::TSmrdIsoTrack G__TNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack;
static int G__oaAnalysisReaderProjectDict_595_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSmrdReconModule::TSmrdIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSmrdReconModule::TSmrdIsoTrack*) (soff+(sizeof(ND::TSmrdReconModule::TSmrdIsoTrack)*i)))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSmrdReconModule::TSmrdIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSmrdReconModule::TSmrdIsoTrack*) (soff))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_595_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdIsoTrack* dest = (ND::TSmrdReconModule::TSmrdIsoTrack*) G__getstructoffset();
   *dest = *(ND::TSmrdReconModule::TSmrdIsoTrack*) libp->para[0].ref;
   const ND::TSmrdReconModule::TSmrdIsoTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule */

/* ND::TTrackerReconModule::TTrackerVertex */
static int G__oaAnalysisReaderProjectDict_597_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerVertex[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerVertex;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerVertex(*(ND::TTrackerReconModule::TTrackerVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerVertex(*(ND::TTrackerReconModule::TTrackerVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_597_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerVertex G__TNDcLcLTTrackerReconModulecLcLTTrackerVertex;
static int G__oaAnalysisReaderProjectDict_597_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerVertex*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerVertex)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerVertex*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_597_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerVertex* dest = (ND::TTrackerReconModule::TTrackerVertex*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerVertex*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackerResult */
static int G__oaAnalysisReaderProjectDict_598_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerResult[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerResult;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerResult(*(ND::TTrackerReconModule::TTrackerResult*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerResult(*(ND::TTrackerReconModule::TTrackerResult*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_598_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerResult G__TNDcLcLTTrackerReconModulecLcLTTrackerResult;
static int G__oaAnalysisReaderProjectDict_598_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerResult*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerResult)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerResult*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_598_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerResult* dest = (ND::TTrackerReconModule::TTrackerResult*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerResult*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrueParticle */
static int G__oaAnalysisReaderProjectDict_599_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrueParticle[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrueParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrueParticle;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrueParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrueParticle(*(ND::TTrackerReconModule::TTrueParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrueParticle(*(ND::TTrackerReconModule::TTrueParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrueParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrueParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrueParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrueParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrueParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrueParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrueParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrueParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_599_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrueParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrueParticle G__TNDcLcLTTrackerReconModulecLcLTTrueParticle;
static int G__oaAnalysisReaderProjectDict_599_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrueParticle*) (soff+(sizeof(ND::TTrackerReconModule::TTrueParticle)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrueParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrueParticle*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrueParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_599_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrueParticle* dest = (ND::TTrackerReconModule::TTrueParticle*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrueParticle*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrueParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrueVertex */
static int G__oaAnalysisReaderProjectDict_600_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueVertex[n];
     } else {
       p = new((void*) gvp) ND::TTrueVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueVertex;
     } else {
       p = new((void*) gvp) ND::TTrueVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrueVertex(*(ND::TTrueVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrueVertex(*(ND::TTrueVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrueVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrueVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrueVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrueVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_600_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrueVertex G__TNDcLcLTTrueVertex;
static int G__oaAnalysisReaderProjectDict_600_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrueVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrueVertex*) (soff+(sizeof(ND::TTrueVertex)*i)))->~G__TNDcLcLTTrueVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrueVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrueVertex*) (soff))->~G__TNDcLcLTTrueVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_600_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueVertex* dest = (ND::TTrueVertex*) G__getstructoffset();
   *dest = *(ND::TTrueVertex*) libp->para[0].ref;
   const ND::TTrueVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackerConstituent */
static int G__oaAnalysisReaderProjectDict_601_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerConstituent[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerConstituent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerConstituent;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerConstituent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerConstituent(*(ND::TTrackerReconModule::TTrackerConstituent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerConstituent(*(ND::TTrackerReconModule::TTrackerConstituent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerConstituent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerConstituent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerConstituent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerConstituent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerConstituent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerConstituent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerConstituent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerConstituent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_601_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerConstituent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerConstituent G__TNDcLcLTTrackerReconModulecLcLTTrackerConstituent;
static int G__oaAnalysisReaderProjectDict_601_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerConstituent*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerConstituent)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerConstituent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerConstituent*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerConstituent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_601_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerConstituent* dest = (ND::TTrackerReconModule::TTrackerConstituent*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerConstituent*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerConstituent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTPCTrack */
static int G__oaAnalysisReaderProjectDict_602_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTPCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTPCTrack[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTPCTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTPCTrack;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTPCTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTPCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTPCTrack(*(ND::TTrackerReconModule::TTPCTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTPCTrack(*(ND::TTrackerReconModule::TTPCTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTPCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTPCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTPCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTPCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTPCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTPCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTPCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTPCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_602_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTPCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTPCTrack G__TNDcLcLTTrackerReconModulecLcLTTPCTrack;
static int G__oaAnalysisReaderProjectDict_602_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTPCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTPCTrack*) (soff+(sizeof(ND::TTrackerReconModule::TTPCTrack)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTPCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTPCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTPCTrack*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTPCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_602_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTPCTrack* dest = (ND::TTrackerReconModule::TTPCTrack*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTPCTrack*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTPCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TFGDTrack */
static int G__oaAnalysisReaderProjectDict_603_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TFGDTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TFGDTrack[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TFGDTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TFGDTrack;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TFGDTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TFGDTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TFGDTrack(*(ND::TTrackerReconModule::TFGDTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TFGDTrack(*(ND::TTrackerReconModule::TFGDTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TFGDTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TFGDTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TFGDTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TFGDTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TFGDTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TFGDTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TFGDTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TFGDTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_603_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TFGDTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TFGDTrack G__TNDcLcLTTrackerReconModulecLcLTFGDTrack;
static int G__oaAnalysisReaderProjectDict_603_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TFGDTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TFGDTrack*) (soff+(sizeof(ND::TTrackerReconModule::TFGDTrack)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTFGDTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TFGDTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TFGDTrack*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTFGDTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_603_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TFGDTrack* dest = (ND::TTrackerReconModule::TFGDTrack*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TFGDTrack*) libp->para[0].ref;
   const ND::TTrackerReconModule::TFGDTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackerNode */
static int G__oaAnalysisReaderProjectDict_604_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerNode[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerNode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerNode;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerNode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerNode(*(ND::TTrackerReconModule::TTrackerNode*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerNode(*(ND::TTrackerReconModule::TTrackerNode*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_604_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerNode G__TNDcLcLTTrackerReconModulecLcLTTrackerNode;
static int G__oaAnalysisReaderProjectDict_604_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerNode*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerNode)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerNode*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_604_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerNode* dest = (ND::TTrackerReconModule::TTrackerNode*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerNode*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerNode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackOther */
static int G__oaAnalysisReaderProjectDict_609_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackOther* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackOther[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackOther[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackOther;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackOther;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackOther* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackOther(*(ND::TTrackerReconModule::TTrackOther*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackOther(*(ND::TTrackerReconModule::TTrackOther*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackOther::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackOther::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackOther::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackOther::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackOther*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackOther::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackOther::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackOther::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_609_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackOther::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackOther G__TNDcLcLTTrackerReconModulecLcLTTrackOther;
static int G__oaAnalysisReaderProjectDict_609_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackOther*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackOther*) (soff+(sizeof(ND::TTrackerReconModule::TTrackOther)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackOther();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackOther*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackOther*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackOther();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_609_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackOther* dest = (ND::TTrackerReconModule::TTrackOther*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackOther*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackOther& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TUnusedHit */
static int G__oaAnalysisReaderProjectDict_610_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TUnusedHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TUnusedHit[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TUnusedHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TUnusedHit;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TUnusedHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TUnusedHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TUnusedHit(*(ND::TTrackerReconModule::TUnusedHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TUnusedHit(*(ND::TTrackerReconModule::TUnusedHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TUnusedHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TUnusedHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TUnusedHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TUnusedHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TUnusedHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TUnusedHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TUnusedHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TUnusedHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_610_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TUnusedHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TUnusedHit G__TNDcLcLTTrackerReconModulecLcLTUnusedHit;
static int G__oaAnalysisReaderProjectDict_610_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TUnusedHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TUnusedHit*) (soff+(sizeof(ND::TTrackerReconModule::TUnusedHit)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTUnusedHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TUnusedHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TUnusedHit*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTUnusedHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_610_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TUnusedHit* dest = (ND::TTrackerReconModule::TUnusedHit*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TUnusedHit*) libp->para[0].ref;
   const ND::TTrackerReconModule::TUnusedHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule */

/* ND::TGlobalReconModule::TTpcPID */
static int G__oaAnalysisReaderProjectDict_612_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTpcPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTpcPID[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTpcPID[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTpcPID;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTpcPID;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTpcPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TTpcPID(*(ND::TGlobalReconModule::TTpcPID*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TTpcPID(*(ND::TGlobalReconModule::TTpcPID*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TTpcPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTpcPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TTpcPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TTpcPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TTpcPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTpcPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTpcPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTpcPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_612_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTpcPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TTpcPID G__TNDcLcLTGlobalReconModulecLcLTTpcPID;
static int G__oaAnalysisReaderProjectDict_612_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TTpcPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TTpcPID*) (soff+(sizeof(ND::TGlobalReconModule::TTpcPID)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTTpcPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TTpcPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TTpcPID*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTTpcPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_612_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTpcPID* dest = (ND::TGlobalReconModule::TTpcPID*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TTpcPID*) libp->para[0].ref;
   const ND::TGlobalReconModule::TTpcPID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrueParticle */
static int G__oaAnalysisReaderProjectDict_613_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueParticle[n];
     } else {
       p = new((void*) gvp) ND::TTrueParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueParticle;
     } else {
       p = new((void*) gvp) ND::TTrueParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrueParticle(*(ND::TTrueParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrueParticle(*(ND::TTrueParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrueParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrueParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrueParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrueParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_613_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrueParticle G__TNDcLcLTTrueParticle;
static int G__oaAnalysisReaderProjectDict_613_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrueParticle*) (soff+(sizeof(ND::TTrueParticle)*i)))->~G__TNDcLcLTTrueParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrueParticle*) (soff))->~G__TNDcLcLTTrueParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_613_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueParticle* dest = (ND::TTrueParticle*) G__getstructoffset();
   *dest = *(ND::TTrueParticle*) libp->para[0].ref;
   const ND::TTrueParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalVertex */
static int G__oaAnalysisReaderProjectDict_618_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalVertex[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalVertex;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalVertex(*(ND::TGlobalReconModule::TGlobalVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalVertex(*(ND::TGlobalReconModule::TGlobalVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_618_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalVertex G__TNDcLcLTGlobalReconModulecLcLTGlobalVertex;
static int G__oaAnalysisReaderProjectDict_618_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalVertex*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalVertex)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalVertex*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_618_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalVertex* dest = (ND::TGlobalReconModule::TGlobalVertex*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalVertex*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TVertexConstituent */
static int G__oaAnalysisReaderProjectDict_619_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TVertexConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TVertexConstituent[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TVertexConstituent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TVertexConstituent;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TVertexConstituent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TVertexConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TVertexConstituent(*(ND::TGlobalReconModule::TVertexConstituent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TVertexConstituent(*(ND::TGlobalReconModule::TVertexConstituent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TVertexConstituent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TVertexConstituent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TVertexConstituent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TVertexConstituent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TVertexConstituent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TVertexConstituent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TVertexConstituent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TVertexConstituent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_619_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TVertexConstituent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TVertexConstituent G__TNDcLcLTGlobalReconModulecLcLTVertexConstituent;
static int G__oaAnalysisReaderProjectDict_619_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TVertexConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TVertexConstituent*) (soff+(sizeof(ND::TGlobalReconModule::TVertexConstituent)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTVertexConstituent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TVertexConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TVertexConstituent*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTVertexConstituent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_619_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TVertexConstituent* dest = (ND::TGlobalReconModule::TVertexConstituent*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TVertexConstituent*) libp->para[0].ref;
   const ND::TGlobalReconModule::TVertexConstituent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TFgdTimeBin */
static int G__oaAnalysisReaderProjectDict_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdTimeBin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFgdTimeBin[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFgdTimeBin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFgdTimeBin;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFgdTimeBin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdTimeBin* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TFgdTimeBin(*(ND::TGlobalReconModule::TFgdTimeBin*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TFgdTimeBin(*(ND::TGlobalReconModule::TFgdTimeBin*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TFgdTimeBin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdTimeBin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TFgdTimeBin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TFgdTimeBin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TFgdTimeBin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdTimeBin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFgdTimeBin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdTimeBin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_620_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFgdTimeBin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TFgdTimeBin G__TNDcLcLTGlobalReconModulecLcLTFgdTimeBin;
static int G__oaAnalysisReaderProjectDict_620_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TFgdTimeBin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TFgdTimeBin*) (soff+(sizeof(ND::TGlobalReconModule::TFgdTimeBin)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTFgdTimeBin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TFgdTimeBin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TFgdTimeBin*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTFgdTimeBin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_620_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdTimeBin* dest = (ND::TGlobalReconModule::TFgdTimeBin*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TFgdTimeBin*) libp->para[0].ref;
   const ND::TGlobalReconModule::TFgdTimeBin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TOutermostHits */
static int G__oaAnalysisReaderProjectDict_621_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TOutermostHits* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TOutermostHits[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TOutermostHits[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TOutermostHits;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TOutermostHits;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TOutermostHits* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TOutermostHits(*(ND::TGlobalReconModule::TOutermostHits*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TOutermostHits(*(ND::TGlobalReconModule::TOutermostHits*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TOutermostHits::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TOutermostHits::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TOutermostHits::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TOutermostHits::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TOutermostHits*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TOutermostHits::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TOutermostHits::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TOutermostHits::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_621_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TOutermostHits::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TOutermostHits G__TNDcLcLTGlobalReconModulecLcLTOutermostHits;
static int G__oaAnalysisReaderProjectDict_621_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TOutermostHits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TOutermostHits*) (soff+(sizeof(ND::TGlobalReconModule::TOutermostHits)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTOutermostHits();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TOutermostHits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TOutermostHits*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTOutermostHits();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_621_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TOutermostHits* dest = (ND::TGlobalReconModule::TOutermostHits*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TOutermostHits*) libp->para[0].ref;
   const ND::TGlobalReconModule::TOutermostHits& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalHit */
static int G__oaAnalysisReaderProjectDict_622_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalHit[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalHit;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalHit(*(ND::TGlobalReconModule::TGlobalHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalHit(*(ND::TGlobalReconModule::TGlobalHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_622_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalHit G__TNDcLcLTGlobalReconModulecLcLTGlobalHit;
static int G__oaAnalysisReaderProjectDict_622_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalHit*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalHit)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalHit*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_622_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalHit* dest = (ND::TGlobalReconModule::TGlobalHit*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalHit*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalPID */
static int G__oaAnalysisReaderProjectDict_623_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPID[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPID[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPID;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPID;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalPID(*(ND::TGlobalReconModule::TGlobalPID*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPID(*(ND::TGlobalReconModule::TGlobalPID*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_623_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalPID G__TNDcLcLTGlobalReconModulecLcLTGlobalPID;
static int G__oaAnalysisReaderProjectDict_623_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalPID*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalPID)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalPID*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_623_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPID* dest = (ND::TGlobalReconModule::TGlobalPID*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalPID*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalPID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TTPCObject */
static int G__oaAnalysisReaderProjectDict_624_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TTPCObject(*(ND::TGlobalReconModule::TTPCObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TTPCObject(*(ND::TGlobalReconModule::TTPCObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TTPCObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TTPCObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TTPCObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TTPCObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_624_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TTPCObject G__TNDcLcLTGlobalReconModulecLcLTTPCObject;
static int G__oaAnalysisReaderProjectDict_624_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TTPCObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TTPCObject*) (soff+(sizeof(ND::TGlobalReconModule::TTPCObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTTPCObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TTPCObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TTPCObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTTPCObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_624_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCObject* dest = (ND::TGlobalReconModule::TTPCObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TTPCObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TTPCObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSubBaseObject */
static int G__oaAnalysisReaderProjectDict_625_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseObject[n];
     } else {
       p = new((void*) gvp) ND::TSubBaseObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseObject;
     } else {
       p = new((void*) gvp) ND::TSubBaseObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSubBaseObject(*(ND::TSubBaseObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSubBaseObject(*(ND::TSubBaseObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSubBaseObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSubBaseObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSubBaseObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSubBaseObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_625_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSubBaseObject G__TNDcLcLTSubBaseObject;
static int G__oaAnalysisReaderProjectDict_625_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSubBaseObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSubBaseObject*) (soff+(sizeof(ND::TSubBaseObject)*i)))->~G__TNDcLcLTSubBaseObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSubBaseObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSubBaseObject*) (soff))->~G__TNDcLcLTSubBaseObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_625_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseObject* dest = (ND::TSubBaseObject*) G__getstructoffset();
   *dest = *(ND::TSubBaseObject*) libp->para[0].ref;
   const ND::TSubBaseObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TFGDObject */
static int G__oaAnalysisReaderProjectDict_626_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFGDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFGDObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFGDObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFGDObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFGDObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFGDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TFGDObject(*(ND::TGlobalReconModule::TFGDObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TFGDObject(*(ND::TGlobalReconModule::TFGDObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TFGDObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFGDObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TFGDObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TFGDObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TFGDObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFGDObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFGDObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFGDObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_626_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFGDObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TFGDObject G__TNDcLcLTGlobalReconModulecLcLTFGDObject;
static int G__oaAnalysisReaderProjectDict_626_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TFGDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TFGDObject*) (soff+(sizeof(ND::TGlobalReconModule::TFGDObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTFGDObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TFGDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TFGDObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTFGDObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_626_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFGDObject* dest = (ND::TGlobalReconModule::TFGDObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TFGDObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TFGDObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TECALObject */
static int G__oaAnalysisReaderProjectDict_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TECALObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TECALObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TECALObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TECALObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TECALObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TECALObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TECALObject(*(ND::TGlobalReconModule::TECALObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TECALObject(*(ND::TGlobalReconModule::TECALObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TECALObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TECALObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TECALObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TECALObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TECALObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TECALObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TECALObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TECALObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_631_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TECALObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TECALObject G__TNDcLcLTGlobalReconModulecLcLTECALObject;
static int G__oaAnalysisReaderProjectDict_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TECALObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TECALObject*) (soff+(sizeof(ND::TGlobalReconModule::TECALObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTECALObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TECALObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TECALObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTECALObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TECALObject* dest = (ND::TGlobalReconModule::TECALObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TECALObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TECALObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSubBaseShowerObject */
static int G__oaAnalysisReaderProjectDict_632_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseShowerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseShowerObject[n];
     } else {
       p = new((void*) gvp) ND::TSubBaseShowerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseShowerObject;
     } else {
       p = new((void*) gvp) ND::TSubBaseShowerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseShowerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSubBaseShowerObject(*(ND::TSubBaseShowerObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSubBaseShowerObject(*(ND::TSubBaseShowerObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSubBaseShowerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseShowerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSubBaseShowerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSubBaseShowerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSubBaseShowerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseShowerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseShowerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseShowerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_632_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseShowerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSubBaseShowerObject G__TNDcLcLTSubBaseShowerObject;
static int G__oaAnalysisReaderProjectDict_632_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSubBaseShowerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSubBaseShowerObject*) (soff+(sizeof(ND::TSubBaseShowerObject)*i)))->~G__TNDcLcLTSubBaseShowerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSubBaseShowerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSubBaseShowerObject*) (soff))->~G__TNDcLcLTSubBaseShowerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_632_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseShowerObject* dest = (ND::TSubBaseShowerObject*) G__getstructoffset();
   *dest = *(ND::TSubBaseShowerObject*) libp->para[0].ref;
   const ND::TSubBaseShowerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TP0DObject */
static int G__oaAnalysisReaderProjectDict_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TP0DObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TP0DObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TP0DObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TP0DObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TP0DObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TP0DObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TP0DObject(*(ND::TGlobalReconModule::TP0DObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TP0DObject(*(ND::TGlobalReconModule::TP0DObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TP0DObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TP0DObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TP0DObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TP0DObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TP0DObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TP0DObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TP0DObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TP0DObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_633_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TP0DObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TP0DObject G__TNDcLcLTGlobalReconModulecLcLTP0DObject;
static int G__oaAnalysisReaderProjectDict_633_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TP0DObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TP0DObject*) (soff+(sizeof(ND::TGlobalReconModule::TP0DObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTP0DObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TP0DObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TP0DObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTP0DObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_633_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TP0DObject* dest = (ND::TGlobalReconModule::TP0DObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TP0DObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TP0DObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TSMRDObject */
static int G__oaAnalysisReaderProjectDict_634_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TSMRDObject(*(ND::TGlobalReconModule::TSMRDObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TSMRDObject(*(ND::TGlobalReconModule::TSMRDObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TSMRDObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TSMRDObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TSMRDObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TSMRDObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_634_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TSMRDObject G__TNDcLcLTGlobalReconModulecLcLTSMRDObject;
static int G__oaAnalysisReaderProjectDict_634_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TSMRDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TSMRDObject*) (soff+(sizeof(ND::TGlobalReconModule::TSMRDObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TSMRDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TSMRDObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_634_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDObject* dest = (ND::TGlobalReconModule::TSMRDObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TSMRDObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TSMRDObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TTrackerObject */
static int G__oaAnalysisReaderProjectDict_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTrackerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTrackerObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTrackerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTrackerObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTrackerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTrackerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TTrackerObject(*(ND::TGlobalReconModule::TTrackerObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TTrackerObject(*(ND::TGlobalReconModule::TTrackerObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TTrackerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTrackerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TTrackerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TTrackerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TTrackerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTrackerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTrackerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTrackerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_635_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTrackerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TTrackerObject G__TNDcLcLTGlobalReconModulecLcLTTrackerObject;
static int G__oaAnalysisReaderProjectDict_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TTrackerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TTrackerObject*) (soff+(sizeof(ND::TGlobalReconModule::TTrackerObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTTrackerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TTrackerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TTrackerObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTTrackerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTrackerObject* dest = (ND::TGlobalReconModule::TTrackerObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TTrackerObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TTrackerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalPIDAlternate */
static int G__oaAnalysisReaderProjectDict_636_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPIDAlternate* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPIDAlternate[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPIDAlternate[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPIDAlternate;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPIDAlternate;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPIDAlternate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalPIDAlternate(*(ND::TGlobalReconModule::TGlobalPIDAlternate*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPIDAlternate(*(ND::TGlobalReconModule::TGlobalPIDAlternate*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalPIDAlternate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalPIDAlternate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_636_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalPIDAlternate G__TNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate;
static int G__oaAnalysisReaderProjectDict_636_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalPIDAlternate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalPIDAlternate*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalPIDAlternate)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalPIDAlternate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalPIDAlternate*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_636_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPIDAlternate* dest = (ND::TGlobalReconModule::TGlobalPIDAlternate*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalPIDAlternate*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalPIDAlternate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,TVector2> */
static int G__oaAnalysisReaderProjectDict_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,TVector2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,TVector2>[n];
     } else {
       p = new((void*) gvp) pair<int,TVector2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,TVector2>;
     } else {
       p = new((void*) gvp) pair<int,TVector2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,TVector2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,TVector2>(*(int*) G__Intref(&libp->para[0]), *(TVector2*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<int,TVector2>(*(int*) G__Intref(&libp->para[0]), *(TVector2*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__oaAnalysisReaderProjectDict_637_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,TVector2>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,TVector2>(*(pair<int,TVector2>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,TVector2> G__TpairlEintcOTVector2gR;
static int G__oaAnalysisReaderProjectDict_637_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,TVector2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,TVector2>*) (soff+(sizeof(pair<int,TVector2>)*i)))->~G__TpairlEintcOTVector2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,TVector2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,TVector2>*) (soff))->~G__TpairlEintcOTVector2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TTPCOtherObject */
static int G__oaAnalysisReaderProjectDict_642_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCOtherObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCOtherObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCOtherObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCOtherObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCOtherObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCOtherObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TTPCOtherObject(*(ND::TGlobalReconModule::TTPCOtherObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TTPCOtherObject(*(ND::TGlobalReconModule::TTPCOtherObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TTPCOtherObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCOtherObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TTPCOtherObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TTPCOtherObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TTPCOtherObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCOtherObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCOtherObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCOtherObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_642_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCOtherObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TTPCOtherObject G__TNDcLcLTGlobalReconModulecLcLTTPCOtherObject;
static int G__oaAnalysisReaderProjectDict_642_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TTPCOtherObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TTPCOtherObject*) (soff+(sizeof(ND::TGlobalReconModule::TTPCOtherObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTTPCOtherObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TTPCOtherObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TTPCOtherObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTTPCOtherObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_642_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCOtherObject* dest = (ND::TGlobalReconModule::TTPCOtherObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TTPCOtherObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TTPCOtherObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TSMRDHit */
static int G__oaAnalysisReaderProjectDict_643_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDHit[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDHit;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TSMRDHit(*(ND::TGlobalReconModule::TSMRDHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TSMRDHit(*(ND::TGlobalReconModule::TSMRDHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TSMRDHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TSMRDHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TSMRDHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TSMRDHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_643_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TSMRDHit G__TNDcLcLTGlobalReconModulecLcLTSMRDHit;
static int G__oaAnalysisReaderProjectDict_643_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TSMRDHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TSMRDHit*) (soff+(sizeof(ND::TGlobalReconModule::TSMRDHit)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TSMRDHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TSMRDHit*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_643_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDHit* dest = (ND::TGlobalReconModule::TSMRDHit*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TSMRDHit*) libp->para[0].ref;
   const ND::TGlobalReconModule::TSMRDHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule */

/* ND::TTrackerECALReconModule::TECALReconObject */
static int G__oaAnalysisReaderProjectDict_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconObject[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconObject;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconObject(*(ND::TTrackerECALReconModule::TECALReconObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconObject(*(ND::TTrackerECALReconModule::TECALReconObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_645_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconObject G__TNDcLcLTTrackerECALReconModulecLcLTECALReconObject;
static int G__oaAnalysisReaderProjectDict_645_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconObject*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconObject)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconObject*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_645_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconObject* dest = (ND::TTrackerECALReconModule::TECALReconObject*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconObject*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconTrack */
static int G__oaAnalysisReaderProjectDict_646_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconTrack[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconTrack;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconTrack(*(ND::TTrackerECALReconModule::TECALReconTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconTrack(*(ND::TTrackerECALReconModule::TECALReconTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_646_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconTrack G__TNDcLcLTTrackerECALReconModulecLcLTECALReconTrack;
static int G__oaAnalysisReaderProjectDict_646_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconTrack*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconTrack)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconTrack*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_646_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconTrack* dest = (ND::TTrackerECALReconModule::TECALReconTrack*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconTrack*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconShower */
static int G__oaAnalysisReaderProjectDict_647_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconShower[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconShower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconShower;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconShower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconShower(*(ND::TTrackerECALReconModule::TECALReconShower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconShower(*(ND::TTrackerECALReconModule::TECALReconShower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_647_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconShower G__TNDcLcLTTrackerECALReconModulecLcLTECALReconShower;
static int G__oaAnalysisReaderProjectDict_647_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconShower*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconShower)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconShower*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_647_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconShower* dest = (ND::TTrackerECALReconModule::TECALReconShower*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconShower*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconShower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconCluster */
static int G__oaAnalysisReaderProjectDict_648_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconCluster[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconCluster;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconCluster(*(ND::TTrackerECALReconModule::TECALReconCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconCluster(*(ND::TTrackerECALReconModule::TECALReconCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_648_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconCluster G__TNDcLcLTTrackerECALReconModulecLcLTECALReconCluster;
static int G__oaAnalysisReaderProjectDict_648_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconCluster*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconCluster)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconCluster*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_648_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconCluster* dest = (ND::TTrackerECALReconModule::TECALReconCluster*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconCluster*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */
static int G__oaAnalysisReaderProjectDict_649_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconUnmatchedObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconUnmatchedObject[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconUnmatchedObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconUnmatchedObject;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconUnmatchedObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconUnmatchedObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconUnmatchedObject(*(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconUnmatchedObject(*(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_649_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconUnmatchedObject G__TNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject;
static int G__oaAnalysisReaderProjectDict_649_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconUnmatchedObject)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_649_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconUnmatchedObject* dest = (ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconUnmatchedObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DECALReconModule */

/* ND::TP0DECALReconModule::TP0DECALReconTrack */
static int G__oaAnalysisReaderProjectDict_651_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconTrack[n];
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconTrack;
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DECALReconModule::TP0DECALReconTrack(*(ND::TP0DECALReconModule::TP0DECALReconTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconTrack(*(ND::TP0DECALReconModule::TP0DECALReconTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DECALReconModule::TP0DECALReconTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DECALReconModule::TP0DECALReconTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_651_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DECALReconModule::TP0DECALReconTrack G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack;
static int G__oaAnalysisReaderProjectDict_651_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DECALReconModule::TP0DECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DECALReconModule::TP0DECALReconTrack*) (soff+(sizeof(ND::TP0DECALReconModule::TP0DECALReconTrack)*i)))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DECALReconModule::TP0DECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DECALReconModule::TP0DECALReconTrack*) (soff))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_651_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconTrack* dest = (ND::TP0DECALReconModule::TP0DECALReconTrack*) G__getstructoffset();
   *dest = *(ND::TP0DECALReconModule::TP0DECALReconTrack*) libp->para[0].ref;
   const ND::TP0DECALReconModule::TP0DECALReconTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DECALReconModule::TP0DECALReconShower */
static int G__oaAnalysisReaderProjectDict_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconShower[n];
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconShower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconShower;
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconShower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DECALReconModule::TP0DECALReconShower(*(ND::TP0DECALReconModule::TP0DECALReconShower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconShower(*(ND::TP0DECALReconModule::TP0DECALReconShower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DECALReconModule::TP0DECALReconShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DECALReconModule::TP0DECALReconShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DECALReconModule::TP0DECALReconShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DECALReconModule::TP0DECALReconShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_652_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DECALReconModule::TP0DECALReconShower G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower;
static int G__oaAnalysisReaderProjectDict_652_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DECALReconModule::TP0DECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DECALReconModule::TP0DECALReconShower*) (soff+(sizeof(ND::TP0DECALReconModule::TP0DECALReconShower)*i)))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DECALReconModule::TP0DECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DECALReconModule::TP0DECALReconShower*) (soff))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_652_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconShower* dest = (ND::TP0DECALReconModule::TP0DECALReconShower*) G__getstructoffset();
   *dest = *(ND::TP0DECALReconModule::TP0DECALReconShower*) libp->para[0].ref;
   const ND::TP0DECALReconModule::TP0DECALReconShower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DECALReconModule::TP0DECALLayerCharge */
static int G__oaAnalysisReaderProjectDict_653_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALLayerCharge* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALLayerCharge[n];
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALLayerCharge[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALLayerCharge;
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALLayerCharge;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALLayerCharge* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DECALReconModule::TP0DECALLayerCharge(*(ND::TP0DECALReconModule::TP0DECALLayerCharge*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALLayerCharge(*(ND::TP0DECALReconModule::TP0DECALLayerCharge*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DECALReconModule::TP0DECALLayerCharge::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALLayerCharge::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DECALReconModule::TP0DECALLayerCharge::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DECALReconModule::TP0DECALLayerCharge::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DECALReconModule::TP0DECALLayerCharge*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALLayerCharge::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALLayerCharge::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALLayerCharge::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_653_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALLayerCharge::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DECALReconModule::TP0DECALLayerCharge G__TNDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge;
static int G__oaAnalysisReaderProjectDict_653_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DECALReconModule::TP0DECALLayerCharge*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DECALReconModule::TP0DECALLayerCharge*) (soff+(sizeof(ND::TP0DECALReconModule::TP0DECALLayerCharge)*i)))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DECALReconModule::TP0DECALLayerCharge*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DECALReconModule::TP0DECALLayerCharge*) (soff))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_653_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALLayerCharge* dest = (ND::TP0DECALReconModule::TP0DECALLayerCharge*) G__getstructoffset();
   *dest = *(ND::TP0DECALReconModule::TP0DECALLayerCharge*) libp->para[0].ref;
   const ND::TP0DECALReconModule::TP0DECALLayerCharge& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule */

/* ND::TP0DReconModule::TP0DAlgoRes */
static int G__oaAnalysisReaderProjectDict_655_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DAlgoRes* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DAlgoRes[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DAlgoRes[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DAlgoRes;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DAlgoRes;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DAlgoRes* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DAlgoRes(*(ND::TP0DReconModule::TP0DAlgoRes*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DAlgoRes(*(ND::TP0DReconModule::TP0DAlgoRes*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DAlgoRes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DAlgoRes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DAlgoRes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DAlgoRes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DAlgoRes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DAlgoRes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DAlgoRes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DAlgoRes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_655_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DAlgoRes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DAlgoRes G__TNDcLcLTP0DReconModulecLcLTP0DAlgoRes;
static int G__oaAnalysisReaderProjectDict_655_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DAlgoRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DAlgoRes*) (soff+(sizeof(ND::TP0DReconModule::TP0DAlgoRes)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DAlgoRes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DAlgoRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DAlgoRes*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DAlgoRes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_655_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DAlgoRes* dest = (ND::TP0DReconModule::TP0DAlgoRes*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DAlgoRes*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DAlgoRes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DVertex */
static int G__oaAnalysisReaderProjectDict_656_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DVertex[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DVertex;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DVertex(*(ND::TP0DReconModule::TP0DVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DVertex(*(ND::TP0DReconModule::TP0DVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_656_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DVertex G__TNDcLcLTP0DReconModulecLcLTP0DVertex;
static int G__oaAnalysisReaderProjectDict_656_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DVertex*) (soff+(sizeof(ND::TP0DReconModule::TP0DVertex)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DVertex*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_656_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DVertex* dest = (ND::TP0DReconModule::TP0DVertex*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DVertex*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DParticle */
static int G__oaAnalysisReaderProjectDict_657_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DParticle[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DParticle;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DParticle(*(ND::TP0DReconModule::TP0DParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DParticle(*(ND::TP0DReconModule::TP0DParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_657_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DParticle G__TNDcLcLTP0DReconModulecLcLTP0DParticle;
static int G__oaAnalysisReaderProjectDict_657_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DParticle*) (soff+(sizeof(ND::TP0DReconModule::TP0DParticle)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DParticle*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_657_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DParticle* dest = (ND::TP0DReconModule::TP0DParticle*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DParticle*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DShower */
static int G__oaAnalysisReaderProjectDict_670_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DShower[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DShower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DShower;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DShower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DShower(*(ND::TP0DReconModule::TP0DShower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DShower(*(ND::TP0DReconModule::TP0DShower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_670_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DShower G__TNDcLcLTP0DReconModulecLcLTP0DShower;
static int G__oaAnalysisReaderProjectDict_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DShower*) (soff+(sizeof(ND::TP0DReconModule::TP0DShower)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DShower*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DShower* dest = (ND::TP0DReconModule::TP0DShower*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DShower*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DShower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DTrack */
static int G__oaAnalysisReaderProjectDict_671_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DTrack[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DTrack;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DTrack(*(ND::TP0DReconModule::TP0DTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DTrack(*(ND::TP0DReconModule::TP0DTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_671_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DTrack G__TNDcLcLTP0DReconModulecLcLTP0DTrack;
static int G__oaAnalysisReaderProjectDict_671_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DTrack*) (soff+(sizeof(ND::TP0DReconModule::TP0DTrack)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DTrack*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_671_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DTrack* dest = (ND::TP0DReconModule::TP0DTrack*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DTrack*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DNode */
static int G__oaAnalysisReaderProjectDict_672_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DNode[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DNode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DNode;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DNode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DNode(*(ND::TP0DReconModule::TP0DNode*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DNode(*(ND::TP0DReconModule::TP0DNode*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_672_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DNode G__TNDcLcLTP0DReconModulecLcLTP0DNode;
static int G__oaAnalysisReaderProjectDict_672_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DNode*) (soff+(sizeof(ND::TP0DReconModule::TP0DNode)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DNode*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_672_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DNode* dest = (ND::TP0DReconModule::TP0DNode*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DNode*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DNode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DHit */
static int G__oaAnalysisReaderProjectDict_673_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DHit[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DHit;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DHit(*(ND::TP0DReconModule::TP0DHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DHit(*(ND::TP0DReconModule::TP0DHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_673_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DHit G__TNDcLcLTP0DReconModulecLcLTP0DHit;
static int G__oaAnalysisReaderProjectDict_673_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DHit*) (soff+(sizeof(ND::TP0DReconModule::TP0DHit)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DHit*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_673_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DHit* dest = (ND::TP0DReconModule::TP0DHit*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DHit*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DCluster */
static int G__oaAnalysisReaderProjectDict_674_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DCluster[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DCluster;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DCluster(*(ND::TP0DReconModule::TP0DCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DCluster(*(ND::TP0DReconModule::TP0DCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_674_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DCluster G__TNDcLcLTP0DReconModulecLcLTP0DCluster;
static int G__oaAnalysisReaderProjectDict_674_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DCluster*) (soff+(sizeof(ND::TP0DReconModule::TP0DCluster)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DCluster*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_674_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DCluster* dest = (ND::TP0DReconModule::TP0DCluster*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DCluster*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTruthVerticesModule */

/* ND::TTruthVerticesModule::TTruthVertex */
static int G__oaAnalysisReaderProjectDict_676_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule::TTruthVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthVerticesModule::TTruthVertex[n];
     } else {
       p = new((void*) gvp) ND::TTruthVerticesModule::TTruthVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthVerticesModule::TTruthVertex;
     } else {
       p = new((void*) gvp) ND::TTruthVerticesModule::TTruthVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule::TTruthVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTruthVerticesModule::TTruthVertex(*(ND::TTruthVerticesModule::TTruthVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTruthVerticesModule::TTruthVertex(*(ND::TTruthVerticesModule::TTruthVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTruthVerticesModule::TTruthVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::TTruthVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTruthVerticesModule::TTruthVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTruthVerticesModule::TTruthVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTruthVerticesModule::TTruthVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::TTruthVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthVerticesModule::TTruthVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::TTruthVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_676_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthVerticesModule::TTruthVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTruthVerticesModule::TTruthVertex G__TNDcLcLTTruthVerticesModulecLcLTTruthVertex;
static int G__oaAnalysisReaderProjectDict_676_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTruthVerticesModule::TTruthVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTruthVerticesModule::TTruthVertex*) (soff+(sizeof(ND::TTruthVerticesModule::TTruthVertex)*i)))->~G__TNDcLcLTTruthVerticesModulecLcLTTruthVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTruthVerticesModule::TTruthVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTruthVerticesModule::TTruthVertex*) (soff))->~G__TNDcLcLTTruthVerticesModulecLcLTTruthVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_676_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule::TTruthVertex* dest = (ND::TTruthVerticesModule::TTruthVertex*) G__getstructoffset();
   *dest = *(ND::TTruthVerticesModule::TTruthVertex*) libp->para[0].ref;
   const ND::TTruthVerticesModule::TTruthVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTruthTrajectoriesModule */

/* ND::TTruthTrajectoriesModule::TTruthTrajectory */
static int G__oaAnalysisReaderProjectDict_678_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectory* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule::TTruthTrajectory[n];
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectory[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule::TTruthTrajectory;
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectory;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectory* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTruthTrajectoriesModule::TTruthTrajectory(*(ND::TTruthTrajectoriesModule::TTruthTrajectory*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectory(*(ND::TTruthTrajectoriesModule::TTruthTrajectory*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTruthTrajectoriesModule::TTruthTrajectory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTruthTrajectoriesModule::TTruthTrajectory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_678_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTruthTrajectoriesModule::TTruthTrajectory G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory;
static int G__oaAnalysisReaderProjectDict_678_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTruthTrajectoriesModule::TTruthTrajectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTruthTrajectoriesModule::TTruthTrajectory*) (soff+(sizeof(ND::TTruthTrajectoriesModule::TTruthTrajectory)*i)))->~G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTruthTrajectoriesModule::TTruthTrajectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTruthTrajectoriesModule::TTruthTrajectory*) (soff))->~G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_678_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectory* dest = (ND::TTruthTrajectoriesModule::TTruthTrajectory*) G__getstructoffset();
   *dest = *(ND::TTruthTrajectoriesModule::TTruthTrajectory*) libp->para[0].ref;
   const ND::TTruthTrajectoriesModule::TTruthTrajectory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint */
static int G__oaAnalysisReaderProjectDict_679_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint[n];
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint;
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint(*(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint(*(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_679_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint;
static int G__oaAnalysisReaderProjectDict_679_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) (soff+(sizeof(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint)*i)))->~G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) (soff))->~G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_679_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint* dest = (ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) G__getstructoffset();
   *dest = *(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*) libp->para[0].ref;
   const ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TIOFeatures */
static int G__oaAnalysisReaderProjectDict_688_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TIOFeatures* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TIOFeatures[n];
     } else {
       p = new((void*) gvp) ROOT::TIOFeatures[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TIOFeatures;
     } else {
       p = new((void*) gvp) ROOT::TIOFeatures;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_688_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TIOFeatures* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TIOFeatures(*(ROOT::TIOFeatures*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::TIOFeatures(*(ROOT::TIOFeatures*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TIOFeatures G__TROOTcLcLTIOFeatures;
static int G__oaAnalysisReaderProjectDict_688_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TIOFeatures*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TIOFeatures*) (soff+(sizeof(ROOT::TIOFeatures)*i)))->~G__TROOTcLcLTIOFeatures();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TIOFeatures*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TIOFeatures*) (soff))->~G__TROOTcLcLTIOFeatures();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_688_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TIOFeatures* dest = (ROOT::TIOFeatures*) G__getstructoffset();
   *dest = *(ROOT::TIOFeatures*) libp->para[0].ref;
   const ROOT::TIOFeatures& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTRExReconModule::TTPCAnaJunction */
static int G__oaAnalysisReaderProjectDict_689_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaJunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTRExReconModule::TTPCAnaJunction[n];
     } else {
       p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaJunction[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTRExReconModule::TTPCAnaJunction;
     } else {
       p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaJunction;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaJunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTRExReconModule::TTPCAnaJunction(*(ND::TTRExReconModule::TTPCAnaJunction*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaJunction(*(ND::TTRExReconModule::TTPCAnaJunction*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTRExReconModule::TTPCAnaJunction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaJunction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTRExReconModule::TTPCAnaJunction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTRExReconModule::TTPCAnaJunction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTRExReconModule::TTPCAnaJunction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaJunction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTRExReconModule::TTPCAnaJunction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaJunction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_689_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTRExReconModule::TTPCAnaJunction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTRExReconModule::TTPCAnaJunction G__TNDcLcLTTRExReconModulecLcLTTPCAnaJunction;
static int G__oaAnalysisReaderProjectDict_689_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTRExReconModule::TTPCAnaJunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTRExReconModule::TTPCAnaJunction*) (soff+(sizeof(ND::TTRExReconModule::TTPCAnaJunction)*i)))->~G__TNDcLcLTTRExReconModulecLcLTTPCAnaJunction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTRExReconModule::TTPCAnaJunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTRExReconModule::TTPCAnaJunction*) (soff))->~G__TNDcLcLTTRExReconModulecLcLTTPCAnaJunction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_689_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaJunction* dest = (ND::TTRExReconModule::TTPCAnaJunction*) G__getstructoffset();
   *dest = *(ND::TTRExReconModule::TTPCAnaJunction*) libp->para[0].ref;
   const ND::TTRExReconModule::TTPCAnaJunction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTRExReconModule::TTPCAnaPath */
static int G__oaAnalysisReaderProjectDict_690_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaPath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTRExReconModule::TTPCAnaPath[n];
     } else {
       p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaPath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTRExReconModule::TTPCAnaPath;
     } else {
       p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaPath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaPath* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTRExReconModule::TTPCAnaPath(*(ND::TTRExReconModule::TTPCAnaPath*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTRExReconModule::TTPCAnaPath(*(ND::TTRExReconModule::TTPCAnaPath*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTRExReconModule::TTPCAnaPath::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaPath::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTRExReconModule::TTPCAnaPath::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTRExReconModule::TTPCAnaPath::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTRExReconModule::TTPCAnaPath*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaPath::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTRExReconModule::TTPCAnaPath::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTRExReconModule::TTPCAnaPath::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__oaAnalysisReaderProjectDict_690_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTRExReconModule::TTPCAnaPath::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTRExReconModule::TTPCAnaPath G__TNDcLcLTTRExReconModulecLcLTTPCAnaPath;
static int G__oaAnalysisReaderProjectDict_690_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTRExReconModule::TTPCAnaPath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTRExReconModule::TTPCAnaPath*) (soff+(sizeof(ND::TTRExReconModule::TTPCAnaPath)*i)))->~G__TNDcLcLTTRExReconModulecLcLTTPCAnaPath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTRExReconModule::TTPCAnaPath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTRExReconModule::TTPCAnaPath*) (soff))->~G__TNDcLcLTTRExReconModulecLcLTTPCAnaPath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__oaAnalysisReaderProjectDict_690_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTRExReconModule::TTPCAnaPath* dest = (ND::TTRExReconModule::TTPCAnaPath*) G__getstructoffset();
   *dest = *(ND::TTRExReconModule::TTPCAnaPath*) libp->para[0].ref;
   const ND::TTRExReconModule::TTPCAnaPath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ND */

/* ND::TND280Event */

/* ND::TDataVector */

/* ND::TData */

/* ND::TDatum */

/* ND::TND280Context */

/* ND::TSHAHashValue */

/* ND::TAlignmentId */

/* ND::TND280Event::Header */

/* ND::NRooTrackerVtx */

/* ND::JNuBeamFlux */

/* ND::RooTrackerVtxBase */

/* ND::GRooTrackerVtx */

/* ND::TTRExReconModule */

/* ND::TTRExReconModule::TTPCAnaPattern */

/* ND::TGeometrySummaryModule */

/* ND::TGeometrySummaryModule::TDetectorBoundingBox */

/* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */

/* pair<int,const TGeoNode*> */

/* pair<int,pair<int,const TGeoNode*> > */

/* ND::TBeamSummaryDataModule */

/* ND::TBeamSummaryDataModule::TBeamSummaryData */

/* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */

/* ND::TFgdOnlyModule */

/* ND::TFgdOnlyModule::TFgd2DIsoTrack */

/* ND::TFgdOnlyModule::TFgd3DIsoTrack */

/* ND::TFgdOnlyModule::TFgd3DShowerPID */

/* ND::TFgdOnlyModule::TFgd3DShowerHyp */

/* ND::TFgdOnlyModule::TFgd2DCluster */

/* ND::TSmrdReconModule */

/* ND::TSmrdReconModule::TSmrdReconHit */

/* ND::TSmrdReconModule::TSmrdIsoTrack */

/* ND::TTrackerReconModule */

/* ND::TTrackerReconModule::TTrackerVertex */

/* ND::TTrackerReconModule::TTrackerResult */

/* ND::TTrackerReconModule::TTrueParticle */

/* ND::TTrueVertex */

/* ND::TTrackerReconModule::TTrackerConstituent */

/* ND::TTrackerReconModule::TTPCTrack */

/* ND::TTrackerReconModule::TFGDTrack */

/* ND::TTrackerReconModule::TTrackerNode */

/* ND::TTrackerReconModule::TTrackOther */

/* ND::TTrackerReconModule::TUnusedHit */

/* ND::TGlobalReconModule */

/* ND::TGlobalReconModule::TTpcPID */

/* ND::TTrueParticle */

/* ND::TGlobalReconModule::TGlobalVertex */

/* ND::TGlobalReconModule::TVertexConstituent */

/* ND::TGlobalReconModule::TFgdTimeBin */

/* ND::TGlobalReconModule::TOutermostHits */

/* ND::TGlobalReconModule::TGlobalHit */

/* ND::TGlobalReconModule::TGlobalPID */

/* ND::TGlobalReconModule::TTPCObject */

/* ND::TSubBaseObject */

/* ND::TGlobalReconModule::TFGDObject */

/* ND::TGlobalReconModule::TECALObject */

/* ND::TSubBaseShowerObject */

/* ND::TGlobalReconModule::TP0DObject */

/* ND::TGlobalReconModule::TSMRDObject */

/* ND::TGlobalReconModule::TTrackerObject */

/* ND::TGlobalReconModule::TGlobalPIDAlternate */

/* pair<int,TVector2> */

/* ND::TGlobalReconModule::TTPCOtherObject */

/* ND::TGlobalReconModule::TSMRDHit */

/* ND::TTrackerECALReconModule */

/* ND::TTrackerECALReconModule::TECALReconObject */

/* ND::TTrackerECALReconModule::TECALReconTrack */

/* ND::TTrackerECALReconModule::TECALReconShower */

/* ND::TTrackerECALReconModule::TECALReconCluster */

/* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */

/* ND::TP0DECALReconModule */

/* ND::TP0DECALReconModule::TP0DECALReconTrack */

/* ND::TP0DECALReconModule::TP0DECALReconShower */

/* ND::TP0DECALReconModule::TP0DECALLayerCharge */

/* ND::TP0DReconModule */

/* ND::TP0DReconModule::TP0DAlgoRes */

/* ND::TP0DReconModule::TP0DVertex */

/* ND::TP0DReconModule::TP0DParticle */

/* ND::TP0DReconModule::TP0DShower */

/* ND::TP0DReconModule::TP0DTrack */

/* ND::TP0DReconModule::TP0DNode */

/* ND::TP0DReconModule::TP0DHit */

/* ND::TP0DReconModule::TP0DCluster */

/* ND::TTruthVerticesModule */

/* ND::TTruthVerticesModule::TTruthVertex */

/* ND::TTruthTrajectoriesModule */

/* ND::TTruthTrajectoriesModule::TTruthTrajectory */

/* ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint */

/* ROOT::TIOFeatures */

/* ND::TTRExReconModule::TTPCAnaJunction */

/* ND::TTRExReconModule::TTPCAnaPath */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncoaAnalysisReaderProjectDict {
 public:
  G__Sizep2memfuncoaAnalysisReaderProjectDict(): p(&G__Sizep2memfuncoaAnalysisReaderProjectDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncoaAnalysisReaderProjectDict::*p)();
};

size_t G__get_sizep2memfuncoaAnalysisReaderProjectDict()
{
  G__Sizep2memfuncoaAnalysisReaderProjectDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceoaAnalysisReaderProjectDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event))) {
     ND::TND280Event *G__Lderived;
     G__Lderived=(ND::TND280Event*)0x1000;
     {
       ND::TDataVector *G__Lpbase=(ND::TDataVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TData *G__Lpbase=(ND::TData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       ND::TDatum *G__Lpbase=(ND::TDatum*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector))) {
     ND::TDataVector *G__Lderived;
     G__Lderived=(ND::TDataVector*)0x1000;
     {
       ND::TData *G__Lpbase=(ND::TData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TDatum *G__Lpbase=(ND::TDatum*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData))) {
     ND::TData *G__Lderived;
     G__Lderived=(ND::TData*)0x1000;
     {
       ND::TDatum *G__Lpbase=(ND::TDatum*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum))) {
     ND::TDatum *G__Lderived;
     G__Lderived=(ND::TDatum*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId))) {
     ND::TAlignmentId *G__Lderived;
     G__Lderived=(ND::TAlignmentId*)0x1000;
     {
       ND::TSHAHashValue *G__Lpbase=(ND::TSHAHashValue*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx))) {
     ND::NRooTrackerVtx *G__Lderived;
     G__Lderived=(ND::NRooTrackerVtx*)0x1000;
     {
       ND::JNuBeamFlux *G__Lpbase=(ND::JNuBeamFlux*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::RooTrackerVtxBase *G__Lpbase=(ND::RooTrackerVtxBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux))) {
     ND::JNuBeamFlux *G__Lderived;
     G__Lderived=(ND::JNuBeamFlux*)0x1000;
     {
       ND::RooTrackerVtxBase *G__Lpbase=(ND::RooTrackerVtxBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase))) {
     ND::RooTrackerVtxBase *G__Lderived;
     G__Lderived=(ND::RooTrackerVtxBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx))) {
     ND::GRooTrackerVtx *G__Lderived;
     G__Lderived=(ND::GRooTrackerVtx*)0x1000;
     {
       ND::JNuBeamFlux *G__Lpbase=(ND::JNuBeamFlux*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::RooTrackerVtxBase *G__Lpbase=(ND::RooTrackerVtxBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern))) {
     ND::TTRExReconModule::TTPCAnaPattern *G__Lderived;
     G__Lderived=(ND::TTRExReconModule::TTPCAnaPattern*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox))) {
     ND::TGeometrySummaryModule::TDetectorBoundingBox *G__Lderived;
     G__Lderived=(ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes))) {
     ND::TGeometrySummaryModule::TTPCMicroMegasVolumes *G__Lderived;
     G__Lderived=(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData))) {
     ND::TBeamSummaryDataModule::TBeamSummaryData *G__Lderived;
     G__Lderived=(ND::TBeamSummaryDataModule::TBeamSummaryData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData))) {
     ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData *G__Lderived;
     G__Lderived=(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack))) {
     ND::TFgdOnlyModule::TFgd2DIsoTrack *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack))) {
     ND::TFgdOnlyModule::TFgd3DIsoTrack *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID))) {
     ND::TFgdOnlyModule::TFgd3DShowerPID *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd3DShowerPID*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp))) {
     ND::TFgdOnlyModule::TFgd3DShowerHyp *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster))) {
     ND::TFgdOnlyModule::TFgd2DCluster *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd2DCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit))) {
     ND::TSmrdReconModule::TSmrdReconHit *G__Lderived;
     G__Lderived=(ND::TSmrdReconModule::TSmrdReconHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack))) {
     ND::TSmrdReconModule::TSmrdIsoTrack *G__Lderived;
     G__Lderived=(ND::TSmrdReconModule::TSmrdIsoTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex))) {
     ND::TTrackerReconModule::TTrackerVertex *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult))) {
     ND::TTrackerReconModule::TTrackerResult *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerResult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle))) {
     ND::TTrackerReconModule::TTrueParticle *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrueParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex))) {
     ND::TTrueVertex *G__Lderived;
     G__Lderived=(ND::TTrueVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent))) {
     ND::TTrackerReconModule::TTrackerConstituent *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerConstituent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack))) {
     ND::TTrackerReconModule::TTPCTrack *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTPCTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack))) {
     ND::TTrackerReconModule::TFGDTrack *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TFGDTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode))) {
     ND::TTrackerReconModule::TTrackerNode *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerNode*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther))) {
     ND::TTrackerReconModule::TTrackOther *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackOther*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit))) {
     ND::TTrackerReconModule::TUnusedHit *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TUnusedHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID))) {
     ND::TGlobalReconModule::TTpcPID *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TTpcPID*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle))) {
     ND::TTrueParticle *G__Lderived;
     G__Lderived=(ND::TTrueParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex))) {
     ND::TGlobalReconModule::TGlobalVertex *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent))) {
     ND::TGlobalReconModule::TVertexConstituent *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TVertexConstituent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin))) {
     ND::TGlobalReconModule::TFgdTimeBin *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TFgdTimeBin*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits))) {
     ND::TGlobalReconModule::TOutermostHits *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TOutermostHits*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit))) {
     ND::TGlobalReconModule::TGlobalHit *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID))) {
     ND::TGlobalReconModule::TGlobalPID *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalPID*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject))) {
     ND::TGlobalReconModule::TTPCObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TTPCObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject))) {
     ND::TSubBaseObject *G__Lderived;
     G__Lderived=(ND::TSubBaseObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject))) {
     ND::TGlobalReconModule::TFGDObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TFGDObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject))) {
     ND::TGlobalReconModule::TECALObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TECALObject*)0x1000;
     {
       ND::TSubBaseShowerObject *G__Lpbase=(ND::TSubBaseShowerObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject))) {
     ND::TSubBaseShowerObject *G__Lderived;
     G__Lderived=(ND::TSubBaseShowerObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject))) {
     ND::TGlobalReconModule::TP0DObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TP0DObject*)0x1000;
     {
       ND::TSubBaseShowerObject *G__Lpbase=(ND::TSubBaseShowerObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject))) {
     ND::TGlobalReconModule::TSMRDObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TSMRDObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject))) {
     ND::TGlobalReconModule::TTrackerObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TTrackerObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate))) {
     ND::TGlobalReconModule::TGlobalPIDAlternate *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalPIDAlternate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject))) {
     ND::TGlobalReconModule::TTPCOtherObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TTPCOtherObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit))) {
     ND::TGlobalReconModule::TSMRDHit *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TSMRDHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject))) {
     ND::TTrackerECALReconModule::TECALReconObject *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack))) {
     ND::TTrackerECALReconModule::TECALReconTrack *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower))) {
     ND::TTrackerECALReconModule::TECALReconShower *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconShower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster))) {
     ND::TTrackerECALReconModule::TECALReconCluster *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject))) {
     ND::TTrackerECALReconModule::TECALReconUnmatchedObject *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack))) {
     ND::TP0DECALReconModule::TP0DECALReconTrack *G__Lderived;
     G__Lderived=(ND::TP0DECALReconModule::TP0DECALReconTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower))) {
     ND::TP0DECALReconModule::TP0DECALReconShower *G__Lderived;
     G__Lderived=(ND::TP0DECALReconModule::TP0DECALReconShower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge))) {
     ND::TP0DECALReconModule::TP0DECALLayerCharge *G__Lderived;
     G__Lderived=(ND::TP0DECALReconModule::TP0DECALLayerCharge*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes))) {
     ND::TP0DReconModule::TP0DAlgoRes *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DAlgoRes*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex))) {
     ND::TP0DReconModule::TP0DVertex *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle))) {
     ND::TP0DReconModule::TP0DParticle *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower))) {
     ND::TP0DReconModule::TP0DShower *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DShower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack))) {
     ND::TP0DReconModule::TP0DTrack *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode))) {
     ND::TP0DReconModule::TP0DNode *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DNode*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit))) {
     ND::TP0DReconModule::TP0DHit *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster))) {
     ND::TP0DReconModule::TP0DCluster *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex))) {
     ND::TTruthVerticesModule::TTruthVertex *G__Lderived;
     G__Lderived=(ND::TTruthVerticesModule::TTruthVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory))) {
     ND::TTruthTrajectoriesModule::TTruthTrajectory *G__Lderived;
     G__Lderived=(ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint))) {
     ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint *G__Lderived;
     G__Lderived=(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction))) {
     ND::TTRExReconModule::TTPCAnaJunction *G__Lderived;
     G__Lderived=(ND::TTRExReconModule::TTPCAnaJunction*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath))) {
     ND::TTRExReconModule::TTPCAnaPath *G__Lderived;
     G__Lderived=(ND::TTRExReconModule::TTPCAnaPath*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath),G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableoaAnalysisReaderProjectDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ND::TDatum*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::pair<int,const TGeoNode*> >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,const TGeoNode*> >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,const TGeoNode*>,less<int> >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector*>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,TVector2> >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short> >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short,allocator<short> > >",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ND */
static void G__setup_memvarND(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ND));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TND280Event */
static void G__setup_memvarNDcLcLTND280Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event));
   { ND::TND280Event *p; p=(ND::TND280Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fContext)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context),-1,-1,1,"fContext=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fGeometryHash)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue),-1,-1,1,"fGeometryHash=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAlignmentId)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId),-1,-1,1,"fAlignmentId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHeader)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader),-1,-1,1,"fHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TDataVector */
static void G__setup_memvarNDcLcLTDataVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector));
   { ND::TDataVector *p; p=(ND::TDataVector*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fVector)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR),G__defined_typename("vector<ND::TDatum*>"),-1,1,"fVector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TData */
static void G__setup_memvarNDcLcLTData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData));
   { ND::TData *p; p=(ND::TData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TDatum */
static void G__setup_memvarNDcLcLTDatum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum));
   { ND::TDatum *p; p=(ND::TDatum*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fParent)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum),-1,-1,1,"fParent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TND280Context */
static void G__setup_memvarNDcLcLTND280Context(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context));
   { ND::TND280Context *p; p=(ND::TND280Context*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fPartition)-(long)(p)),105,0,0,-1,-1,-1,1,"fPartition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRun)-(long)(p)),105,0,0,-1,-1,-1,1,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSubRun)-(long)(p)),105,0,0,-1,-1,-1,1,"fSubRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEvent)-(long)(p)),105,0,0,-1,-1,-1,1,"fEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSpill)-(long)(p)),105,0,0,-1,-1,-1,1,"fSpill=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeStamp)-(long)(p)),104,0,0,-1,-1,-1,1,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSHAHashValue */
static void G__setup_memvarNDcLcLTSHAHashValue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue));
   { ND::TSHAHashValue *p; p=(ND::TSHAHashValue*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fHash)-(long)(p)),104,0,0,-1,-1,-1,1,"fHash[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TAlignmentId */
static void G__setup_memvarNDcLcLTAlignmentId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId));
   { ND::TAlignmentId *p; p=(ND::TAlignmentId*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fDocString)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"fDocString=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TND280Event::Header */
static void G__setup_memvarNDcLcLTND280EventcLcLHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader));
   { ND::TND280Event::Header *p; p=(ND::TND280Event::Header*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRecordType)-(long)(p)),104,0,0,-1,-1,-1,1,"fRecordType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeStamp)-(long)(p)),104,0,0,-1,-1,-1,1,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRunType)-(long)(p)),104,0,0,-1,-1,-1,1,"fRunType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fErrorCode)-(long)(p)),104,0,0,-1,-1,-1,1,"fErrorCode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTriggerWord)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fTriggerWord=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMCMSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fMCMSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMCMSubSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fMCMSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMCMTimeSinceBusy)-(long)(p)),104,0,0,-1,-1,-1,1,"fMCMTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fP0DSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DSubSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fP0DSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DTimeSinceBusy)-(long)(p)),104,0,0,-1,-1,-1,1,"fP0DTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPCSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fTPCSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPCSubSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fTPCSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPCTimeSinceBusy)-(long)(p)),104,0,0,-1,-1,-1,1,"fTPCTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fFGDSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDSubSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fFGDSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDTimeSinceBusy)-(long)(p)),104,0,0,-1,-1,-1,1,"fFGDTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fECalSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fECalSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fECalSubSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fECalSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fECalTimeSinceBusy)-(long)(p)),104,0,0,-1,-1,-1,1,"fECalTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRDSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fSMRDSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRDSubSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fSMRDSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRDTimeSinceBusy)-(long)(p)),104,0,0,-1,-1,-1,1,"fSMRDTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fINGRIDSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fINGRIDSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fINGRIDSubSecond)-(long)(p)),104,0,0,-1,-1,-1,1,"fINGRIDSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fINGRIDTimeSinceBusy)-(long)(p)),104,0,0,-1,-1,-1,1,"fINGRIDTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCTMTriggerPattern)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fCTMTriggerPattern[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDCTMTriggerPattern)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fFGDCTMTriggerPattern[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::NRooTrackerVtx */
static void G__setup_memvarNDcLcLNRooTrackerVtx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx));
   { ND::NRooTrackerVtx *p; p=(ND::NRooTrackerVtx*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EvtCode)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"EvtCode=",0,"Generator-specific string with 'event code'");
   G__memvar_setup((void*)((long)(&p->EvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"EvtNum=",0,"event num.");
   G__memvar_setup((void*)((long)(&p->EvtXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtXSec=",0,"cross section for selected event (1E-38 cm2)");
   G__memvar_setup((void*)((long)(&p->EvtDXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtDXSec=",0,"Cross section for selected event kinematics (1E-38 cm2 /{K^n})");
   G__memvar_setup((void*)((long)(&p->EvtWght)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtWght=",0,"Weight for event");
   G__memvar_setup((void*)((long)(&p->EvtProb)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtProb=",0,"Probability  event (given cross section, path lengths, etc)");
   G__memvar_setup((void*)((long)(&p->EvtVtx)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtVtx[4]=",0,"Event vertex position in detector coord syst (SI)");
   G__memvar_setup((void*)((long)(&p->StdHepN)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepN=",0,"Number of particles in particle array");
   G__memvar_setup((void*)((long)(&p->StdHepPdg)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepPdg=",0,"[StdHepN] dg codes (& generator specific codes for pseudoparticles)");
   G__memvar_setup((void*)((long)(&p->StdHepStatus)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepStatus=",0,"[StdHepN] generator-specific status code");
   G__memvar_setup((void*)((long)(&p->StdHepX4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepX4[100][4]=",0,"4-x (x, y, z, t) of particle in hit nucleus frame (fm)");
   G__memvar_setup((void*)((long)(&p->StdHepP4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepP4[100][4]=",0,"4-p (px,py,pz,E) of particle in LAB frame (GeV)");
   G__memvar_setup((void*)((long)(&p->StdHepPolz)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepPolz[100][3]=",0,"polarization vector");
   G__memvar_setup((void*)((long)(&p->StdHepFd)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepFd=",0,"[StdHepN] first daughter");
   G__memvar_setup((void*)((long)(&p->StdHepLd)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepLd=",0,"[StdHepN]  last daughter");
   G__memvar_setup((void*)((long)(&p->StdHepFm)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepFm=",0,"[StdHepN]  first mother");
   G__memvar_setup((void*)((long)(&p->StdHepLm)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepLm=",0,"[StdHepN]  last mother");
   G__memvar_setup((void*)((long)(&p->NEnvc)-(long)(p)),105,0,0,-1,-1,-1,1,"NEnvc=",0,"NEUT native VCWORK information    Number of particles");
   G__memvar_setup((void*)((long)(&p->NEipvc)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEipvc=",0,"[NEnvc] PDG particle code");
   G__memvar_setup((void*)((long)(&p->NEpvc)-(long)(p)),102,0,0,-1,-1,-1,1,"NEpvc[100][3]=",0,"3-momentum (MeV/c)");
   G__memvar_setup((void*)((long)(&p->NEiorgvc)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEiorgvc=",0,"[NEnvc] Index of parent (Fortran convention: starting at 1)");
   G__memvar_setup((void*)((long)(&p->NEiflgvc)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEiflgvc=",0,"[NEnvc]  Flag of final state");
   G__memvar_setup((void*)((long)(&p->NEicrnvc)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEicrnvc=",0,"[NEnvc] Escaped nucleus (1) or not (0)");
   G__memvar_setup((void*)((long)(&p->NEcrsx)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsx=",0,"\\brief Cross section calculation variables (x) (currently used for coherent  interactions)");
   G__memvar_setup((void*)((long)(&p->NEcrsy)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsy=",0,"\\brief Cross section calculation variables (y) (currently used for coherent  interactions)");
   G__memvar_setup((void*)((long)(&p->NEcrsz)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsz=",0,"\\brief Cross section calculation variables  (z) (currently used for coherent    interactions)");
   G__memvar_setup((void*)((long)(&p->NEcrsphi)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsphi=",0,"\\brief Cross section calculation variables (phi) (currently used for coherent    interactions)");
   G__memvar_setup((void*)((long)(&p->NEnvert)-(long)(p)),105,0,0,-1,-1,-1,1,"NEnvert=",0,"Number of vertices (including production and exit points)");
   G__memvar_setup((void*)((long)(&p->NEposvert)-(long)(p)),102,0,0,-1,-1,-1,1,"NEposvert[100][3]=",0,"Position of vertex within nucleus (fm)");
   G__memvar_setup((void*)((long)(&p->NEiflgvert)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEiflgvert=",0,"[NEnvert]  Interaction type");
   G__memvar_setup((void*)((long)(&p->NEnvcvert)-(long)(p)),105,0,0,-1,-1,-1,1,"NEnvcvert=",0,"Number of intermediate particles (including initial and final)");
   G__memvar_setup((void*)((long)(&p->NEdirvert)-(long)(p)),102,0,0,-1,-1,-1,1,"NEdirvert[300][3]=",0,"Direction of particle");
   G__memvar_setup((void*)((long)(&p->NEabspvert)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NEabspvert=",0,"[NEnvcvert] Absolute momentum in the lab frame (MeV/c)");
   G__memvar_setup((void*)((long)(&p->NEabstpvert)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NEabstpvert=",0,"[NEnvcvert] Absolute momentum in the nucleon rest frame (MeV/c)");
   G__memvar_setup((void*)((long)(&p->NEipvert)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEipvert=",0,"[NEnvcvert] PDG particle code");
   G__memvar_setup((void*)((long)(&p->NEiverti)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEiverti=",0,"[NEnvcvert] Index of initial vertex (pointing to nvert array above)");
   G__memvar_setup((void*)((long)(&p->NEivertf)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEivertf=",0,"[NEnvcvert] Index of final vertex (pointing to nvert array above)");
   G__memvar_setup((void*)((long)(&p->NFnvert)-(long)(p)),105,0,0,-1,-1,-1,1,"NFnvert=",0,"\\brief Number of \"vertices\"");
   G__memvar_setup((void*)((long)(&p->NFiflag)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NFiflag=",0,"[NFnvert]  4-digit flag for interaction type at i-th vertex");
   G__memvar_setup((void*)((long)(&p->NFx)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFx=",0,"[NFnvert]  x-component of i-th vertex position inside nucleus");
   G__memvar_setup((void*)((long)(&p->NFy)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFy=",0,"[NFnvert] y-component of i-th vertex position inside nucleus");
   G__memvar_setup((void*)((long)(&p->NFz)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFz=",0,"[NFnvert] z-component of i-th vertex position inside nucleus");
   G__memvar_setup((void*)((long)(&p->NFpx)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFpx=",0,"[NFnvert] x-component of momentum of nucleon leaving the i-th vertex");
   G__memvar_setup((void*)((long)(&p->NFpy)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFpy=",0,"[NFnvert] y-component of momentum of nucleon leaving the i-th vertex");
   G__memvar_setup((void*)((long)(&p->NFpz)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFpz=",0,"[NFnvert] z-component of momentum of nucleon leaving the i-th vertex");
   G__memvar_setup((void*)((long)(&p->NFe)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFe=",0,"[NFnvert] energy of nucleon leaving the i-th vertex");
   G__memvar_setup((void*)((long)(&p->NFfirststep)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"NFfirststep=",0,"[NFnvert]  first step index of this track (to obtain the CMS energies for each step)");
   G__memvar_setup((void*)((long)(&p->NFnstep)-(long)(p)),105,0,0,-1,-1,-1,1,"NFnstep=",0,"number of steps");
   G__memvar_setup((void*)((long)(&p->NFecms2)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"NFecms2=",0,"[NFnstep] CMS energy squared of collision at k-th step (i.e. before interacting).");
   G__memvar_setup((void*)((long)(&p->PCascProb)-(long)(p)),102,0,0,-1,-1,-1,1,"PCascProb=",0,"The overall probability for the nucelon FSI cascade. Used for nucleon FSI reweighting.");
   G__memvar_setup((void*)((long)(&p->Prob)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"Prob=",0,"[NFnstep] A step-wise probability for the nucleon FSI cascade.");
   G__memvar_setup((void*)((long)(&p->VertFlagStep)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"VertFlagStep=",0,"[NFnstep] Gives the interaction type of a step: 5 = non event, 4 = survival, 3 = douple pi, 2 = single pi, 1 = elastic");
   G__memvar_setup((void*)((long)(&p->VertFsiRhon)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"VertFsiRhon=",0,"[NFnstep] Prob multiplied by rhon from nrfermi.F in NEUT.");
   G__memvar_setup((void*)((long)(&p->StepPel)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"StepPel=",0,"[NFnstep] A step-wise probability for elastic nucleon scatter scattering.");
   G__memvar_setup((void*)((long)(&p->StepPsp)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"StepPsp=",0,"[NFnstep] A step-wise probability for single pion production via nucleon FSI.");
   G__memvar_setup((void*)((long)(&p->StepPdp)-(long)(p)),70,0,0,-1,G__defined_typename("Float_t"),-1,1,"StepPdp=",0,"[NFnstep]  A step-wise probability for double pion production via nucleon FSI.");
   G__memvar_setup((void*)((long)(&p->SPIDelta)-(long)(p)),105,0,0,-1,-1,-1,1,"SPIDelta=",0,"SPIDelta flag for resonance decay reweighting");
   G__memvar_setup((void*)((long)(&p->GeomPath)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"GeomPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"GeneratorName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigFileName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"OrigFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreeName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"OrigTreeName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigEvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigEvtNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreeEntries)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigTreeEntries=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreePOT)-(long)(p)),100,0,0,-1,-1,-1,1,"OrigTreePOT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeInSpill)-(long)(p)),100,0,0,-1,-1,-1,1,"TimeInSpill=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TruthVertexID)-(long)(p)),105,0,0,-1,-1,-1,1,"TruthVertexID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::JNuBeamFlux */
static void G__setup_memvarNDcLcLJNuBeamFlux(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux));
   { ND::JNuBeamFlux *p; p=(ND::JNuBeamFlux*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->NuFluxEntry)-(long)(p)),108,0,0,-1,-1,-1,1,"NuFluxEntry=",0,"Corresponding entry in orig flux file");
   G__memvar_setup((void*)((long)(&p->NuFileName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"NuFileName=",0,"Original flux file name neutrino parent info");
   G__memvar_setup((void*)((long)(&p->NuParentPdg)-(long)(p)),105,0,0,-1,-1,-1,1,"NuParentPdg=",0,"Parent hadron pdg code");
   G__memvar_setup((void*)((long)(&p->NuParentDecMode)-(long)(p)),105,0,0,-1,-1,-1,1,"NuParentDecMode=",0,"Parent hadron decay mode");
   G__memvar_setup((void*)((long)(&p->NuParentDecP4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentDecP4[4]=",0,"Parent hadron 4-momentum at decay");
   G__memvar_setup((void*)((long)(&p->NuParentDecX4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentDecX4[4]=",0,"Parent hadron 4-position at decay");
   G__memvar_setup((void*)((long)(&p->NuCospibm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuCospibm=",0,"Parent hadron cos(theta) relative to beam at decay");
   G__memvar_setup((void*)((long)(&p->NuNorm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuNorm=",0,"Normalization weight");
   G__memvar_setup((void*)((long)(&p->NuParentProP4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentProP4[4]=",0,"Parent hadron 4-momentum at production");
   G__memvar_setup((void*)((long)(&p->NuParentProX4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentProX4[4]=",0,"Parent hadron 4-position at production");
   G__memvar_setup((void*)((long)(&p->NuCospi0bm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuCospi0bm=",0,"Parent hadron cos(theta) relative to beam at production");
   G__memvar_setup((void*)((long)(&p->NuRnu)-(long)(p)),102,0,0,-1,-1,-1,1,"NuRnu=",0,"Neutrino r position at ND5/6 plane");
   G__memvar_setup((void*)((long)(&p->NuXnu)-(long)(p)),102,0,0,-1,-1,-1,1,"NuXnu[2]=",0,"Neutrino (x,y) position at ND5/6 plane");
   G__memvar_setup((void*)((long)(&p->NuIdfd)-(long)(p)),105,0,0,-1,-1,-1,1,"NuIdfd=",0,"Detector ID primary particle information");
   G__memvar_setup((void*)((long)(&p->NuGipart)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGipart=",0,"Primary particle ID");
   G__memvar_setup((void*)((long)(&p->NuGpos0)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGpos0[3]=",0,"Primary particle starting point");
   G__memvar_setup((void*)((long)(&p->NuGvec0)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGvec0[3]=",0,"Primary particle direction at starting point");
   G__memvar_setup((void*)((long)(&p->NuGamom0)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGamom0=",0,"Momentum of the primary particle at the starting point Interation History Information");
   G__memvar_setup((void*)((long)(&p->NuNg)-(long)(p)),105,0,0,-1,-1,-1,1,"NuNg=",0,"Number of interaction steps");
   G__memvar_setup((void*)((long)(&p->NuGp)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGp[12][3]=",0,"Momentum of ancestor particle");
   G__memvar_setup((void*)((long)(&p->NuGcosbm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGcosbm[12]=",0,"Ancestor particle cos(theta) relative to beam");
   G__memvar_setup((void*)((long)(&p->NuGv)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGv[12][3]=",0,"Position of ancestor particle");
   G__memvar_setup((void*)((long)(&p->NuGpid)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGpid[12]=",0,"PDG ancestor particle ID");
   G__memvar_setup((void*)((long)(&p->NuGmec)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGmec[12]=",0,"Particle production mechanism of ancestor particle Normalization and Transfer Matrix Information");
   G__memvar_setup((void*)((long)(&p->NuEnusk)-(long)(p)),102,0,0,-1,-1,-1,1,"NuEnusk=",0,"Neutrino Energy at SK");
   G__memvar_setup((void*)((long)(&p->NuNormsk)-(long)(p)),102,0,0,-1,-1,-1,1,"NuNormsk=",0,"Normalization weight at SK");
   G__memvar_setup((void*)((long)(&p->NuAnorm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuAnorm=",0,"ND Acceptance Weight Out-of-target Secondary Interactions");
   G__memvar_setup((void*)((long)(&p->NuGmat)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGmat[12]=",0,"Material in which the particle originates");
   G__memvar_setup((void*)((long)(&p->NuGdistc)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistc[12]=",0,"Distance traveled through carbon");
   G__memvar_setup((void*)((long)(&p->NuGdistal)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistal[12]=",0,"Distance traveled through aluminum");
   G__memvar_setup((void*)((long)(&p->NuGdistti)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistti[12]=",0,"Distance traveled through titanium");
   G__memvar_setup((void*)((long)(&p->NuGdistfe)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistfe[12]=",0,"Distance traveled through iron Beam parameter information");
   G__memvar_setup((void*)((long)(&p->NuVersion)-(long)(p)),102,0,0,-1,-1,-1,1,"NuVersion=",0,"Jnubeam flux version");
   G__memvar_setup((void*)((long)(&p->NuTuneid)-(long)(p)),105,0,0,-1,-1,-1,1,"NuTuneid=",0,"Beam tune ID #");
   G__memvar_setup((void*)((long)(&p->NuNtrig)-(long)(p)),105,0,0,-1,-1,-1,1,"NuNtrig=",0,"Number of triggers");
   G__memvar_setup((void*)((long)(&p->NuPint)-(long)(p)),105,0,0,-1,-1,-1,1,"NuPint=",0,"Interaction model ID");
   G__memvar_setup((void*)((long)(&p->NuBpos)-(long)(p)),102,0,0,-1,-1,-1,1,"NuBpos[2]=",0,"Beam center position");
   G__memvar_setup((void*)((long)(&p->NuBtilt)-(long)(p)),102,0,0,-1,-1,-1,1,"NuBtilt[2]=",0,"Beam angle");
   G__memvar_setup((void*)((long)(&p->NuBrms)-(long)(p)),102,0,0,-1,-1,-1,1,"NuBrms[2]=",0,"Beam RMS width");
   G__memvar_setup((void*)((long)(&p->NuEmit)-(long)(p)),102,0,0,-1,-1,-1,1,"NuEmit[2]=",0,"Beam Emittance");
   G__memvar_setup((void*)((long)(&p->NuAlpha)-(long)(p)),102,0,0,-1,-1,-1,1,"NuAlpha[2]=",0,"Beam Alpha");
   G__memvar_setup((void*)((long)(&p->NuHcur)-(long)(p)),102,0,0,-1,-1,-1,1,"NuHcur[3]=",0,"Horn currents");
   G__memvar_setup((void*)((long)(&p->NuRand)-(long)(p)),105,0,0,-1,-1,-1,1,"NuRand=",0,"Random seed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::RooTrackerVtxBase */
static void G__setup_memvarNDcLcLRooTrackerVtxBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase));
   { ND::RooTrackerVtxBase *p; p=(ND::RooTrackerVtxBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::GRooTrackerVtx */
static void G__setup_memvarNDcLcLGRooTrackerVtx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx));
   { ND::GRooTrackerVtx *p; p=(ND::GRooTrackerVtx*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EvtCode)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"EvtCode=",0,"generator-specific string with 'event code'");
   G__memvar_setup((void*)((long)(&p->EvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"EvtNum=",0,"event num.");
   G__memvar_setup((void*)((long)(&p->EvtXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtXSec=",0,"cross section for selected event (1E-38 cm2)");
   G__memvar_setup((void*)((long)(&p->EvtDXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtDXSec=",0,"cross section for selected event kinematics (1E-38 cm2{K^n})");
   G__memvar_setup((void*)((long)(&p->EvtWght)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtWght=",0,"weight for that event");
   G__memvar_setup((void*)((long)(&p->EvtProb)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtProb=",0,"probability for that event (given cross section, pathlengths, etc)");
   G__memvar_setup((void*)((long)(&p->EvtVtx)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtVtx[4]=",0,"event vertex position in detector coord syst (SI)");
   G__memvar_setup((void*)((long)(&p->StdHepN)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepN=",0,"number of particles in particle array  stdhep-like particle array");
   G__memvar_setup((void*)((long)(&p->StdHepPdg)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepPdg=",0,"[StdHepN] /< pdg codes (& generator specific codes for");
   G__memvar_setup((void*)((long)(&p->StdHepRescat)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepRescat=",0,"[StdHepN] /< generator-specific status code");
   G__memvar_setup((void*)((long)(&p->StdHepStatus)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepStatus=",0,"[StdHepN] /< generator-specific status code");
   G__memvar_setup((void*)((long)(&p->StdHepX4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepX4[350][4]=",0,"4-x (x, y, z, t) of particle in hit nucleus frame (fm)");
   G__memvar_setup((void*)((long)(&p->StdHepP4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepP4[350][4]=",0,"4-p (px,py,pz,E) of particle in LAB frame (GeV)");
   G__memvar_setup((void*)((long)(&p->StdHepPolz)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepPolz[350][3]=",0,"polarization vector");
   G__memvar_setup((void*)((long)(&p->StdHepFd)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepFd=",0,"[StdHepN] /< first daughter. First daughter of -1 indicates");
   G__memvar_setup((void*)((long)(&p->StdHepLd)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepLd=",0,"[StdHepN] /< last  daughter");
   G__memvar_setup((void*)((long)(&p->StdHepFm)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepFm=",0,"[StdHepN] /< first mother. First mother of -1 indicates");
   G__memvar_setup((void*)((long)(&p->StdHepLm)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"StdHepLm=",0,"[StdHepN] /< last  mother");
   G__memvar_setup((void*)((long)(&p->G2NeutEvtCode)-(long)(p)),105,0,0,-1,-1,-1,1,"G2NeutEvtCode=",0,"NEUT-like reaction code for the GENIE event");
   G__memvar_setup((void*)((long)(&p->GeomPath)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"GeomPath=",0,"Geometry path of where the vertex is");
   G__memvar_setup((void*)((long)(&p->GeneratorName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"GeneratorName=",0,"genie, also gives some of the running options(e.g. filling events with a fixed or meannumber of vertices)");
   G__memvar_setup((void*)((long)(&p->OrigFileName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"OrigFileName=",0,"Filename of the gnmc file");
   G__memvar_setup((void*)((long)(&p->OrigTreeName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TObjString),-1,-1,1,"OrigTreeName=",0,"Tree name within the gnmc file");
   G__memvar_setup((void*)((long)(&p->OrigEvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigEvtNum=",0,"Event number within the gnmc file");
   G__memvar_setup((void*)((long)(&p->OrigTreeEntries)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigTreeEntries=",0,"Number of entries in the gnmc file");
   G__memvar_setup((void*)((long)(&p->OrigTreePOT)-(long)(p)),100,0,0,-1,-1,-1,1,"OrigTreePOT=",0,"Number of POT in the gnmc file");
   G__memvar_setup((void*)((long)(&p->TimeInSpill)-(long)(p)),100,0,0,-1,-1,-1,1,"TimeInSpill=",0,"Time of the vertex, relative to spill time");
   G__memvar_setup((void*)((long)(&p->TruthVertexID)-(long)(p)),105,0,0,-1,-1,-1,1,"TruthVertexID=",0,"A link to the TTruthVertex tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTRExReconModule */
static void G__setup_memvarNDcLcLTTRExReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TTRExReconModule::TTPCAnaPattern */
static void G__setup_memvarNDcLcLTTRExReconModulecLcLTTPCAnaPattern(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern));
   { ND::TTRExReconModule::TTPCAnaPattern *p; p=(ND::TTRExReconModule::TTPCAnaPattern*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->S1Sflag)-(long)(p)),103,0,0,-1,-1,-1,1,"S1Sflag=",0,"A flag to say whether this pattern would pass the TPC gas Stage 1 Selection");
   G__memvar_setup((void*)((long)(&p->PatternID)-(long)(p)),105,0,0,-1,-1,-1,1,"PatternID=",0,"The ID of the pattern");
   G__memvar_setup((void*)((long)(&p->NJunctions)-(long)(p)),105,0,0,-1,-1,-1,1,"NJunctions=",0,"The number of junctions in the pattern.");
   G__memvar_setup((void*)((long)(&p->Junctions)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"Junctions=",0,"The constituent junctions of the pattern");
   G__memvar_setup((void*)((long)(&p->NPaths)-(long)(p)),105,0,0,-1,-1,-1,1,"NPaths=",0,"The number of paths.");
   G__memvar_setup((void*)((long)(&p->Paths)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"Paths=",0,"The constituent paths of the pattern.");
   G__memvar_setup((void*)((long)(&p->TPC)-(long)(p)),105,0,0,-1,-1,-1,1,"TPC=",0,"The TPC in which the pattern resides.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGeometrySummaryModule */
static void G__setup_memvarNDcLcLTGeometrySummaryModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TGeometrySummaryModule::TDetectorBoundingBox */
static void G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   { ND::TGeometrySummaryModule::TDetectorBoundingBox *p; p=(ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Minimum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Minimum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Maximum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Maximum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */
static void G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   { ND::TGeometrySummaryModule::TTPCMicroMegasVolumes *p; p=(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MMvolumes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),G__defined_typename("map<int,std::pair<int,const TGeoNode*> >"),-1,1,"MMvolumes=",0,"(pair<int,pair<int,const TGeoNode*> >)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<int,const TGeoNode*> */
static void G__setup_memvarpairlEintcOconstsPTGeoNodemUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR));
   { pair<int,const TGeoNode*> *p; p=(pair<int,const TGeoNode*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),85,0,1,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TGeoNode),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<int,pair<int,const TGeoNode*> > */
static void G__setup_memvarpairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR));
   { pair<int,pair<int,const TGeoNode*> > *p; p=(pair<int,pair<int,const TGeoNode*> >*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TBeamSummaryDataModule */
static void G__setup_memvarNDcLcLTBeamSummaryDataModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TBeamSummaryDataModule::TBeamSummaryData */
static void G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   { ND::TBeamSummaryDataModule::TBeamSummaryData *p; p=(ND::TBeamSummaryDataModule::TBeamSummaryData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->BeamRunNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"BeamRunNumber=",0,"Beam Run Number in neutrino beamline.");
   G__memvar_setup((void*)((long)(&p->SpillNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"SpillNumber=",0,"Spill Number in 32 bit.");
   G__memvar_setup((void*)((long)(&p->GPS1TriggerTime)-(long)(p)),105,0,0,-1,-1,-1,1,"GPS1TriggerTime=",0,"GPS1 Trigger Time (Unix Time in sec)");
   G__memvar_setup((void*)((long)(&p->GPS1TriggerTimeNanoSecond)-(long)(p)),105,0,0,-1,-1,-1,1,"GPS1TriggerTimeNanoSecond=",0,"GPS1 Trigger Time for sub-second (innano sec)");
   G__memvar_setup((void*)((long)(&p->CT5ProtonsPerSpill)-(long)(p)),100,0,0,-1,-1,-1,1,"CT5ProtonsPerSpill=",0,"Number of Protons in the SPILL counted byCT5, which is the most downstream chargetransferer. [POT]");
   G__memvar_setup((void*)((long)(&p->CT5ProtonsPerBunch)-(long)(p)),100,0,0,-1,-1,-1,1,"CT5ProtonsPerBunch[8]=",0,"Number of Protons in the BUNCH(1st-8th) counted by CT5, which is themost downstream charge transferer. [POT]");
   G__memvar_setup((void*)((long)(&p->CT5BeamBunchTiming)-(long)(p)),100,0,0,-1,-1,-1,1,"CT5BeamBunchTiming[8]=",0,"Timing of Proton beam BUNCH (1st-8th)measured by CT5, which is the mostdownstream charge transferer. Time 0 isTrigger Time. [micro sec]");
   G__memvar_setup((void*)((long)(&p->CT5BeamBunchFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"CT5BeamBunchFlag[8]=",0,"Flag describing that the Proton Beam isdetected by CT5 or not in the BUNCH(1st-8th). 1 = extracted, 0 = not extracted.");
   G__memvar_setup((void*)((long)(&p->OfficialProtonsPerSpill)-(long)(p)),100,0,0,-1,-1,-1,1,"OfficialProtonsPerSpill=",0,"Number of Protons in the SPILL forthe official analysis, normally CT5.[POT]");
   G__memvar_setup((void*)((long)(&p->OfficialCTNumber)-(long)(p)),100,0,0,-1,-1,-1,1,"OfficialCTNumber=",0,"Gives the CT used for the POT calculation.Usually CT5.");
   G__memvar_setup((void*)((long)(&p->OfficialProtonsPerBunch)-(long)(p)),100,0,0,-1,-1,-1,1,"OfficialProtonsPerBunch[8]=",0,"Number of Protons in the BUNCH(1st-8th) counted in the officialanalysis, normally from CT5. [POT]");
   G__memvar_setup((void*)((long)(&p->OfficialBeamBunchTiming)-(long)(p)),100,0,0,-1,-1,-1,1,"OfficialBeamBunchTiming[8]=",0,"Timing of Proton beam BUNCH(1st-8th) in the official analysis,usually CT5. Time 0 is TriggerTime. [micro sec]");
   G__memvar_setup((void*)((long)(&p->OfficialBeamBunchFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"OfficialBeamBunchFlag[8]=",0,"Flag describing that the Proton Beamis detected or not in the BUNCH(1st-8th) for the official CT for agiven spill. 1 = extracted, 0 = notextracted.");
   G__memvar_setup((void*)((long)(&p->OfficialBeamFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"OfficialBeamFlag=",0,"Flag describing that the Proton Beam isdetected or not for the official CT for a givenspill. 1 = extracted, 0 = not extracted.");
   G__memvar_setup((void*)((long)(&p->Horn1CurrentSum)-(long)(p)),100,0,0,-1,-1,-1,1,"Horn1CurrentSum=",0,"Horn1 Current. [kA]");
   G__memvar_setup((void*)((long)(&p->Horn2CurrentSum)-(long)(p)),100,0,0,-1,-1,-1,1,"Horn2CurrentSum=",0,"Horn2 Current. [kA]");
   G__memvar_setup((void*)((long)(&p->Horn3CurrentSum)-(long)(p)),100,0,0,-1,-1,-1,1,"Horn3CurrentSum=",0,"Horn3 Current. [kA]");
   G__memvar_setup((void*)((long)(&p->GoodSpillFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"GoodSpillFlag=",0,"Good Spill Flag. Values >=1 = Good Spill, with 1being at 250 kA, 2 at 200 kA, 100 at 0 kA, etc..Suitable for analysis., 0 = Bad Spill. Improper forphysics analysis., Flag == 99 is applied forHorn-off run in early Run 3 (early 2012) (need tocheck if this is still valid).");
   G__memvar_setup((void*)((long)(&p->BSDVersion)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TString),-1,-1,1,"BSDVersion=",0,"BSD version information. Currently \"v01\" is thenewest.");
   G__memvar_setup((void*)((long)(&p->OtherData)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData),-1,-1,1,"OtherData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */
static void G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   { ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData *p; p=(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MidasEvent)-(long)(p)),105,0,0,-1,-1,-1,1,"MidasEvent=",0,"MIDAS Event number in BSD root file. not for nd280analysis.");
   G__memvar_setup((void*)((long)(&p->BeamRunNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"BeamRunNumber=",0,"Beam Run Number in Neutrino beamline.");
   G__memvar_setup((void*)((long)(&p->SpillNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"SpillNumber=",0,"Spill Number in 32 bit");
   G__memvar_setup((void*)((long)(&p->MRRunNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"MRRunNumber=",0,"Main Ring Run Number.");
   G__memvar_setup((void*)((long)(&p->GPSStatus)-(long)(p)),105,0,0,-1,-1,-1,1,"GPSStatus[2]=",0,"Status of GPS. [0] = GPS1, [1] = GPS2.");
   G__memvar_setup((void*)((long)(&p->TriggerTime)-(long)(p)),105,0,0,-1,-1,-1,1,"TriggerTime[3]=",0,"Trigger Time (Unix Time in sec), [0] = GPS1,[1] = GPS2, [2] = Rb clock system.");
   G__memvar_setup((void*)((long)(&p->TriggerTimeNanoSecond)-(long)(p)),105,0,0,-1,-1,-1,1,"TriggerTimeNanoSecond[3]=",0,"Trigger Time for sub-second (in nanosec), [0] = GPS1, [1] = GPS2, [2] = Rbclock system.");
   G__memvar_setup((void*)((long)(&p->ProtonsPerSpill)-(long)(p)),100,0,0,-1,-1,-1,1,"ProtonsPerSpill[5]=",0,"Number of Protons in the SPILL countedby CTs, [0] = CT1,..[4] = CT5.");
   G__memvar_setup((void*)((long)(&p->ProtonsPerBunch)-(long)(p)),100,0,0,-1,-1,-1,1,"ProtonsPerBunch[5][9]=",0,"Number of Protons in the BUNCHcounted by CTs, [0-4] = CT1-CT5, [0-8]= Whole of bunches, 1st bunch, ... 8thbunch.");
   G__memvar_setup((void*)((long)(&p->BeamTiming)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamTiming[5]=",0,"Timing of Proton beam measured by CTs. [0-4]= CT1-CT5. Time 0 is Trigger Time. [micro sec]");
   G__memvar_setup((void*)((long)(&p->BeamBunchTiming)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamBunchTiming[5][9]=",0,"Timing of Proton beam BUNCH measuredby CTs. [0-4] = CT1-CT5, [0-8] = Wholeof bunches, 1st bunch, ... 8th bunch.Time 0 is Trigger Time. [micro sec]");
   G__memvar_setup((void*)((long)(&p->BeamFlag)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamFlag[5]=",0,"Flag describing that the Proton Beam isdetected by CTs or not. 1 = extracted, 0 = notextracted.");
   G__memvar_setup((void*)((long)(&p->BeamBunchFlag)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamBunchFlag[5][9]=",0,"Flag describing that the Proton Beamis detected by CTs or not in the BUNCH(1st-8th). 1 = extracted, 0 = notextracted.");
   G__memvar_setup((void*)((long)(&p->HornCurrent)-(long)(p)),100,0,0,-1,-1,-1,1,"HornCurrent[3]=",0,"Horn Current. [0-3] = Horn1 - Horn3. [kA]");
   G__memvar_setup((void*)((long)(&p->HornBusBarCurrent)-(long)(p)),100,0,0,-1,-1,-1,1,"HornBusBarCurrent[3][5]=",0,"Horn Current for each busbar.[0..3][] = Horn1..Horn3. [][0..4] =individual ch. [kA]");
   G__memvar_setup((void*)((long)(&p->BeamPositionOnTarget)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamPositionOnTarget[2]=",0,"Beam Position on the target.[0..1] = [x and y]. [mm]");
   G__memvar_setup((void*)((long)(&p->BeamDirectionOnTarget)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamDirectionOnTarget[2]=",0,"Beam Direction on the target.[0..1] = [x and y]. [mm]");
   G__memvar_setup((void*)((long)(&p->BeamSizeOnTarget)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamSizeOnTarget[2]=",0,"Beam Size on the target. [0..1] = [xand y]. [mm]");
   G__memvar_setup((void*)((long)(&p->MumonSiTotalQ)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonSiTotalQ=",0,"MUMON Total Charge measured by the Si detectors.");
   G__memvar_setup((void*)((long)(&p->MumonSiPeak)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonSiPeak=",0,"MUMON Si Peak");
   G__memvar_setup((void*)((long)(&p->MumonSiX)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonSiX=",0,"Beam X Position on MUMON measured by the Sidetectors. [mm]");
   G__memvar_setup((void*)((long)(&p->MumonSiwX)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonSiwX=",0,"Beam X Width on MUMON measured by the Sidetectors. [mm]");
   G__memvar_setup((void*)((long)(&p->MumonSiY)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonSiY=",0,"Beam Y Position on MUMON measured by the Sidetectors. [mm]");
   G__memvar_setup((void*)((long)(&p->MumonSiwY)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonSiwY=",0,"Beam Y Width on MUMON measured by the Sidetectors. [mm]");
   G__memvar_setup((void*)((long)(&p->MumonICTotalQ)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonICTotalQ=",0,"MUMON Total Charge measured by the ionization chambers.");
   G__memvar_setup((void*)((long)(&p->MumonICPeak)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonICPeak=",0,"MUMON Peak measured by the ionization chambers.");
   G__memvar_setup((void*)((long)(&p->MumonICX)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonICX=",0,"Beam X Position on MUMON measured by thei onization chambers [mm]");
   G__memvar_setup((void*)((long)(&p->MumonICwX)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonICwX=",0,"Beam X Width on MUMON measured by the ionizationchambers [mm]");
   G__memvar_setup((void*)((long)(&p->MumonICY)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonICY=",0,"Beam Y Position on MUMON measured by   chambers [mm]");
   G__memvar_setup((void*)((long)(&p->MumonICwY)-(long)(p)),100,0,0,-1,-1,-1,1,"MumonICwY=",0,"Beam Y Width on MUMON measured by the ionization chambers [mm]");
   G__memvar_setup((void*)((long)(&p->OTRLightYield)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRLightYield=",0,"Light Yield of OTR");
   G__memvar_setup((void*)((long)(&p->OTRX)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRX=",0,"Beam X Position measured by the OTR. [mm]");
   G__memvar_setup((void*)((long)(&p->OTRwX)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRwX=",0,"Beam X Width measured by the OTR. [mm]");
   G__memvar_setup((void*)((long)(&p->OTRY)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRY=",0,"Beam Y Position measured by the OTR. [mm]");
   G__memvar_setup((void*)((long)(&p->OTRwY)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRwY=",0,"Beam Y Width measured by the OTR. [mm]");
   G__memvar_setup((void*)((long)(&p->OTRXError)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRXError=",0,"Error of OTRX [mm]");
   G__memvar_setup((void*)((long)(&p->OTRwXError)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRwXError=",0,"Error of OTRwX [mm]");
   G__memvar_setup((void*)((long)(&p->OTRYError)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRYError=",0,"Error of OTRY [mm]");
   G__memvar_setup((void*)((long)(&p->OTRwYError)-(long)(p)),100,0,0,-1,-1,-1,1,"OTRwYError=",0,"Error of OTRwY [mm]");
   G__memvar_setup((void*)((long)(&p->GoodGPSFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"GoodGPSFlag=",0,"Status Flag of GPSs. 1 = GOOD. 0 = BAD.");
   G__memvar_setup((void*)((long)(&p->TriggerFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"TriggerFlag=",0,"Status Flag of Beam Trrigger. 1 = GOOD. 0 = BAD.");
   G__memvar_setup((void*)((long)(&p->SpillFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"SpillFlag=",0,"Status Flag of Spill. 1 = GOOD. 0 = BAD.");
   G__memvar_setup((void*)((long)(&p->GoodSpillFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"GoodSpillFlag=",0,"Status Flag of Spill. This Flag contains all information in GoodGPSFlag TriggerFlag and SpillFlag. It should be used to define if the spill is suitable for physics analysis or not. 0 = BAD.  Any others starts depending on runconditions.");
   G__memvar_setup((void*)((long)(&p->TargetEfficiency)-(long)(p)),100,0,0,-1,-1,-1,1,"TargetEfficiency[3]=",0,"Efficiency of the Trager.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule */
static void G__setup_memvarNDcLcLTFgdOnlyModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd2DIsoTrack */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   { ND::TFgdOnlyModule::TFgd2DIsoTrack *p; p=(ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Angle)-(long)(p)),100,0,0,-1,-1,-1,1,"Angle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SumCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"SumCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Origin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Origin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OriginVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"OriginVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitPositions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),G__defined_typename("vector<TVector3*>"),-1,1,"HitPositions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrajId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrajId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Completeness)-(long)(p)),100,0,0,-1,-1,-1,1,"Completeness=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cleanliness)-(long)(p)),100,0,0,-1,-1,-1,1,"Cleanliness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd3DIsoTrack */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   { ND::TFgdOnlyModule::TFgd3DIsoTrack *p; p=(ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SumCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"SumCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Origin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Origin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OriginVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"OriginVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonPull)-(long)(p)),100,0,0,-1,-1,-1,1,"muonPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pionPull)-(long)(p)),100,0,0,-1,-1,-1,1,"pionPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPull)-(long)(p)),100,0,0,-1,-1,-1,1,"protonPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XZHitPositions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),G__defined_typename("vector<TVector3*>"),-1,1,"XZHitPositions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YZHitPositions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),G__defined_typename("vector<TVector3*>"),-1,1,"YZHitPositions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrajId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrajId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Completeness)-(long)(p)),100,0,0,-1,-1,-1,1,"Completeness=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cleanliness)-(long)(p)),100,0,0,-1,-1,-1,1,"Cleanliness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd3DShowerPID */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   { ND::TFgdOnlyModule::TFgd3DShowerPID *p; p=(ND::TFgdOnlyModule::TFgd3DShowerPID*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Hyp1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),-1,-1,1,"Hyp1=",0,"Information assuming the particle is forward-going.");
   G__memvar_setup((void*)((long)(&p->Hyp2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),-1,-1,1,"Hyp2=",0,"Information assuming the particle is backward-going.");
   G__memvar_setup((void*)((long)(&p->PCAEigenValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"PCAEigenValues=",0,"The three PCA eigenvalues.");
   G__memvar_setup((void*)((long)(&p->NumHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NumHits=",0,"The number of hits contributing to this cluster.");
   G__memvar_setup((void*)((long)(&p->MatchingLikelihood3D)-(long)(p)),100,0,0,-1,-1,-1,1,"MatchingLikelihood3D=",0,"MVA likelihood value when matching 2D");
   G__memvar_setup((void*)((long)(&p->Circularity)-(long)(p)),100,0,0,-1,-1,-1,1,"Circularity=",0,"Dan Scully's Circularity variable, adapted for FGDs.");
   G__memvar_setup((void*)((long)(&p->Trajectories)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"Trajectories=",0,"Map of true trajectory IDs to the number of G4 contributors that contributed to this cluster");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom in the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"The goodness of fit for the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The fit status.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd3DShowerHyp */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   { ND::TFgdOnlyModule::TFgd3DShowerHyp *p; p=(ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Identified start position of the shower.");
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,"Variance on the start position of the shower.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"Identified direction of the shower, found using PCA.");
   G__memvar_setup((void*)((long)(&p->DirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVar=",0,"Variance on the direction of the shower.");
   G__memvar_setup((void*)((long)(&p->ConeAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ConeAngle=",0,"Opening angle of the cone describing this shower.");
   G__memvar_setup((void*)((long)(&p->ConeAngleVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ConeAngleVar=",0,"Variance on the cone opening angle.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"Energy deposited in this shower.");
   G__memvar_setup((void*)((long)(&p->QAvgInThirds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"QAvgInThirds=",0,"Charge of hits in 1st, 2nd and 3rd groups, based");
   G__memvar_setup((void*)((long)(&p->SpreadInThirds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"SpreadInThirds=",0,"Average transverse spread of hits  in the 1st,");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd2DCluster */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   { ND::TFgdOnlyModule::TFgd2DCluster *p; p=(ND::TFgdOnlyModule::TFgd2DCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the algorithm..");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Charge-weighted position of the cluster.");
   G__memvar_setup((void*)((long)(&p->PCADirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"PCADirection=",0,"Primary PCA eigenvector, associated with the direction of the cluster.");
   G__memvar_setup((void*)((long)(&p->StartPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"StartPosition=",0,"Identified \"start\" position of the cluster, from extrapolating along PCADrection.");
   G__memvar_setup((void*)((long)(&p->EndPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"EndPosition=",0,"Identified \"end\" position of the cluster, from extrapolating along PCADirection.");
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,"Range of shower along PCADirection");
   G__memvar_setup((void*)((long)(&p->AvgHitTime)-(long)(p)),100,0,0,-1,-1,-1,1,"AvgHitTime=",0,"Average time of hits in the cluster");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The energy deposited in the cluster.");
   G__memvar_setup((void*)((long)(&p->NumHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NumHits=",0,"The number of hits contributing to this cluster.");
   G__memvar_setup((void*)((long)(&p->Trajectories)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"Trajectories=",0,"Map of true trajectory IDs to the number of G4 contributors that contributed to this cluster.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom in the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"The goodness of fit for the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The fit status.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSmrdReconModule */
static void G__setup_memvarNDcLcLTSmrdReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TSmrdReconModule::TSmrdReconHit */
static void G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdReconHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   { ND::TSmrdReconModule::TSmrdReconHit *p; p=(ND::TSmrdReconModule::TSmrdReconHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The reconstructed 4-position of the corresponding double ended ND::THit.");
   G__memvar_setup((void*)((long)(&p->PositionUncertainty)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionUncertainty=",0,"\\brief  The uncertainty on the reconstructed 4-position of the corresponding double ended ND::THit.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"The reconstructed charge of the corresponding double ended ND::THit.");
   G__memvar_setup((void*)((long)(&p->dZ)-(long)(p)),100,0,0,-1,-1,-1,1,"dZ=",0,"\\short The difference in Z between the combined ND::THit(double ended  bars)  and the first contributor ND::THit.");
   G__memvar_setup((void*)((long)(&p->dT)-(long)(p)),100,0,0,-1,-1,-1,1,"dT=",0,"\\short The difference between the reconstructed ND::THit times between  the two contributors.");
   G__memvar_setup((void*)((long)(&p->ContribCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"ContribCharge[2]=",0,"The reconstructed charges from each contributor of the double ended bar.");
   G__memvar_setup((void*)((long)(&p->Wall)-(long)(p)),105,0,0,-1,-1,-1,1,"Wall=",0,"The SMRD wall in which this the corresponding ND::THit resides. Is assigned a value from TSmrdReconModule::ESMRDWall.  Uses ND::TSMRDGeom::IsSMRDTopWall, ND::TSMRDGeom::IsSMRDBotoomWall, ND::TSMRDGeom::IsSMRDLeftWall and ND::TSMRDGeom::IsSMRDRightWall.");
   G__memvar_setup((void*)((long)(&p->Yoke)-(long)(p)),105,0,0,-1,-1,-1,1,"Yoke=",0,"The SMRD yoke number. ranges from 1(most upstream) to 8(most downstream).");
   G__memvar_setup((void*)((long)(&p->Layer)-(long)(p)),105,0,0,-1,-1,-1,1,"Layer=",0,"The SMRD ring number.  ranges from 1(most inner) to 6(most outer).");
   G__memvar_setup((void*)((long)(&p->Tower)-(long)(p)),105,0,0,-1,-1,-1,1,"Tower=",0,"The SMRD tower number. Tower 1 is left-top and numbers are assigned clockwise.");
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,-1,-1,1,"Counter=",0,"The SMRD scintillator number.  Each yoke has either 20-for vertical(SMRD Left/Right) walls, or 16 for  horizontal walls.");
   G__memvar_setup((void*)((long)(&p->RMM)-(long)(p)),104,0,0,-1,-1,-1,1,"RMM=",0,"The RMM Id of the channel corresponding to the first contributor hit.");
   G__memvar_setup((void*)((long)(&p->TFB)-(long)(p)),104,0,0,-1,-1,-1,1,"TFB=",0,"The TFB Id of the channel corresponding to the first contributor hit.");
   G__memvar_setup((void*)((long)(&p->IsInnerMatched)-(long)(p)),103,0,0,-1,-1,-1,1,"IsInnerMatched=",0,"Designates if the corresponding ND::THit was matched");
   G__memvar_setup((void*)((long)(&p->IsUsed)-(long)(p)),103,0,0,-1,-1,-1,1,"IsUsed=",0,"Designates if the corresponding ND::THit was used in a  reconstructed object.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSmrdReconModule::TSmrdIsoTrack */
static void G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   { ND::TSmrdReconModule::TSmrdIsoTrack *p; p=(ND::TSmrdReconModule::TSmrdIsoTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The Unique ID of the corresponding ND::TReconTrack, used for  global-subdetector matching.");
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"Name of the reconstruction algorithm.");
   G__memvar_setup((void*)((long)(&p->FrontPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPos=",0,"Position of the 'first' TTrackState of the corresponding  ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->FrontPosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosVariance=",0,"Variance on the position of the 'first' TTrackState of the  corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->BackPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPos=",0,"Position of the 'last' TTrackState of the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->BackPosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosVariance=",0,"Variance on the position of the 'last' TTrackState of the  corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"Direction of the TTrackState which is the state of the  corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"Variance on the direction the TTrackState which is the state of  the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"Number of ND::THits which are associated with the corresponding  ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"Number of TReconNodes which are constituents of the corresponding  ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The reported Status of the corresponding ND::TReconTrack.  Holds kSuccess if the ND::TReconTrack::fStatus has the kSuccess bit set.  Uses ND::TReconBase::CheckStatus to check this.");
   G__memvar_setup((void*)((long)(&p->KalmanStatus)-(long)(p)),105,0,0,-1,-1,-1,1,"KalmanStatus=",0,"Kalman filter refit result for the corresponding ND::TReconTrack.  Holds '1' if the algorithm was run and has Status kSuccess, otherwise  '0'");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The Number of Degrees of Freedom in the reconstruction  of the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The total reconstructed charge of the corresponding ND::TReconTrack.  Defaults to '-9999.0' if no ND::TRealDatum named 'totalCharge' is  found on the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->avgtime)-(long)(p)),100,0,0,-1,-1,-1,1,"avgtime=",0,"Average hit time of the corresponding ND::TReconTrack.  Defaults to '-9999.0' if no ND::TRealDatum named 'averageHitTime'  is found on the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,"The spacial distance between TSmrdIsoTrack::FrontPos and  TSmrdIsoTrack::BackPos.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"The reported reconstruction 'quality' of the corresponding  ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->ThetaAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"ThetaAngle=",0,"Polar coordinate theta of the TSmrdIsoTrack::Direction.");
   G__memvar_setup((void*)((long)(&p->PhiAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"PhiAngle=",0,"Polar coordinate phi of the TSmrdIsoTrack::Direction.");
   G__memvar_setup((void*)((long)(&p->TrueInitPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"TrueInitPos=",0,"For MC events: The true initial position of the corresponding  ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->TrueInitDet)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueInitDet=",0,"For MC events: The subdetector in which  TSmrdIsoTrack::TrueInitPos lies");
   G__memvar_setup((void*)((long)(&p->TrueFinalPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"TrueFinalPos=",0,"For MC events: The true final position of the corresponding  ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->TrueFinalDet)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueFinalDet=",0,"For MC events: The subdetector in which  TSmrdIsoTrack::TrueFinalPos lies");
   G__memvar_setup((void*)((long)(&p->TrueInitMom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"TrueInitMom=",0,"For MC events: The true initial momentum of the corresponding  ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->TrueId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueId=",0,"For MC events: The Id of the corresponding ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->TruePDG)-(long)(p)),105,0,0,-1,-1,-1,1,"TruePDG=",0,"For MC events: The PDG code of the true particle.");
   G__memvar_setup((void*)((long)(&p->TrueParentId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueParentId=",0,"For MC events: The Id of the true trajectory's parent  ND::TG4Trajectory");
   G__memvar_setup((void*)((long)(&p->TrueHitPurity)-(long)(p)),100,0,0,-1,-1,-1,1,"TrueHitPurity=",0,"For MC events: The 'cleanliness' of the ND::THits which make up  the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->TrueHitEff)-(long)(p)),100,0,0,-1,-1,-1,1,"TrueHitEff=",0,"For MC events: The 'completeness' of the ND::THits which make up  the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule */
static void G__setup_memvarNDcLcLTTrackerReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerVertex */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   { ND::TTrackerReconModule::TTrackerVertex *p; p=(ND::TTrackerReconModule::TTrackerVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"The quality of the fit. Ie. the Prob(chi2,ndof)");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerResult */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   { ND::TTrackerReconModule::TTrackerResult *p; p=(ND::TTrackerReconModule::TTrackerResult*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"Unique ID number to allow matching to Global Reconobject.");
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),105,0,0,-1,-1,-1,1,"Detectors=",0,"Detectors used");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"The quality of the fit.(probability(chi2,ndof))");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of hits.");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,"The number of constituents (tracks and pids) usedto build this track");
   G__memvar_setup((void*)((long)(&p->ConstitIdx)-(long)(p)),105,0,0,-1,-1,-1,1,"ConstitIdx[2]=",0,"Index into Constituents of the constituents usedto build this track");
   G__memvar_setup((void*)((long)(&p->NTotalConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NTotalConstituents=",0,"Number of all constituents, andconstituents-constituents...");
   G__memvar_setup((void*)((long)(&p->Constituents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"Constituents=",0,"All constituents, and constituents-constituents...");
   G__memvar_setup((void*)((long)(&p->isForward)-(long)(p)),103,0,0,-1,-1,-1,1,"isForward=",0,"Sense of object.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"The Charge (+-1)");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The deposited charge for the object (number of pe's)");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"The total length of the object in mm");
   G__memvar_setup((void*)((long)(&p->matchingFailure_flag)-(long)(p)),105,0,0,-1,-1,-1,1,"matchingFailure_flag=",0,"Flag a object where the TPC-FGD matchingfailed");
   G__memvar_setup((void*)((long)(&p->Likelihoods)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Likelihoods=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pids)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pids=",0,"the PID that goes with Likelihoods");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"track position 4-vector (x,y,z,t) in mm, ns");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,"track position variance 4-vectorvar(x),var(y),var(z),var(t) in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"track direction vector");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"track direction variance");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"track momentum MeV/c");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"track momentum MeV/c");
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,"information about the true particleassociated with this track");
   G__memvar_setup((void*)((long)(&p->NTPCs)-(long)(p)),105,0,0,-1,-1,-1,1,"NTPCs=",0,"Number of TPC tracks used to build this track");
   G__memvar_setup((void*)((long)(&p->TPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"TPC=",0,"Information about the TPC pids/tracks used to buildthis track");
   G__memvar_setup((void*)((long)(&p->NFGDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NFGDs=",0,"Number of FGD Specific objects");
   G__memvar_setup((void*)((long)(&p->FGD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"FGD=",0,"FGD objects associated with track");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"The number of nodes (fgd hits + tpc tracks)");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"Nodes=",0,"Kinematics of the track at each node in the track fit");
   G__memvar_setup((void*)((long)(&p->hackConstituentsObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent),-1,-1,1,"hackConstituentsObject=",0,"This is just here to foolTFile::MakeProject, not areal object.");
   G__memvar_setup((void*)((long)(&p->hackTPCTrack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack),-1,-1,1,"hackTPCTrack=",0,"This is just here to fool TFile::MakeProject,not a real object.");
   G__memvar_setup((void*)((long)(&p->hackFGDTrack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack),-1,-1,1,"hackFGDTrack=",0,"This is just here to fool TFile::MakeProject,not a real object.");
   G__memvar_setup((void*)((long)(&p->hackNodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode),-1,-1,1,"hackNodes=",0,"This is just here to fool TFile::MakeProject,not a real object.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrueParticle */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrueParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   { ND::TTrackerReconModule::TTrueParticle *p; p=(ND::TTrackerReconModule::TTrueParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,-1,-1,1,"ID=",0,"Trajectoy  Id");
   G__memvar_setup((void*)((long)(&p->Pur)-(long)(p)),100,0,0,-1,-1,-1,1,"Pur=",0,"The purity for matching");
   G__memvar_setup((void*)((long)(&p->Eff)-(long)(p)),100,0,0,-1,-1,-1,1,"Eff=",0,"The efficiency for matching");
   G__memvar_setup((void*)((long)(&p->Vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex),-1,-1,1,"Vertex=",0,"True vertex associated to this TrueParticle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrueVertex */
static void G__setup_memvarNDcLcLTTrueVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex));
   { ND::TTrueVertex *p; p=(ND::TTrueVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The position of the vertex");
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,-1,-1,1,"ID=",0,"The vertex ID from G4");
   G__memvar_setup((void*)((long)(&p->Pur)-(long)(p)),100,0,0,-1,-1,-1,1,"Pur=",0,"Purity of reconstructed - true vertex association");
   G__memvar_setup((void*)((long)(&p->Eff)-(long)(p)),100,0,0,-1,-1,-1,1,"Eff=",0,"Efficiency of vertex association of tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerConstituent */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerConstituent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   { ND::TTrackerReconModule::TTrackerConstituent *p; p=(ND::TTrackerReconModule::TTrackerConstituent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),105,0,0,-1,-1,-1,1,"Detectors=",0,"Detectors used");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"The quality of the fit.(probability)");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"The number of nodes");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of hits.");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,"The number of constituents this constituent ismade of");
   G__memvar_setup((void*)((long)(&p->ConstitIdx)-(long)(p)),105,0,0,-1,-1,-1,1,"ConstitIdx[2]=",0,"Index into Constituents inTTrackerResult::Constituents of this constituent'sconstituents");
   G__memvar_setup((void*)((long)(&p->isForward)-(long)(p)),103,0,0,-1,-1,-1,1,"isForward=",0,"Sense of track");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"The Charge of this constituent (+-1)");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The deposited charge for the constituent object(number of pe's).");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"The 4-vector position at the front ofthe track (x,y,z,t) in mm, ns");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The 4-vector position of the back of thetrack (x,y,z,t) in mm, ns");
   G__memvar_setup((void*)((long)(&p->FrontVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontVariance=",0,"The 4-vector position variance at thefront of the track(var(x),var(y),var(z),var(t)) in mm^2,ns^2");
   G__memvar_setup((void*)((long)(&p->BackVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackVariance=",0,"The 4-vector position variance at theback of the track(var(x),var(y),var(z),var(t)) in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,"The direction vector at the front of the track");
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,"The direction vector at the back of the track");
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,"the momentum at the front of the track in MeV/c");
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,"the momentum at the back of the track iin MeV/c");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"position 4-vector (x,y,z,t) in mm, ns");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,"position variance 4-vector(var(x),var(y),var(z),var(t)) in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"direction vector");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"direction variance vector");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"momentum MeV/c");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"uncertainty in momentum MeV/c");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTPCTrack */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTPCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   { ND::TTrackerReconModule::TTPCTrack *p; p=(ND::TTrackerReconModule::TTPCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"Unique ID number to allow matching to Global Reconobject.");
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,"TPC number 1, 2 or 3");
   G__memvar_setup((void*)((long)(&p->Ndof)-(long)(p)),105,0,0,-1,-1,-1,1,"Ndof=",0,"Number of degrees of freedom in TPC fit");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"TPC chi2 calculated after likelihood fit");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"number of clusters used in TPC fit");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"Momentum of the TPC pid in MeV/c");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"Uncertainty in the Momentum in MeV/c from theTPC pid");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"Charge from the TPC pid (+1, or -1)");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position at which kinematics are reported in mm, ns");
   G__memvar_setup((void*)((long)(&p->PositionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionVariance=",0,"Variance in Position  in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"TPC pid direction vector in mm");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"TPC pid variance in vector direction in mm^2");
   G__memvar_setup((void*)((long)(&p->NTrun)-(long)(p)),100,0,0,-1,-1,-1,1,"NTrun=",0,"70% of the number of clusters");
   G__memvar_setup((void*)((long)(&p->Ccorr)-(long)(p)),100,0,0,-1,-1,-1,1,"Ccorr=",0,"Corrected truncated mean charge deposit in PID");
   G__memvar_setup((void*)((long)(&p->PullEle)-(long)(p)),100,0,0,-1,-1,-1,1,"PullEle=",0,"Pull for TPC pid electron hypothesis");
   G__memvar_setup((void*)((long)(&p->PullMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullMuon=",0,"Pull for TPC pid muon hypothesis");
   G__memvar_setup((void*)((long)(&p->PullPion)-(long)(p)),100,0,0,-1,-1,-1,1,"PullPion=",0,"Pull for TPC pid pion hypothesis");
   G__memvar_setup((void*)((long)(&p->PullKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullKaon=",0,"Pull for TPC pid kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->PullProton)-(long)(p)),100,0,0,-1,-1,-1,1,"PullProton=",0,"Pull for TPC pid proton hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpEle)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpEle=",0,"Estimated dE/dx for electron hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpMuon=",0,"Estimated dE/dx for muon hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpPion)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpPion=",0,"Estimated dE/dx for pion hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpKaon=",0,"Estimated dE/dx for kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpProton)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpProton=",0,"Estimated dE/dx for proton hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaEle)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaEle=",0,"Sigma estimated width of TPC pid electron hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaMuon=",0,"Sigma estimated width of TPC pid muon hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaPion)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaPion=",0,"Sigma estimated width of TPC pid pion hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaKaon=",0,"Sigma estimated width of TPC pid kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaProton)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaProton=",0,"Sigma estimated width of TPC pid proton hypothesis");
   G__memvar_setup((void*)((long)(&p->Sigma0)-(long)(p)),100,0,0,-1,-1,-1,1,"Sigma0=",0,"TPC track diffusion sigma0 parameter");
   G__memvar_setup((void*)((long)(&p->Sigma1)-(long)(p)),100,0,0,-1,-1,-1,1,"Sigma1=",0,"TPC track diffusion sigma1 parameter");
   G__memvar_setup((void*)((long)(&p->Sigma2)-(long)(p)),100,0,0,-1,-1,-1,1,"Sigma2=",0,"TPC track diffusion sigma2 parameter");
   G__memvar_setup((void*)((long)(&p->MeanDrift)-(long)(p)),100,0,0,-1,-1,-1,1,"MeanDrift=",0,"TPC track mean drift value used in diffusion model");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"TrDirection=",0,"track direction vector");
   G__memvar_setup((void*)((long)(&p->TrDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"TrDirectionVar=",0,"variance in track direction vector");
   G__memvar_setup((void*)((long)(&p->TrCurvature)-(long)(p)),100,0,0,-1,-1,-1,1,"TrCurvature=",0,"track curvature, units are 1/mm");
   G__memvar_setup((void*)((long)(&p->TrCurvatureVar)-(long)(p)),100,0,0,-1,-1,-1,1,"TrCurvatureVar=",0,"variance in track direction vector, units are(1mm)^2");
   G__memvar_setup((void*)((long)(&p->HasExtrapolation)-(long)(p)),103,0,0,-1,-1,-1,1,"HasExtrapolation=",0,"extrapolation method of vertex is calculated ornot");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexXX)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexXX=",0,"for xbar vertex, this is x coordinate in mm");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexZX)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexZX=",0,"for xbar vertex, this is z coordinate in mm");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexYY)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexYY=",0,"for ybar vertex, this is y coordinate in mm");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexZY)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexZY=",0,"for ybar vertex, this is z coordinate in mm");
   G__memvar_setup((void*)((long)(&p->EnteringFGD)-(long)(p)),103,0,0,-1,-1,-1,1,"EnteringFGD=",0,"not sure");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TFGDTrack */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTFGDTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   { ND::TTrackerReconModule::TFGDTrack *p; p=(ND::TTrackerReconModule::TFGDTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"Unique ID number to allow matching to Global Reconobject.");
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,"FGD number 1 or 2");
   G__memvar_setup((void*)((long)(&p->Ndof)-(long)(p)),105,0,0,-1,-1,-1,1,"Ndof=",0,"Number of degrees of freedom in FGD track fit");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"Chi2 of the FGD track fit the FGD track starting position vector coordinates in order x,y,z,t where x,y,z are in mm, t is in ns");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerNode */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   { ND::TTrackerReconModule::TTrackerNode *p; p=(ND::TTrackerReconModule::TTrackerNode*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"The Charge (+-1)");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The Energy Deposit (number of pe's)");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position 4-vector (at node) x,y,z,t in mm, ns");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,"Position variance 4-vector (at node)var(x),var(y),var(z),var(t) in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"Direction vector (at node)");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"Direction variance vector (at node)");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"Track Momentum (at node) in MeV/c");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"Track Momentum uncertainty (at node) in MeV/c");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackOther */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackOther(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   { ND::TTrackerReconModule::TTrackOther *p; p=(ND::TTrackerReconModule::TTrackOther*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,"Detector used (1,2,3 for TPC, or 4,5 for FGD?)");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of hits.");
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"Hits=",0,"The hits");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The deposited charge for the object.");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"The position of the track at itsupstream-most end (x,y,z,t) in mm, ns");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The position of the track at itsdownstream-most end     (x,y,z,t) in mm,ns");
   G__memvar_setup((void*)((long)(&p->hackHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit),-1,-1,1,"hackHits=",0,"This is just here to fool TFile::MakeProject, nota real object.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TUnusedHit */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTUnusedHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   { ND::TTrackerReconModule::TUnusedHit *p; p=(ND::TTrackerReconModule::TUnusedHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->TotalCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"TotalCharge=",0,"Deposited charge (the hit EDeposit)");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Position=",0,"The position of the hit component 0=x 1=y 2=z in mm");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Variance=",0,"The position variance in mm");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),100,0,0,-1,-1,-1,1,"Time=",0,"Time of the hit in ns");
   G__memvar_setup((void*)((long)(&p->TimeUnc)-(long)(p)),100,0,0,-1,-1,-1,1,"TimeUnc=",0,"Time Uncertainty of hit in ns");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule */
static void G__setup_memvarNDcLcLTGlobalReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TTpcPID */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTTpcPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID));
   { ND::TGlobalReconModule::TTpcPID *p; p=(ND::TGlobalReconModule::TTpcPID*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),107,0,0,-1,-1,-1,1,"Detectors=",0,"Detectors used, defined according to the algorithm in GetDetectorNumber.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit, from: object->CheckStatus(object->kSuccess).");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"The number of nodes");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of hits.");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,"The number of constituents.");
   G__memvar_setup((void*)((long)(&p->isForward)-(long)(p)),103,0,0,-1,-1,-1,1,"isForward=",0,"Sense of object.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"The Charge");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The deposited charge for the object.");
   G__memvar_setup((void*)((long)(&p->Cone)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Cone=",0,"The opening angles of the cone (only for showers)");
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),100,0,0,-1,-1,-1,1,"Width=",0,"The width of the shower (perpendicular to the direction)");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"The total length of the object");
   G__memvar_setup((void*)((long)(&p->Likelihoods)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Likelihoods=",0,"/ the PID likelihoods for combined PID");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"The position of the object.");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The position of the object.");
   G__memvar_setup((void*)((long)(&p->FrontPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPositionVar=",0,"The position variance;");
   G__memvar_setup((void*)((long)(&p->BackPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPositionVar=",0,"The position variance;");
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,"The direction of the object.");
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,"The direction of the object.");
   G__memvar_setup((void*)((long)(&p->FrontDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirectionVar=",0,"The direction variance of the object.");
   G__memvar_setup((void*)((long)(&p->BackDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirectionVar=",0,"The direction variance of the object.");
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,"the momentum of the object");
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,"the momentum of the object");
   G__memvar_setup((void*)((long)(&p->FrontMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentumError=",0,"the error on the momentum of the object");
   G__memvar_setup((void*)((long)(&p->BackMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentumError=",0,"the error on the momentum of the object");
   G__memvar_setup((void*)((long)(&p->PositionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionAtTrueVertex=",0,"Position at true vertex.");
   G__memvar_setup((void*)((long)(&p->PositionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionVarAtTrueVertex=",0,"The position variance at the true vertex.");
   G__memvar_setup((void*)((long)(&p->DirectionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionAtTrueVertex=",0,"Direction at the true vertex.");
   G__memvar_setup((void*)((long)(&p->DirectionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVarAtTrueVertex=",0,"The direction variance at the true vertex.");
   G__memvar_setup((void*)((long)(&p->MomentumAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumAtTrueVertex=",0,"Momentum at the true vertex.");
   G__memvar_setup((void*)((long)(&p->MomentumErrorAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumErrorAtTrueVertex=",0,"The momentum variance at the true vertex.");
   G__memvar_setup((void*)((long)(&p->EntrancePosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR),G__defined_typename("vector<TLorentzVector*>"),-1,1,"EntrancePosition=",0,"the position of the object at the entrance of each subdetector");
   G__memvar_setup((void*)((long)(&p->ExitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR),G__defined_typename("vector<TLorentzVector*>"),-1,1,"ExitPosition=",0,"the position of the object at the exit of each subdetector");
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,"The true particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrueParticle */
static void G__setup_memvarNDcLcLTTrueParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle));
   { ND::TTrueParticle *p; p=(ND::TTrueParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,-1,-1,1,"ID=",0,"G4 Trajectory Id.");
   G__memvar_setup((void*)((long)(&p->Pur)-(long)(p)),100,0,0,-1,-1,-1,1,"Pur=",0,"The purity for matching the rec particle with the true particle.");
   G__memvar_setup((void*)((long)(&p->Eff)-(long)(p)),100,0,0,-1,-1,-1,1,"Eff=",0,"The efficiency for matching the rec particle with the true particle.");
   G__memvar_setup((void*)((long)(&p->Vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex),-1,-1,1,"Vertex=",0,"True vertex associated to this TrueParticle.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalVertex */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   { ND::TGlobalReconModule::TGlobalVertex *p; p=(ND::TGlobalReconModule::TGlobalVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PrimaryIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"PrimaryIndex=",0,"The index of the corresponding primary vertex");
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"The quality of the fit.  For Vertices created using -O TGlobalReconModule=UseECalVertices  the quality denotes whether all constituents were correctly found  1: for all found  0: for not all found  Not finding them is an internal TGlobalReconModule error and these  vertices should not be trusted.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The position of the vertex.");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,"The position variance;");
   G__memvar_setup((void*)((long)(&p->NTrueVertices)-(long)(p)),105,0,0,-1,-1,-1,1,"NTrueVertices=",0,"The true vertex");
   G__memvar_setup((void*)((long)(&p->TrueVertices)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"TrueVertices=",0,"The true vertex");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,"Constituent tracks");
   G__memvar_setup((void*)((long)(&p->Constituents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"Constituents=",0,"Constituent tracks");
   G__memvar_setup((void*)((long)(&p->hackTrueVertexObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex),-1,-1,1,"hackTrueVertexObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)((long)(&p->hackVertexConstituentObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent),-1,-1,1,"hackVertexConstituentObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TVertexConstituent */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTVertexConstituent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   { ND::TGlobalReconModule::TVertexConstituent *p; p=(ND::TGlobalReconModule::TVertexConstituent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),105,0,0,-1,-1,-1,1,"Charge=",0,"Charge of the constituent track");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"Quality (chi2) of the constituent track");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Momentum=",0,"3-momentum of the constituent track");
   G__memvar_setup((void*)((long)(&p->PID)-(long)(p)),105,0,0,-1,-1,-1,1,"PID=",0,"The TGlobalPID of the constituent track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TFgdTimeBin */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTFgdTimeBin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   { ND::TGlobalReconModule::TFgdTimeBin *p; p=(ND::TGlobalReconModule::TFgdTimeBin*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->minTime)-(long)(p)),100,0,0,-1,-1,-1,1,"minTime=",0,"Bin start time.");
   G__memvar_setup((void*)((long)(&p->maxTime)-(long)(p)),100,0,0,-1,-1,-1,1,"maxTime=",0,"Bin end time.");
   G__memvar_setup((void*)((long)(&p->nHits)-(long)(p)),105,0,0,-1,-1,-1,1,"nHits[2]=",0,"Number of hits in FGD1 (nHits[0]), and 2 (nHits[1])");
   G__memvar_setup((void*)((long)(&p->rawChargeSum)-(long)(p)),100,0,0,-1,-1,-1,1,"rawChargeSum[2]=",0,"Summed hit charge in FGD1 (rawChargeSum[0]), and 2 (rawChargeSum[1])");
   G__memvar_setup((void*)((long)(&p->chargePerLayer)-(long)(p)),102,0,0,-1,-1,-1,1,"chargePerLayer[2][30]=",0,"\\brief Summed hit charge for layer x in FGD1 (chargePerLayer[0][x]),  and 2 (chargePerLayer[1][x])");
   G__memvar_setup((void*)((long)(&p->chargeWeightedPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"chargeWeightedPos[2]=",0,"\\brief Charge weighted average hit position in FGD1 chargeWeightedPos[0]) and 2 (chargeWeightedPos[1])");
   G__memvar_setup((void*)((long)(&p->FGD1OutermostHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),-1,-1,1,"FGD1OutermostHits=",0,"A named collection of the outermost hits in X,Y, and Z from FGD1");
   G__memvar_setup((void*)((long)(&p->FGD2OutermostHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),-1,-1,1,"FGD2OutermostHits=",0,"A named collection of the outermost hits in X,Y, and Z from FGD2");
   G__memvar_setup((void*)((long)(&p->FGD1HitLayer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"FGD1HitLayer=",0,"Vector to store the layer number of each hit in FGD1");
   G__memvar_setup((void*)((long)(&p->FGD1HitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD1HitPosition=",0,"Vector to store the X or Y position of each hit in FGD1");
   G__memvar_setup((void*)((long)(&p->FGD1HitQ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD1HitQ=",0,"Vector to store the charge of each hit in FGD1");
   G__memvar_setup((void*)((long)(&p->FGD1HitTrueE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD1HitTrueE=",0,"Vector to store the true edeposit of each hit in FGD1");
   G__memvar_setup((void*)((long)(&p->FGD1HitT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD1HitT=",0,"Vector to store the time of each hit in FGD1");
   G__memvar_setup((void*)((long)(&p->FGD1HitTrajID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"FGD1HitTrajID=",0,"Vector to store the ID of the Trajectory that created the hit in FGD1");
   G__memvar_setup((void*)((long)(&p->FGD2HitLayer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"FGD2HitLayer=",0,"Vector to store the layer number of each hit in FGD2");
   G__memvar_setup((void*)((long)(&p->FGD2HitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD2HitPosition=",0,"Vector to store the X or Y position of each hit in FGD2");
   G__memvar_setup((void*)((long)(&p->FGD2HitQ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD2HitQ=",0,"Vector to store the charge of each hit in FGD2");
   G__memvar_setup((void*)((long)(&p->FGD2HitTrueE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD2HitTrueE=",0,"Vector to store the true edeposit of each hit in FGD2");
   G__memvar_setup((void*)((long)(&p->FGD2HitT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FGD2HitT=",0,"Vector to store the time of each hit in FGD2");
   G__memvar_setup((void*)((long)(&p->FGD2HitTrajID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"FGD2HitTrajID=",0,"Vector to store the ID of the Trajectory that created the hit in FGD1");
   G__memvar_setup((void*)((long)(&p->NFGD1Unused)-(long)(p)),105,0,0,-1,-1,-1,1,"NFGD1Unused=",0,"Number of hits unused in FGD1");
   G__memvar_setup((void*)((long)(&p->FGD1Unused)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"FGD1Unused=",0,"The vector unused hits in FGD1");
   G__memvar_setup((void*)((long)(&p->NFGD2Unused)-(long)(p)),105,0,0,-1,-1,-1,1,"NFGD2Unused=",0,"Number of hits unused in FGD2");
   G__memvar_setup((void*)((long)(&p->FGD2Unused)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"FGD2Unused=",0,"The vector unused hits in FGD2");
   G__memvar_setup((void*)((long)(&p->g4ID)-(long)(p)),105,0,0,-1,-1,-1,1,"g4ID=",0,"The ID for the G4 trajectory that contributed most to this time bin.");
   G__memvar_setup((void*)((long)(&p->hackFGDUnused)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hackFGDUnused=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TOutermostHits */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTOutermostHits(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   { ND::TGlobalReconModule::TOutermostHits *p; p=(ND::TGlobalReconModule::TOutermostHits*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hitMinX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMinX=",0,"Hit with lowest X position.");
   G__memvar_setup((void*)((long)(&p->hitMaxX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMaxX=",0,"Hit with highest X position.");
   G__memvar_setup((void*)((long)(&p->hitMinY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMinY=",0,"Hit with lowest Y position.");
   G__memvar_setup((void*)((long)(&p->hitMaxY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMaxY=",0,"Hit with highest Y position.");
   G__memvar_setup((void*)((long)(&p->hitMinZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMinZ=",0,"Hit with lowest Z position.");
   G__memvar_setup((void*)((long)(&p->hitMaxZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMaxZ=",0,"Hit with highest Z position.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalHit */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   { ND::TGlobalReconModule::TGlobalHit *p; p=(ND::TGlobalReconModule::TGlobalHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"Deposited charge");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),100,0,0,-1,-1,-1,1,"Time=",0,"Hit time [ns]");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Position=",0,"Hit position in global ND coordinates [mm]");
   G__memvar_setup((void*)((long)(&p->PositionError)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"PositionError=",0,"The variance on ND::TGlobalReconModule::TGlobalHit::Position [mm]");
   G__memvar_setup((void*)((long)(&p->Type)-(long)(p)),105,0,0,-1,-1,-1,1,"Type=",0,"The hit 'type': (0=X,1=Y,2=Z)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalPID */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   { ND::TGlobalReconModule::TGlobalPID *p; p=(ND::TGlobalReconModule::TGlobalPID*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"Unique identifier for global recon objects (needed fro broken association)");
   G__memvar_setup((void*)((long)(&p->BrokenUniqueIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"BrokenUniqueIDs=",0,"the broken partners unique IDs");
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),107,0,0,-1,-1,-1,1,"Detectors=",0,"Detectors used");
   G__memvar_setup((void*)((long)(&p->DetectorUsed)-(long)(p)),103,0,0,-1,-1,-1,1,"DetectorUsed[19]=",0,"Detectors used. Index order from 0 to 18: [TPC1, TPC2, TPC3, FGD1, FGD2,P0D, DSECal, TopSMRD, BottomSMRD, LeftSMRD, RightSMRD, TopPECal, BottomPECal, LeftPECal, RightPECal, TopTECal, BottomTECal, LeftTECal, RightTECal].");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"The number of nodes.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of hits.");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,"The number of constituents.");
   G__memvar_setup((void*)((long)(&p->isForward)-(long)(p)),103,0,0,-1,-1,-1,1,"isForward=",0,"Sense of object.");
   G__memvar_setup((void*)((long)(&p->SenseOK)-(long)(p)),103,0,0,-1,-1,-1,1,"SenseOK=",0,"Sense of object.");
   G__memvar_setup((void*)((long)(&p->IsCurvBack)-(long)(p)),103,0,0,-1,-1,-1,1,"IsCurvBack=",0,"A curving-back object");
   G__memvar_setup((void*)((long)(&p->IsFgdECalIncremental)-(long)(p)),103,0,0,-1,-1,-1,1,"IsFgdECalIncremental=",0,"A track created by FGD-ECal matching algorithm");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"The Charge");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The deposited charge for the object.");
   G__memvar_setup((void*)((long)(&p->Cone)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Cone=",0,"The opening angles of the cone (only for showers)");
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),100,0,0,-1,-1,-1,1,"Width=",0,"The width of the shower (perpendicular to the direction)");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"The length of the track or shower (RMS)");
   G__memvar_setup((void*)((long)(&p->ParticleIds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ParticleIds=",0,"the PDG codes obtained in the recon combined PID");
   G__memvar_setup((void*)((long)(&p->PIDWeights)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PIDWeights=",0,"the PID likelihoods for combined PID");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"The position of the object.");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The position of the object");
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,"The direction of the object.");
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,"The direction of the object.");
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,"the momentum of the object");
   G__memvar_setup((void*)((long)(&p->FrontCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontCharge=",0,"the charge of the object at the first state");
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,"the momentum of the object");
   G__memvar_setup((void*)((long)(&p->BackCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"BackCharge=",0,"the momentum of the object at the back state");
   G__memvar_setup((void*)((long)(&p->FrontMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentumError=",0,"the error on the momentum of the object");
   G__memvar_setup((void*)((long)(&p->BackMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentumError=",0,"the error on the momentum of the object");
   G__memvar_setup((void*)((long)(&p->FrontStateCov)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontStateCov[7][7]=",0,"full covariance matrix for front state: pos,  dir, qp");
   G__memvar_setup((void*)((long)(&p->BackStateCov)-(long)(p)),100,0,0,-1,-1,-1,1,"BackStateCov[7][7]=",0,"full covariance matrix for last state: pos, dir, qp");
   G__memvar_setup((void*)((long)(&p->RangeMomentumMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumMuon=",0,"the momentum by range for the muon hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumMuonFlip)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumMuonFlip=",0,"the momentum by range for the flipped muon hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumPion)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumPion=",0,"the momentum by range for the pion hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumPionFlip)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumPionFlip=",0,"the momentum by range for the flipped pion hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumElectron)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumElectron=",0,"the momentum by range for the electron hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumElectronFlip)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumElectronFlip=",0,"the momentum by range for the flipped electron hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumProton)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumProton=",0,"the momentum by range for the proton hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumProtonFlip)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumProtonFlip=",0,"the momentum by range for the flipped proton hypothesis");
   G__memvar_setup((void*)((long)(&p->RangeMomentumEndToTPCMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumEndToTPCMuon=",0,"the momentum by range for the muon hypothesis (from end to a TPC)");
   G__memvar_setup((void*)((long)(&p->RangeMomentumEndToTPCPion)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumEndToTPCPion=",0,"the momentum by range for the pion hypothesis (from end to a TPC)");
   G__memvar_setup((void*)((long)(&p->RangeMomentumEndToTPCElectron)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumEndToTPCElectron=",0,"the momentum by range for the electron hypothesis (from end to a TPC)");
   G__memvar_setup((void*)((long)(&p->RangeMomentumEndToTPCProton)-(long)(p)),100,0,0,-1,-1,-1,1,"RangeMomentumEndToTPCProton=",0,"the momentum by range for the proton hypothesis (from end to a TPC)");
   G__memvar_setup((void*)((long)(&p->NodeTimes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgR),G__defined_typename("vector<pair<int,TVector2> >"),-1,1,"NodeTimes=",0,"vector of pairs, sub-detecor number and time-stamps of edge nodes in this subdetector");
   G__memvar_setup((void*)((long)(&p->PositionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionAtTrueVertex=",0,"Position at the true vertex.");
   G__memvar_setup((void*)((long)(&p->DirectionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionAtTrueVertex=",0,"Direction at the true vertex.");
   G__memvar_setup((void*)((long)(&p->MomentumAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumAtTrueVertex=",0,"Momentum at the true vertex.");
   G__memvar_setup((void*)((long)(&p->MomentumErrorAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumErrorAtTrueVertex=",0,"Error of the momentum at the true vertex.");
   G__memvar_setup((void*)((long)(&p->ChargeAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"ChargeAtTrueVertex=",0,"Charge at the true vertex.");
   G__memvar_setup((void*)((long)(&p->StateCovAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"StateCovAtTrueVertex[7][7]=",0,"Full covariance matrix for the state: pos,  dir, qp at the true vertex.");
   G__memvar_setup((void*)((long)(&p->EntranceOK)-(long)(p)),105,0,0,-1,-1,-1,1,"EntranceOK[25]=",0,"Status of the subdetector entrance.");
   G__memvar_setup((void*)((long)(&p->ExitOK)-(long)(p)),105,0,0,-1,-1,-1,1,"ExitOK[25]=",0,"Status of the subdetector exit.");
   G__memvar_setup((void*)((long)(&p->EntrancePosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"EntrancePosition[25]=",0,"The position of the object at the entrance of each subdetector.");
   G__memvar_setup((void*)((long)(&p->ExitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"ExitPosition[25]=",0,"The position of the object at the exit of each subdetector.");
   G__memvar_setup((void*)((long)(&p->EntranceDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"EntranceDirection[25]=",0,"The direction of the object at the entrance of each subdetector volume.");
   G__memvar_setup((void*)((long)(&p->ExitDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ExitDirection[25]=",0,"The direction of the object at the exit of each subdetector.");
   G__memvar_setup((void*)((long)(&p->EntranceMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"EntranceMomentum[25]=",0,"The momentum of the object at the entrance of each subdetector.");
   G__memvar_setup((void*)((long)(&p->ExitMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"ExitMomentum[25]=",0,"The momentum of the object at the exit of each subdetector.");
   G__memvar_setup((void*)((long)(&p->EntrancePositionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"EntrancePositionErr[25]=",0,"The error of the position of the object at the entrance of each subdetector.");
   G__memvar_setup((void*)((long)(&p->ExitPositionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"ExitPositionErr[25]=",0,"The error of the position of the object at the exit of each subdetector.");
   G__memvar_setup((void*)((long)(&p->EntranceDirectionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"EntranceDirectionErr[25]=",0,"The error of the direction of the object at the entrance of each subdetector.");
   G__memvar_setup((void*)((long)(&p->ExitDirectionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ExitDirectionErr[25]=",0,"The error of the direction of the object at the exit of each subdetector.");
   G__memvar_setup((void*)((long)(&p->EntranceMomentumErr)-(long)(p)),100,0,0,-1,-1,-1,1,"EntranceMomentumErr[25]=",0,"The error of the momentum of the object at the entrance of each subdetector.");
   G__memvar_setup((void*)((long)(&p->ExitMomentumErr)-(long)(p)),100,0,0,-1,-1,-1,1,"ExitMomentumErr[25]=",0,"The error of the momentum of the object at the exit of each subdetector.");
   G__memvar_setup((void*)((long)(&p->NHitsSaved)-(long)(p)),105,0,0,-1,-1,-1,1,"NHitsSaved=",0,"Number of entries in the HitsSaved array.");
   G__memvar_setup((void*)((long)(&p->HitsSaved)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"HitsSaved=",0,"the two first and two last hits (TGlobalHit).");
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,"The true particle");
   G__memvar_setup((void*)((long)(&p->NTRACKERs)-(long)(p)),105,0,0,-1,-1,-1,1,"NTRACKERs=",0,"Number of Tracker objects.");
   G__memvar_setup((void*)((long)(&p->TRACKER)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"TRACKER=",0,"Tracker specific variables.");
   G__memvar_setup((void*)((long)(&p->NTPCs)-(long)(p)),105,0,0,-1,-1,-1,1,"NTPCs=",0,"Number of TPC objects.");
   G__memvar_setup((void*)((long)(&p->TPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"TPC=",0,"TPC specific variables.");
   G__memvar_setup((void*)((long)(&p->NFGDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NFGDs=",0,"Number of FGD objects.");
   G__memvar_setup((void*)((long)(&p->FGD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"FGD=",0,"FGD specific variables.");
   G__memvar_setup((void*)((long)(&p->NECALs)-(long)(p)),105,0,0,-1,-1,-1,1,"NECALs=",0,"Number of ECAL objects.");
   G__memvar_setup((void*)((long)(&p->NDsECALs)-(long)(p)),105,0,0,-1,-1,-1,1,"NDsECALs=",0,"Number of DsECAL objects.");
   G__memvar_setup((void*)((long)(&p->NTrECALs)-(long)(p)),105,0,0,-1,-1,-1,1,"NTrECALs=",0,"Number of TrECAL objects.");
   G__memvar_setup((void*)((long)(&p->ECAL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"ECAL=",0,"ECAL specific variables.");
   G__memvar_setup((void*)((long)(&p->NP0DECALs)-(long)(p)),105,0,0,-1,-1,-1,1,"NP0DECALs=",0,"Number of P0DECAL objects.");
   G__memvar_setup((void*)((long)(&p->P0DECAL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"P0DECAL=",0,"P0DECAL specific variables.");
   G__memvar_setup((void*)((long)(&p->NP0Ds)-(long)(p)),105,0,0,-1,-1,-1,1,"NP0Ds=",0,"Number of P0D objects.");
   G__memvar_setup((void*)((long)(&p->P0D)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"P0D=",0,"P0D specific variables.");
   G__memvar_setup((void*)((long)(&p->NSMRDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NSMRDs=",0,"Number of SMRD objects.");
   G__memvar_setup((void*)((long)(&p->SMRD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"SMRD=",0,"SMRD specific variables.");
   G__memvar_setup((void*)((long)(&p->NAlternates)-(long)(p)),105,0,0,-1,-1,-1,1,"NAlternates=",0,"Number of entries in the alternate hypotheses list.");
   G__memvar_setup((void*)((long)(&p->Alternates)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClonesArray),-1,-1,1,"Alternates=",0,"List of alternate hypotheses");
   G__memvar_setup((void*)((long)(&p->TPCGasPatternIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TPCGasPatternIDs=",0,"The IDs of the TREx patterns which contributed to the object");
   G__memvar_setup((void*)((long)(&p->TPCGasPathIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TPCGasPathIDs=",0,"The IDs of the TREx paths which contributed to the object");
   G__memvar_setup((void*)((long)(&p->TPCGasJunctionIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TPCGasJunctionIDs=",0,"The IDs of the TREx junctions which contributed to the object");
   G__memvar_setup((void*)((long)(&p->hackTPCObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),-1,-1,1,"hackTPCObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)((long)(&p->hackFGDObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),-1,-1,1,"hackFGDObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)((long)(&p->hackECALObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),-1,-1,1,"hackECALObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)((long)(&p->hackP0DObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),-1,-1,1,"hackP0DObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)((long)(&p->hackSMRDObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),-1,-1,1,"hackSMRDObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)((long)(&p->hackTrackerObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),-1,-1,1,"hackTrackerObject=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)((long)(&p->hackGlobalPIDAlternate)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate),-1,-1,1,"hackGlobalPIDAlternate=",0,"This is just here to fool TFile::MakeProject, not a real object.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TTPCObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   { ND::TGlobalReconModule::TTPCObject *p; p=(ND::TGlobalReconModule::TTPCObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"Charge from the TPC pid (+1, or -1)");
   G__memvar_setup((void*)((long)(&p->NTrun)-(long)(p)),100,0,0,-1,-1,-1,1,"NTrun=",0,"70% of the number of cluster");
   G__memvar_setup((void*)((long)(&p->Ccorr)-(long)(p)),100,0,0,-1,-1,-1,1,"Ccorr=",0,"Corrected truncated mean charge deposit in PID");
   G__memvar_setup((void*)((long)(&p->PullEle)-(long)(p)),100,0,0,-1,-1,-1,1,"PullEle=",0,"Pull for TPC pid electron hypothesis");
   G__memvar_setup((void*)((long)(&p->PullMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullMuon=",0,"Pull for TPC pid muon hypothesis");
   G__memvar_setup((void*)((long)(&p->PullPion)-(long)(p)),100,0,0,-1,-1,-1,1,"PullPion=",0,"Pull for TPC pid pion hypothesis");
   G__memvar_setup((void*)((long)(&p->PullKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullKaon=",0,"Pull for TPC pid kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->PullProton)-(long)(p)),100,0,0,-1,-1,-1,1,"PullProton=",0,"Pull for TPC pid proton hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpEle)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpEle=",0,"Estimated dE/dx for electron hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpMuon=",0,"Estimated dE/dx for muon hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpPion)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpPion=",0,"Estimated dE/dx for pion hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpKaon=",0,"Estimated dE/dx for kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpProton)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpProton=",0,"Estimated dE/dx for proton hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaEle)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaEle=",0,"Sigma estimated width of TPC pid electron hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaMuon=",0,"Sigma estimated width of TPC pid muon hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaPion)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaPion=",0,"Sigma estimated width of TPC pid pion hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaKaon=",0,"Sigma estimated width of TPC pid kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaProton)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaProton=",0,"Sigma estimated width of TPC pid proton hypothesis");
   G__memvar_setup((void*)((long)(&p->T0Source)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"T0Source=",0,"The T0Source, the values are defined in TTPCFitStatusBranch.hxx, the TTPCT0Source enumeration.");
   G__memvar_setup((void*)((long)(&p->NHorRows)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"NHorRows=",0,"The number of horizontal clusters in the track");
   G__memvar_setup((void*)((long)(&p->NVerRows)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"NVerRows=",0,"The number of vertical clusters in the track");
   G__memvar_setup((void*)((long)(&p->NbFittedVerticalClusters)-(long)(p)),105,0,0,-1,-1,-1,1,"NbFittedVerticalClusters=",0,"The number of vertical clusters contributed to the fit,  TREx");
   G__memvar_setup((void*)((long)(&p->NbFittedHorizontalClusters)-(long)(p)),105,0,0,-1,-1,-1,1,"NbFittedHorizontalClusters=",0,"The number of horizontal clusters contributed to the fit,  TREx");
   G__memvar_setup((void*)((long)(&p->PDist)-(long)(p)),100,0,0,-1,-1,-1,1,"PDist=",0,"Placeholder for momentum of BField refit.");
   G__memvar_setup((void*)((long)(&p->PEField)-(long)(p)),100,0,0,-1,-1,-1,1,"PEField=",0,"Placeholder for momentum of EField refit.");
   G__memvar_setup((void*)((long)(&p->TPCLength)-(long)(p)),100,0,0,-1,-1,-1,1,"TPCLength=",0,"TPC track length.");
   G__memvar_setup((void*)((long)(&p->TrackType)-(long)(p)),105,0,0,-1,-1,-1,1,"TrackType=",0,"Record of why the track was refit with a kalman filter fit instead of the likelihood fit.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSubBaseObject */
static void G__setup_memvarNDcLcLTSubBaseObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject));
   { ND::TSubBaseObject *p; p=(ND::TSubBaseObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"Unique identifier for sub-detector recon objects.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit.");
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,"Integer specifying which subdetector(s) the object belongs to. See TGlobalReconModule::GetDetectorNumber for the options.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of constituent hits.");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"The number of reconstruction nodes.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom in the fit.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"Deposited energy, N.B. the meaning of this is subdetector-local.");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,"The number of constituents.");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"The length of the track or shower (RMS)");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"The global coordinate position at the 'front' of the object.");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The global coordinate position at the 'back' of the object.");
   G__memvar_setup((void*)((long)(&p->FrontPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPositionVar=",0,"The uncertainty on ND::TSubBaseObject::FrontPosition.");
   G__memvar_setup((void*)((long)(&p->BackPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPositionVar=",0,"The uncertainty on ND::TSubBaseObject::BackPosition.");
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,"The direction at the 'front' of the object.");
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,"The direction at the 'back' of the object.");
   G__memvar_setup((void*)((long)(&p->FrontDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirectionVar=",0,"The uncertainty on ND::TSubBaseObject::FrontDirection.");
   G__memvar_setup((void*)((long)(&p->BackDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirectionVar=",0,"The uncertainty on ND::TSubBaseObject::BackDirection.");
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,"The momentum measurement at the 'front' of the object.");
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,"The momentum measurement at the 'back' of the object.");
   G__memvar_setup((void*)((long)(&p->FrontMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentumError=",0,"The uncertainty on ND::TSubBaseObject::FrontMomentum.");
   G__memvar_setup((void*)((long)(&p->BackMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentumError=",0,"The uncertainty on ND::TSubBaseObject::BackMomentum.");
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,"The associated true particle.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TFGDObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTFGDObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   { ND::TGlobalReconModule::TFGDObject *p; p=(ND::TGlobalReconModule::TFGDObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->avgtime)-(long)(p)),100,0,0,-1,-1,-1,1,"avgtime=",0,"Average fully corrected FGD hit time.");
   G__memvar_setup((void*)((long)(&p->chargePerLayer)-(long)(p)),102,0,0,-1,-1,-1,1,"chargePerLayer[30]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargePerLayerAttenCorr)-(long)(p)),102,0,0,-1,-1,-1,1,"chargePerLayerAttenCorr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdContainment)-(long)(p)),105,0,0,-1,-1,-1,1,"fgdContainment=",0,"Fully contained PID information. Indicates whether the FGD PID algorithm determined the track to be fully contained in FGD1 or FGD2 (=1 or 2), stopping in FGD1 or FGD2 (=-1 or -2), or other (0).");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,-1,-1,1,"E=",0,"Measured energy in an FGD.");
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,-1,-1,1,"x=",0,"Distance traveled in an FGD.");
   G__memvar_setup((void*)((long)(&p->TrueE)-(long)(p)),100,0,0,-1,-1,-1,1,"TrueE=",0,"True energy in an FGD");
   G__memvar_setup((void*)((long)(&p->E_exp_muon)-(long)(p)),100,0,0,-1,-1,-1,1,"E_exp_muon=",0,"Expected energy deposit for a muon.");
   G__memvar_setup((void*)((long)(&p->E_exp_pion)-(long)(p)),100,0,0,-1,-1,-1,1,"E_exp_pion=",0,"Expected energy deposit for a pion.");
   G__memvar_setup((void*)((long)(&p->E_exp_proton)-(long)(p)),100,0,0,-1,-1,-1,1,"E_exp_proton=",0,"Expected energy deposit for a proton.");
   G__memvar_setup((void*)((long)(&p->E_exp_electron)-(long)(p)),100,0,0,-1,-1,-1,1,"E_exp_electron=",0,"Expected energy deposit for an electron.");
   G__memvar_setup((void*)((long)(&p->sigmaE_muon)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaE_muon=",0,"Expected energy uncertainty for a muon.");
   G__memvar_setup((void*)((long)(&p->sigmaE_pion)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaE_pion=",0,"Expected energy uncertainty for a pion.");
   G__memvar_setup((void*)((long)(&p->sigmaE_proton)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaE_proton=",0,"Expected energy uncertainty for a proton.");
   G__memvar_setup((void*)((long)(&p->sigmaE_electron)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaE_electron=",0,"Expected energy uncertainty for an electron.");
   G__memvar_setup((void*)((long)(&p->PullMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullMuon=",0,"The FGD PID pull value for a muon.");
   G__memvar_setup((void*)((long)(&p->PullPion)-(long)(p)),100,0,0,-1,-1,-1,1,"PullPion=",0,"The FGD PID pull value for a pion.");
   G__memvar_setup((void*)((long)(&p->PullProton)-(long)(p)),100,0,0,-1,-1,-1,1,"PullProton=",0,"The FGD PID pull value for a proton.");
   G__memvar_setup((void*)((long)(&p->PullElectron)-(long)(p)),100,0,0,-1,-1,-1,1,"PullElectron=",0,"The FGD PID pull value for an electron.");
   G__memvar_setup((void*)((long)(&p->PullNotSet)-(long)(p)),100,0,0,-1,-1,-1,1,"PullNotSet=",0,"PullNotSet = 1 if the pull is not set, and 0 otherwise.");
   G__memvar_setup((void*)((long)(&p->isFgdVA)-(long)(p)),103,0,0,-1,-1,-1,1,"isFgdVA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isFgdVA_flag)-(long)(p)),103,0,0,-1,-1,-1,1,"isFgdVA_flag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->globpassVA_flag)-(long)(p)),105,0,0,-1,-1,-1,1,"globpassVA_flag=",0,"/ FGD vertex activity Vertex (1) or Entrance (2)");
   G__memvar_setup((void*)((long)(&p->fgdVA_upMinZ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_upMinZ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_downMaxZ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_downMaxZ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_upCosTheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_upCosTheta=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_downCosTheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_downCosTheta=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_otherUpQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_otherUpQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_otherDownQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_otherDownQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verLayQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verLayQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNearQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verNextNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNextNearQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verNextNextNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNextNextNearQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verNearQ_rect)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNearQ_rect=",0,"FGD vertex activity 2x3.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verNextNearQ_rect)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNextNearQ_rect=",0,"FGD vertex activity 2x5.");
   G__memvar_setup((void*)((long)(&p->fgdVA_verNextNextNearQ_rect)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNextNextNearQ_rect=",0,"FGD vertex activity 2x7.");
   G__memvar_setup((void*)((long)(&p->fgdVA_totalQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_totalQ=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->fgdVA_totalCorrE)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_totalCorrE=",0,"FGD vertex activity values.");
   G__memvar_setup((void*)((long)(&p->isFgdEA)-(long)(p)),103,0,0,-1,-1,-1,1,"isFgdEA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isFgdEA_flag)-(long)(p)),103,0,0,-1,-1,-1,1,"isFgdEA_flag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->globpassEA_flag)-(long)(p)),105,0,0,-1,-1,-1,1,"globpassEA_flag=",0,"/ FGD end activity End (1) or Exit (2)");
   G__memvar_setup((void*)((long)(&p->fgdEA_otherUpQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_otherUpQ=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_otherDownQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_otherDownQ=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verQ=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verLayQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verLayQ=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verNearQ=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verNextNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verNextNearQ=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verNextNextNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verNextNextNearQ=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verNearQ_rect)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verNearQ_rect=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verNextNearQ_rect)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verNextNearQ_rect=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdEA_verNextNextNearQ_rect)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdEA_verNextNextNearQ_rect=",0,"FGD end activity values.");
   G__memvar_setup((void*)((long)(&p->fgdhits_Layer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"fgdhits_Layer=",0,"Vector to store the layer number of each hit");
   G__memvar_setup((void*)((long)(&p->fgdhits_Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,1,"fgdhits_Position=",0,"Vector to store the X or Y position of each hit");
   G__memvar_setup((void*)((long)(&p->fgdhits_Time)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"fgdhits_Time=",0,"Vector to store the time of each hit");
   G__memvar_setup((void*)((long)(&p->fgdhits_Charge)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"fgdhits_Charge=",0,"Vector to store the charge of each hit");
   G__memvar_setup((void*)((long)(&p->fgdhits_TrajID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"fgdhits_TrajID=",0,"Vector to store the ID of the Trajectory that created the hit");
   G__memvar_setup((void*)((long)(&p->fgdhits_TrueE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"fgdhits_TrueE=",0,"Vector to store the true energy deposit of each hit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TECALObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTECALObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   { ND::TGlobalReconModule::TECALObject *p; p=(ND::TGlobalReconModule::TECALObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"The length of the track or shower, its value depends on if the object is reconstructed as track-like or shower-like.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"Deposited energy. Its value depends on if the object is reconstructed as track-like or shower-like If IsTrackLike EDeposit is the total charge in the cluster in MEU. If IsShowerLike it is the result of the Tracker ECal EMEnergyFit in MeV.");
   G__memvar_setup((void*)((long)(&p->LLR_Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"LLR_Quality=",0,"\\brief PID quality flag.   A non-zero indicates an bad quality.  If this value is non-zero the PID values are set to -9999.");
   G__memvar_setup((void*)((long)(&p->LLR_MIP_EM)-(long)(p)),100,0,0,-1,-1,-1,1,"LLR_MIP_EM=",0,"\\brief Value to separate MIP-like objects (e.g. muons) from EM showers e.g. photons/electrons). -9999 indicates an error.");
   G__memvar_setup((void*)((long)(&p->LLR_MIP_Pion)-(long)(p)),100,0,0,-1,-1,-1,1,"LLR_MIP_Pion=",0,"\\brief Value to separate MIP-like objects (e.g. muons) from showering  pions. -9999 indicates an error.");
   G__memvar_setup((void*)((long)(&p->LLR_EM_HIP)-(long)(p)),100,0,0,-1,-1,-1,1,"LLR_EM_HIP=",0,"\\brief Value to separate light tracks/MIP-like objects (e.g. muons) from  heavy tracks / Highly-ionising particles (specifically proton).  -9999 indicates an error.");
   G__memvar_setup((void*)((long)(&p->LLR_MIP_EM_LowMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"LLR_MIP_EM_LowMomentum=",0,"UNSTABLE: A combined discriminator for separating MIPs from EM showers.  This is similar to LLR_MIP_EM but trained specifically on  low-momentum electrons and muon. NB: this variable is still being  developed and should be considered to be unstable. Positive values = electron-like;  Negative values = muon-like.  See the ecalRecon documentation for more details.  -9999 indicates an error.");
   G__memvar_setup((void*)((long)(&p->LLR_MIP_HIP_VACut)-(long)(p)),100,0,0,-1,-1,-1,1,"LLR_MIP_HIP_VACut=",0,"UNSTABLE: Only filled for FilledAsType == 2  Recalculates PID variables for a vertex track where the X% (20% by  default) hits nearest to the reconstructed vertex are ignored.");
   G__memvar_setup((void*)((long)(&p->AverageHitTime)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageHitTime=",0,"The charged weighted average time for the ECal cluster");
   G__memvar_setup((void*)((long)(&p->AverageZPosition)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageZPosition=",0,"Unweighted average Z position of object-constituent hits.");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Result)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Result=",0,"The result from the EM energy fit to the cluster");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Uncertainty)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Uncertainty=",0,"The uncertainty of the EM energy fit to the cluster");
   G__memvar_setup((void*)((long)(&p->FilledAsType)-(long)(p)),105,0,0,-1,-1,-1,1,"FilledAsType=",0,"\\brief Whether the object was filled as a shower (or a track.). This is      NOT a PID.         This lets you know how some of these variables were filled from the     original ECal cluster. ECal-iso vertex tracks do not fill many of these     variables. Showers and Tracks differ in their definitions of Width and     Length, and EDeposit.     Cone is filled from the alternate Shower hypothesis for Track-like     clusters.     2. ECal-iso vertex track     1. Shower-like     0. Track-like     -1. Default value");
   G__memvar_setup((void*)((long)(&p->PID_Circularity)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Circularity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Angle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Angle=",0,"The zenith angle with respect to each detector.");
   G__memvar_setup((void*)((long)(&p->PID_ShowerAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_ShowerAngle=",0,"The angle from the start of an object to its width at its charge centre");
   G__memvar_setup((void*)((long)(&p->PID_Asymmetry)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Asymmetry=",0,"Ratio of the big width of an object by its small width.");
   G__memvar_setup((void*)((long)(&p->PID_TruncatedMaxRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_TruncatedMaxRatio=",0,"A truncated Max Ratio. See ecalRecon docs for the full definition.");
   G__memvar_setup((void*)((long)(&p->PID_TransverseChargeRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_TransverseChargeRatio=",0,"\\brief A variable sensitive to the charge distribution in the plane     transverse to a shower/track direction.         See the ecalRecon documentation for the full definition.");
   G__memvar_setup((void*)((long)(&p->PID_FrontBackRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_FrontBackRatio=",0,"The ratio of the charge in equal length blocks at each end of the track.        \\note     Assumes particle is coming from the tracker into the ECal.");
   G__memvar_setup((void*)((long)(&p->Containment)-(long)(p)),100,0,0,-1,-1,-1,1,"Containment=",0,"Containment: contained = 1.0, not-contained = 0.0, default = -1.0.         An object is classed as contained if it has no hits in the outer bars     of the ECal (bar number 0 or the maximum bar in a layer)     and no hits in the outermost layer of the ECal.");
   G__memvar_setup((void*)((long)(&p->Thrust)-(long)(p)),100,0,0,-1,-1,-1,1,"Thrust=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThrustOrigin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ThrustOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThrustAxis)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ThrustAxis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InnerMostLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"InnerMostLayerHit=",0,"\\brief Zero-indexed layer number of tracker-closest layer with an ECal  hit belonging to this object.");
   G__memvar_setup((void*)((long)(&p->OuterMostLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"OuterMostLayerHit=",0,"\\brief Zero-indexed layer number of tracker-farthest layer with an ECal  hit belonging to this object.");
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Width=",0,"TrackShower width         Filled depending on `FilledAsShower`.     * Track: `ND::TReconTrack::GetWidth`     * Shower: All three components are = `Length*tan(PID_ShowerAngle)`");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSubBaseShowerObject */
static void G__setup_memvarNDcLcLTSubBaseShowerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject));
   { ND::TSubBaseShowerObject *p; p=(ND::TSubBaseShowerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Cone)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Cone=",0,"The opening angles of the reconstructed shower cone.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TP0DObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTP0DObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   { ND::TGlobalReconModule::TP0DObject *p; p=(ND::TGlobalReconModule::TP0DObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),100,0,0,-1,-1,-1,1,"Width=",0,"The width of the shower (perpendicular to the direction).");
   G__memvar_setup((void*)((long)(&p->avgtime)-(long)(p)),100,0,0,-1,-1,-1,1,"avgtime=",0,"Averaged corrected node time.");
   G__memvar_setup((void*)((long)(&p->ParticleId)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ParticleId=",0,"A vector of potential PIDs, sorted by weight, c.f.  TP0DObject::PIDWeight.");
   G__memvar_setup((void*)((long)(&p->PIDWeight)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PIDWeight=",0,"The weights for the PID hypotheses, c.f. TP0DObject::ParticleId");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TSMRDObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   { ND::TGlobalReconModule::TSMRDObject *p; p=(ND::TGlobalReconModule::TSMRDObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->avgtime)-(long)(p)),100,0,0,-1,-1,-1,1,"avgtime=",0,"Avergaed light-propagation corrected hit time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TTrackerObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTTrackerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   { ND::TGlobalReconModule::TTrackerObject *p; p=(ND::TGlobalReconModule::TTrackerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->matchingFailure_flag)-(long)(p)),105,0,0,-1,-1,-1,1,"matchingFailure_flag=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalPIDAlternate */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   { ND::TGlobalReconModule::TGlobalPIDAlternate *p; p=(ND::TGlobalReconModule::TGlobalPIDAlternate*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),107,0,0,-1,-1,-1,1,"Detectors=",0,"Detectors used, defined according to the formula in GetDetectorNumber.");
   G__memvar_setup((void*)((long)(&p->DetectorUsed)-(long)(p)),103,0,0,-1,-1,-1,1,"DetectorUsed[19]=",0,"Detectors used (NDETSUSED = 19)");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"The status for the fit.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"The Charge");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"The length of the track or shower (RMS)");
   G__memvar_setup((void*)((long)(&p->ParticleId)-(long)(p)),105,0,0,-1,-1,-1,1,"ParticleId=",0,"the PDG code obtained in the recon combined PID");
   G__memvar_setup((void*)((long)(&p->PIDWeight)-(long)(p)),100,0,0,-1,-1,-1,1,"PIDWeight=",0,"the PID weight for this hypothesis");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"The position of the object.");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The position of the object.");
   G__memvar_setup((void*)((long)(&p->FrontPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPositionVar=",0,"The position variance;");
   G__memvar_setup((void*)((long)(&p->BackPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPositionVar=",0,"The position variance;");
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,"The direction of the object.");
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,"The direction of the object.");
   G__memvar_setup((void*)((long)(&p->FrontDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirectionVar=",0,"The direction variance of the object.");
   G__memvar_setup((void*)((long)(&p->BackDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirectionVar=",0,"The direction variance of the object.");
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,"the momentum of the object");
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,"the momentum of the object");
   G__memvar_setup((void*)((long)(&p->FrontMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentumError=",0,"the error on the momentum of the object");
   G__memvar_setup((void*)((long)(&p->BackMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentumError=",0,"the error on the momentum of the object");
   G__memvar_setup((void*)((long)(&p->PositionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionAtTrueVertex=",0,"The position at the true vertex.");
   G__memvar_setup((void*)((long)(&p->PositionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionVarAtTrueVertex=",0,"The position variance at the true vertex.");
   G__memvar_setup((void*)((long)(&p->DirectionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionAtTrueVertex=",0,"The direction at the true vertex.");
   G__memvar_setup((void*)((long)(&p->DirectionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirectionVarAtTrueVertex=",0,"The direction variance at the true vertex.");
   G__memvar_setup((void*)((long)(&p->MomentumAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumAtTrueVertex=",0,"The momentum at the true vertex.");
   G__memvar_setup((void*)((long)(&p->MomentumErrorAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumErrorAtTrueVertex=",0,"The error of the momentum at the true vertex.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<int,TVector2> */
static void G__setup_memvarpairlEintcOTVector2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR));
   { pair<int,TVector2> *p; p=(pair<int,TVector2>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector2),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TTPCOtherObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCOtherObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   { ND::TGlobalReconModule::TTPCOtherObject *p; p=(ND::TGlobalReconModule::TTPCOtherObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"The Front position of the object.");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The Back position of the object.");
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,"The Front direction of the object.");
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,"The Back direction of the object.");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"the momentum of the object");
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,"The true particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TSMRDHit */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   { ND::TGlobalReconModule::TSMRDHit *p; p=(ND::TGlobalReconModule::TSMRDHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Wall)-(long)(p)),105,0,0,-1,-1,-1,1,"Wall=",0,"SMRD wall number, 0=Top, 1=Bottom, 2= Right, 3= Left.");
   G__memvar_setup((void*)((long)(&p->Yoke)-(long)(p)),105,0,0,-1,-1,-1,1,"Yoke=",0,"Yoke ring number.");
   G__memvar_setup((void*)((long)(&p->Layer)-(long)(p)),105,0,0,-1,-1,-1,1,"Layer=",0,"SMRD hit layer number.");
   G__memvar_setup((void*)((long)(&p->Tower)-(long)(p)),105,0,0,-1,-1,-1,1,"Tower=",0,"SMRD Tower number.");
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,-1,-1,1,"Counter=",0,"SMRD scint number.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"Deposited charge");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),100,0,0,-1,-1,-1,1,"Time=",0,"Hit time [ns]");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Position=",0,"Hit position in global ND coordinates [mm]");
   G__memvar_setup((void*)((long)(&p->PositionError)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"PositionError=",0,"The variance on ND::TGlobalReconModule::TSMRDHit::Position [mm]");
   G__memvar_setup((void*)((long)(&p->Type)-(long)(p)),105,0,0,-1,-1,-1,1,"Type=",0,"The hit 'type': (0=X,1=Y,2=Z)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule */
static void G__setup_memvarNDcLcLTTrackerECALReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconObject */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   { ND::TTrackerECALReconModule::TECALReconObject *p; p=(ND::TTrackerECALReconModule::TECALReconObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->FilledAsTrack)-(long)(p)),103,0,0,-1,-1,-1,1,"FilledAsTrack=",0,"Was filled by a Track-like TReconPID \\note This is an ease of use boolean NOT a PID. For determining PID please  use the PID variables.");
   G__memvar_setup((void*)((long)(&p->FilledAsShower)-(long)(p)),103,0,0,-1,-1,-1,1,"FilledAsShower=",0,"Was filled by a Shower-like TReconPID \\note This is an ease of use boolean NOT a PID. For determining PID please  use the PID variables.");
   G__memvar_setup((void*)((long)(&p->Track)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack),-1,-1,1,"Track=",0,"Objects to store information for a track.");
   G__memvar_setup((void*)((long)(&p->Shower)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower),-1,-1,1,"Shower=",0,"Objects to store information for a shower.");
   G__memvar_setup((void*)((long)(&p->Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster),-1,-1,1,"Cluster=",0,"Objects to store information for a cluster.");
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"Unique ID number to allow matching to Global Recon object.");
   G__memvar_setup((void*)((long)(&p->G4ID)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID=",0,"G4ID for truth matched objects, using TrackTruthInfo the original truth-matching algorithm).");
   G__memvar_setup((void*)((long)(&p->G4ID_Primary)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Primary=",0,"G4ID of the primary particle associated with this object.  See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)((long)(&p->Completeness_Primary)-(long)(p)),100,0,0,-1,-1,-1,1,"Completeness_Primary=",0,"Truth-matching completeness for G4ID_Primary");
   G__memvar_setup((void*)((long)(&p->Cleanliness_Primary)-(long)(p)),100,0,0,-1,-1,-1,1,"Cleanliness_Primary=",0,"Truth-matching cleanliness for G4ID_Primary");
   G__memvar_setup((void*)((long)(&p->G4ID_Recursive)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Recursive=",0,"G4ID of the highest-level parent particle that enters the ECal module,  and which had a daughter that contributed to this object. See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)((long)(&p->G4ID_Recursive2)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Recursive2=",0,"G4ID of the highest-level parent particle that enters the ECal module,  and which had a daughter that contributed to this object. See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)((long)(&p->G4ID_Recursive3)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Recursive3=",0,"G4ID of the highest-level parent particle that enters the ECal module,  and which had a daughter that contributed to this object. See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)((long)(&p->G4ID_Recursive4)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Recursive4=",0,"G4ID of the highest-level parent particle that enters the ECal module,  and which had a daughter that contributed to this object. See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)((long)(&p->Completeness_Recursive)-(long)(p)),100,0,0,-1,-1,-1,1,"Completeness_Recursive=",0,"Truth-matching completeness for G4ID_Recursive");
   G__memvar_setup((void*)((long)(&p->Cleanliness_Recursive)-(long)(p)),100,0,0,-1,-1,-1,1,"Cleanliness_Recursive=",0,"Truth-matching cleanliness for G4ID_Recursive");
   G__memvar_setup((void*)((long)(&p->G4ID_Single)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Single=",0,"The single true particle that contributed most hits to this object.  Should be the same as G4ID in most cases  (unless two particles contributed the same amount).  See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)((long)(&p->Proximity_Single)-(long)(p)),102,0,0,-1,-1,-1,1,"Proximity_Single=",0,"The proximity of the energy depoisited by the G4ID_Single trajectory to the reconstructed hit.");
   G__memvar_setup((void*)((long)(&p->Completeness_Single)-(long)(p)),100,0,0,-1,-1,-1,1,"Completeness_Single=",0,"The Completeness of the single biggest contributor to the cluster.");
   G__memvar_setup((void*)((long)(&p->Cleanliness_Single)-(long)(p)),100,0,0,-1,-1,-1,1,"Cleanliness_Single=",0,"The cleanliness (hit purity) of the single biggest contributor   to the cluster. shower, provided it is below a proximity cutoff.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"Number of hits in this object");
   G__memvar_setup((void*)((long)(&p->NIsXHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NIsXHits=",0,"Number of hits with precise X information in the object");
   G__memvar_setup((void*)((long)(&p->NIsYHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NIsYHits=",0,"Number of hits with precise Y information in the object");
   G__memvar_setup((void*)((long)(&p->NIsZHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NIsZHits=",0,"Number of hits with precise Z information in the object");
   G__memvar_setup((void*)((long)(&p->NLayersHit)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersHit=",0,"Number of layers hit by this object");
   G__memvar_setup((void*)((long)(&p->MaxPerpBarHit)-(long)(p)),105,0,0,-1,-1,-1,1,"MaxPerpBarHit=",0,"\\ The maximum bar number hit in a cluster, for layers perpendicular  to the beam axis");
   G__memvar_setup((void*)((long)(&p->MaxParaBarHit)-(long)(p)),105,0,0,-1,-1,-1,1,"MaxParaBarHit=",0,"The maximum bar number hit in a cluster, for layers parallel to  the beam axis");
   G__memvar_setup((void*)((long)(&p->MinBarHit)-(long)(p)),105,0,0,-1,-1,-1,1,"MinBarHit=",0,"The minimum bar number hit in a cluster  The minimum value of this is 0 for all ECals");
   G__memvar_setup((void*)((long)(&p->InnerMostLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"InnerMostLayerHit=",0,"The layer closest to the tracker that was hit by the object. 0 indexed.");
   G__memvar_setup((void*)((long)(&p->OuterMostLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"OuterMostLayerHit=",0,"The layer furthest from the tracker that was hit by the object.  This is layer number 30 (the 31st layer) for Barrel ECals and layer  number 33 (the 34th layer) for the downstream ECal");
   G__memvar_setup((void*)((long)(&p->TotalHitCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"TotalHitCharge=",0,"Sum of charges of the consitituent hits in reconstructed object.");
   G__memvar_setup((void*)((long)(&p->AverageHitTime)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageHitTime=",0,"Average time of hits in reconstructed object.");
   G__memvar_setup((void*)((long)(&p->Module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"Module=",0,"Name of ECAL module in which object was reconstructed.");
   G__memvar_setup((void*)((long)(&p->ObjectLength)-(long)(p)),100,0,0,-1,-1,-1,1,"ObjectLength=",0,"Recon object length in mm");
   G__memvar_setup((void*)((long)(&p->PID_Circularity)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Circularity=",0,"The combined \"circularity\" of the object.  (showers) 0.0 <= circularity <= 1.0 (tracks)  This variable is a replacement for AMR.  PID_Circularity = PID_CircularityView0 * PID_CircularityView1");
   G__memvar_setup((void*)((long)(&p->PID_Angle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Angle=",0,"The zenith angle with respect to each detector.");
   G__memvar_setup((void*)((long)(&p->PID_ShowerAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_ShowerAngle=",0,"The angle from the start of an object to its width at its charge centre");
   G__memvar_setup((void*)((long)(&p->PID_Asymmetry)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Asymmetry=",0,"Ratio of the big width of an object by its small width.");
   G__memvar_setup((void*)((long)(&p->PID_TruncatedMaxRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_TruncatedMaxRatio=",0,"A truncated Max Ratio. See ecalRecon docs for the full definition.");
   G__memvar_setup((void*)((long)(&p->PID_TransverseChargeRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_TransverseChargeRatio=",0,"A variable sensitive to the charge distribution in the plane  transverse to a shower/track direction.  See the ecalRecon documentation for the full definition.");
   G__memvar_setup((void*)((long)(&p->PID_FrontBackRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_FrontBackRatio=",0,"The ratio of the charge in equal length blocks at each end of the track. \\note  Assumes particle is coming from the tracker into the ECal.");
   G__memvar_setup((void*)((long)(&p->Containment)-(long)(p)),100,0,0,-1,-1,-1,1,"Containment=",0,"Containment: contained = 1.0, not-contained = 0.0, default = -1.0.      An object is classed as contained if it has no hits in the outer bars   of the ECal (bar number 0 or the maximum bar in a layer)   and no hits in the outermost layer of the ECal.");
   G__memvar_setup((void*)((long)(&p->PID_LLR_Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_LLR_Quality=",0,"A quality flag for the likelihood PID variables.   Good quality = 0, Bad quality != 0.   The quality criteria is defined in ecalRecon.");
   G__memvar_setup((void*)((long)(&p->PID_LLR_MIP_EM)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_LLR_MIP_EM=",0,"A combined discriminator for separating MIPs from EM showers.   Positive values = EM shower-like;   Negative values = MIP-like.    Analysers should check the PID_LLR_Quality flag before using this variable.");
   G__memvar_setup((void*)((long)(&p->PID_LLR_MIP_Pion)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_LLR_MIP_Pion=",0,"Discriminator for tagging showering pions in a sample of MIP-like tracks.  Positive values = showering pion-like;  Negative values = MIP-like.");
   G__memvar_setup((void*)((long)(&p->PID_LLR_EM_HIP)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_LLR_EM_HIP=",0,"A combined discriminator for separating protons from electrons.  Positive values = stopping track-like;  Negative values = EM shower-like.");
   G__memvar_setup((void*)((long)(&p->PID_LLR_MIP_EM_LowMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_LLR_MIP_EM_LowMomentum=",0,"A combined discriminator for separating MIPs from EM showers.  This is similar to LLR_MIP_EM but trained specifically on  low-momentum electrons and muon. NB: this variable is still being  developed and should be considered to be unstable.    Positive values = electron-like;   Negative values = muon-like.   See the ecalRecon documentation for more details.");
   G__memvar_setup((void*)((long)(&p->AverageZPosition)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageZPosition=",0,"Unweighted average Z position of object-constituent hits.");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Result)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Result=",0,"The result from the EM energy fit to the cluster");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Uncertainty)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Uncertainty=",0,"The uncertainty of the EM energy fit to the cluster");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Likelihood_energyGrad)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Likelihood_energyGrad=",0,"Energy fit experts please fill this in");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Likelihood_energy_qsumGrad)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Likelihood_energy_qsumGrad=",0,"Energy fit experts please fill this in");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Likelihood_qsum_like)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Likelihood_qsum_like=",0,"Energy fit experts please fill this in");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QSum)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QSum=",0,"The summed charge present in the cluster in units of MIPs");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QMean)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QMean=",0,"The mean charge of hits in the cluster in units of MIPs");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QRMS)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QRMS=",0,"The RMS of the hit charges for the cluster in units of MIPs");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QSkew)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QSkew=",0,"The skew of hit charges for the cluster in units of MIPs");
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QMax)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QMax=",0,"The maximum hit charge in units of MIPs.");
   G__memvar_setup((void*)((long)(&p->Thrust)-(long)(p)),100,0,0,-1,-1,-1,1,"Thrust=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThrustOrigin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ThrustOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThrustAxis)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ThrustAxis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MatchingLikelihood)-(long)(p)),100,0,0,-1,-1,-1,1,"MatchingLikelihood=",0,"The matching likelihood");
   G__memvar_setup((void*)((long)(&p->NHitsAtLayersWithManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHitsAtLayersWithManyHits=",0,"The number of hits in a layer when there are at least 2 hits.");
   G__memvar_setup((void*)((long)(&p->NLayersTwoHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersTwoHits=",0,"The number of layers which have at least 2 hits.");
   G__memvar_setup((void*)((long)(&p->NLayersThreeHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersThreeHits=",0,"The number of layers which have at least 3 hits.");
   G__memvar_setup((void*)((long)(&p->FirstLayerManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"FirstLayerManyHits=",0,"The number of the first layer in which there are at least 2 hits.");
   G__memvar_setup((void*)((long)(&p->LastLayerManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"LastLayerManyHits=",0,"The last layer in which there are at least 2 hits.");
   G__memvar_setup((void*)((long)(&p->MaxHitsInALayer)-(long)(p)),105,0,0,-1,-1,-1,1,"MaxHitsInALayer=",0,"The layer which received the maximum number of hits.");
   G__memvar_setup((void*)((long)(&p->MaxHitChargeLayer)-(long)(p)),105,0,0,-1,-1,-1,1,"MaxHitChargeLayer=",0,"The layer which received the highest hit charge.");
   G__memvar_setup((void*)((long)(&p->Clustering_3DSeedType)-(long)(p)),105,0,0,-1,-1,-1,1,"Clustering_3DSeedType=",0,"The 3D seed type from the 3D clustering algorithm (-1 means was not  created by 3D clustering, 0 means seed was from a pair of crossed bars, 1  means seed was from a double ended bar). Further details can be found in  TECAL3DClusters.cxx in ecalRecon.");
   G__memvar_setup((void*)((long)(&p->Clustering_Added3DClusterHits)-(long)(p)),105,0,0,-1,-1,-1,1,"Clustering_Added3DClusterHits=",0,"The number of hits produced by the  3DCluster algorithm which were added to this cluster. The cluster was produced by another algorithm before 3DCluster was run.");
   G__memvar_setup((void*)((long)(&p->Pointing)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Pointing=",0,"Pointing vector.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconTrack */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   { ND::TTrackerECALReconModule::TECALReconTrack *p; p=(ND::TTrackerECALReconModule::TECALReconTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"The track direction");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The charge deposited by the track in units of MIPs");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The track starting 4-position.");
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,"The track starting 4-position variance.");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The position of the end of the track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconShower */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   { ND::TTrackerECALReconModule::TECALReconShower *p; p=(ND::TTrackerECALReconModule::TECALReconShower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ConeAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ConeAngle=",0,"The shower opening angle.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"The shower direction.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The energy deposited in the shower");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The shower position.");
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,"The shower position variance.");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"The charge weighted position of the end of the shower");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconCluster */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   { ND::TTrackerECALReconModule::TECALReconCluster *p; p=(ND::TTrackerECALReconModule::TECALReconCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The cluster position.");
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,"The cluster position variance.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The number of degrees of freedom in the reconstruction.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The charge deposited by the cluster.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   { ND::TTrackerECALReconModule::TECALReconUnmatchedObject *p; p=(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"Number of hits in the cluster");
   G__memvar_setup((void*)((long)(&p->View)-(long)(p)),105,0,0,-1,-1,-1,1,"View=",0,"View of the cluster.  View 0 - Y measuring (odd) Layers and View 1 - X measuring (even)  layers");
   G__memvar_setup((void*)((long)(&p->TotalHitCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"TotalHitCharge=",0,"Summed hit charge in the cluster in units of MIPs");
   G__memvar_setup((void*)((long)(&p->AverageHitTime)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageHitTime=",0,"Average time of the cluster in ns");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FrontPosition=",0,"Position of the end of the cluster closest to the tracker");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BackPosition=",0,"Position in end of the cluster furthest from the tracker");
   G__memvar_setup((void*)((long)(&p->InnerMostLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"InnerMostLayerHit=",0,"The layer closest to the tracker that was hit by the cluster");
   G__memvar_setup((void*)((long)(&p->OuterMostLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"OuterMostLayerHit=",0,"The layer furthest from the tracker that was hit by the cluster");
   G__memvar_setup((void*)((long)(&p->G4ID)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID=",0,"Truth-matched particle ID.");
   G__memvar_setup((void*)((long)(&p->G4ID_Primary)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Primary=",0,"G4ID of the primary particle associated with this object.");
   G__memvar_setup((void*)((long)(&p->G4ID_Recursive)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Recursive=",0,"G4ID of the highest-level parent particle that enters the ECal module,  and which had a daughter that contributed to this object.  See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)((long)(&p->G4ID_Single)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID_Single=",0,"The single true particle that contributed most hits to this object.  Should be the same as G4ID in most cases (unless two particles  contributed the same amount).  See TShowerTruthInfo in oaUtility for details.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DECALReconModule */
static void G__setup_memvarNDcLcLTP0DECALReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DECALReconModule::TP0DECALReconTrack */
static void G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   { ND::TP0DECALReconModule::TP0DECALReconTrack *p; p=(ND::TP0DECALReconModule::TP0DECALReconTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The object UniqueID which can be used to match this object to the Global Recon object.");
   G__memvar_setup((void*)((long)(&p->Curvature)-(long)(p)),100,0,0,-1,-1,-1,1,"Curvature=",0,"The curvature around the x axis of the corresponding TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"The Direction of the corresponding TReconTrack.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The reconstructed energy deposited by the corresponding TReconTrack.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"\\short The Number of Degrees of Freedom in the reconstruction of the");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The reconstructed starting 4-position of the TReconTrack.  Uses ND::TReconTrack::GetPosition.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"The 'quality' of the reconstruction according to the relevant  TReconTrack, from ND::TReconBase::GetQuality.");
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Width=",0,"The 'width' of the corresponding TReconTrack.");
   G__memvar_setup((void*)((long)(&p->AMR)-(long)(p)),100,0,0,-1,-1,-1,1,"AMR=",0,"PID Variable: Axis Max Ratio - the ratio of primary and secondary  components of a 2D PCA.");
   G__memvar_setup((void*)((long)(&p->CWTrackWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"CWTrackWidth=",0,"\\short PID Variable: Width of the track in bars, weighted by the charge  in each bar.");
   G__memvar_setup((void*)((long)(&p->Max_Ratio)-(long)(p)),100,0,0,-1,-1,-1,1,"Max_Ratio=",0,"\\short PID Variable: The ratio between highest and lowest hit charges in  the reconstruction cluster.");
   G__memvar_setup((void*)((long)(&p->NormChargeSD)-(long)(p)),100,0,0,-1,-1,-1,1,"NormChargeSD=",0,"\\short PID Variable: Normalised standard deviation of the contributing  reconstructed hit charges.");
   G__memvar_setup((void*)((long)(&p->PathChargeRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PathChargeRatio=",0,"\\short The ratio of total hit charges between the front half and back  half of the TReconTrack.");
   G__memvar_setup((void*)((long)(&p->TrShval)-(long)(p)),100,0,0,-1,-1,-1,1,"TrShval=",0,"\\short PID Variable: The output of the ANN using the other PID Variables  as input. Track-like events have a TrShval close to '1'.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of THits which contributed to this reconstruction cluster.");
   G__memvar_setup((void*)((long)(&p->BenCWPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BenCWPosition=",0,"Ben Smith's charge weighted reconstruction position.");
   G__memvar_setup((void*)((long)(&p->StackNo)-(long)(p)),105,0,0,-1,-1,-1,1,"StackNo=",0,"The stack in which the TReconTrack resides. Uses  TReconBase::GetDetector.");
   G__memvar_setup((void*)((long)(&p->Module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"Module=",0,"The name of the module in which the TReconTrack resides.");
   G__memvar_setup((void*)((long)(&p->TrueID)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueID=",0,"For MC events: The Id of the corresponding ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->TruePDG)-(long)(p)),105,0,0,-1,-1,-1,1,"TruePDG=",0,"For MC events: The PDG code of the true particle.");
   G__memvar_setup((void*)((long)(&p->TrueParentID)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueParentID=",0,"For MC events: The Id of the true trajectory's parent  ND::TG4Trajectory");
   G__memvar_setup((void*)((long)(&p->TrueHitPurity)-(long)(p)),100,0,0,-1,-1,-1,1,"TrueHitPurity=",0,"For MC events: The 'cleanliness' of the ND::THits which make up  the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->TrueHitEfficiency)-(long)(p)),100,0,0,-1,-1,-1,1,"TrueHitEfficiency=",0,"For MC events: The 'completeness' of the ND::THits which make up  the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->TrueInitPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"TrueInitPos=",0,"For MC events: The true initial position of the corresponding  ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->TrueFinalPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"TrueFinalPos=",0,"For MC events: The true final position of the corresponding  ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->TrueInitMom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"TrueInitMom=",0,"For MC events: The true initial momentum of the corresponding  ND::TG4Trajectory.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DECALReconModule::TP0DECALReconShower */
static void G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   { ND::TP0DECALReconModule::TP0DECALReconShower *p; p=(ND::TP0DECALReconModule::TP0DECALReconShower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The object UniqueID which can be used to match this object  to the Global Recon object.");
   G__memvar_setup((void*)((long)(&p->ConeAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"ConeAngle=",0,"The opening angle of the corresponding TReconShower.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"The Direction of the corresponding TReconShower.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"The reconstructed energy deposited by the corresponding TReconTrack.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"\\short The Number of Degrees of Freedom in the reconstruction of the");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The reconstructed starting 4-position of the TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"\\short The 'quality' of the reconstruction according to the relevant");
   G__memvar_setup((void*)((long)(&p->AMR)-(long)(p)),100,0,0,-1,-1,-1,1,"AMR=",0,"PID Variable: Axis Max Ratio - the ratio of primary and secondary components of a 2D PCA.");
   G__memvar_setup((void*)((long)(&p->CWTrackWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"CWTrackWidth=",0,"PID Variable: Width of the track in bars, weighted by the charge  in each bar.");
   G__memvar_setup((void*)((long)(&p->Max_Ratio)-(long)(p)),100,0,0,-1,-1,-1,1,"Max_Ratio=",0,"PID Variable: The ratio between highest and lowest hit charges in  the reconstruction cluster.");
   G__memvar_setup((void*)((long)(&p->NormChargeSD)-(long)(p)),100,0,0,-1,-1,-1,1,"NormChargeSD=",0,"PID Variable: Normalised standard deviation of the contributing  reconstructed hit charges.");
   G__memvar_setup((void*)((long)(&p->PathChargeRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PathChargeRatio=",0,"The ratio of total hit charges between the front half and back  half of the TReconShower.");
   G__memvar_setup((void*)((long)(&p->TrShval)-(long)(p)),100,0,0,-1,-1,-1,1,"TrShval=",0,"PID Variable: The output of the ANN using the other PID Variables  as input. Shower-like events have a TrShval close to '0'.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"The number of THits which contributed to this reconstruction cluster.");
   G__memvar_setup((void*)((long)(&p->BenCWPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"BenCWPosition=",0,"Ben's charge weighted reconstruction position.");
   G__memvar_setup((void*)((long)(&p->StackNo)-(long)(p)),105,0,0,-1,-1,-1,1,"StackNo=",0,"The stack in which the TReconTrack resides. Uses");
   G__memvar_setup((void*)((long)(&p->TrueID)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueID=",0,"For MC events: The Id of the primary corresponding ND::TG4Trajectory.");
   G__memvar_setup((void*)((long)(&p->Module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"Module=",0,"The name of the module in which the TReconTrack resides.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DECALReconModule::TP0DECALLayerCharge */
static void G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge));
   { ND::TP0DECALReconModule::TP0DECALLayerCharge *p; p=(ND::TP0DECALReconModule::TP0DECALLayerCharge*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->FirstTime)-(long)(p)),100,0,0,-1,-1,-1,1,"FirstTime=",0,"The earliest hit time of the relevant cluster.");
   G__memvar_setup((void*)((long)(&p->LastTime)-(long)(p)),100,0,0,-1,-1,-1,1,"LastTime=",0,"The latest hit time of the relevant cluster.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge[6]=",0,"The total charge deposited in each of 6layers. Index 0  corresponds the innermost layer");
   G__memvar_setup((void*)((long)(&p->module_name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TString),-1,-1,1,"module_name=",0,"The name of the module.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule */
static void G__setup_memvarNDcLcLTP0DReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DAlgoRes */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DAlgoRes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   { ND::TP0DReconModule::TP0DAlgoRes *p; p=(ND::TP0DReconModule::TP0DAlgoRes*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,"The cycle number, based on the first hit.");
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,"Holds internal Ids of Vertices pertinent to this algorithm result.");
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,"Holds internal Ids of Particles pertinent to this algorithm result.");
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,"Holds internal Ids of Tracks pertinent to this algorithm result.");
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,"Holds internal Ids of Showers pertinent to this algorithm result.");
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,"Holds internal Ids of Clusters pertinent to this algorithm result.");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,"Holds internal Ids of Nodes pertinent to this algorithm result.");
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,"Holds internal Ids of Hits pertinent to this algorithm result.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,"A count of the Hits associated with this object.");
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"UNUSED: A unique ID used for reconstruction objects.");
   G__memvar_setup((void*)((long)(&p->FullName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"FullName=",0,"The name of the p0dRecon algorithm that corresponds to this");
   G__memvar_setup((void*)((long)(&p->AlgoResults)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"AlgoResults=",0,"Holds internal Ids of daughter algorithm results to this one.");
   G__memvar_setup((void*)((long)(&p->Parent)-(long)(p)),115,0,0,-1,-1,-1,1,"Parent=",0,"The internal Id of the parent algorithm result of this one.");
   G__memvar_setup((void*)((long)(&p->UsedHitCluster)-(long)(p)),115,0,0,-1,-1,-1,1,"UsedHitCluster=",0,"The internal Id of the cluster of hits which were used in a");
   G__memvar_setup((void*)((long)(&p->UnusedHitCluster)-(long)(p)),115,0,0,-1,-1,-1,1,"UnusedHitCluster=",0,"The internal Id of the cluster of hits which were not used in a");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DVertex */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   { ND::TP0DReconModule::TP0DVertex *p; p=(ND::TP0DReconModule::TP0DVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,"The cycle number, based on the first hit.");
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,"Holds internal Ids of Vertices pertinent to this reconstructed vertex.");
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,"Holds internal Ids of Particles pertinent to this reconstructed vertex.");
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,"Holds internal Ids of Tracks pertinent to this reconstructed vertex.");
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,"Holds internal Ids of Showers pertinent to this reconstructed vertex.");
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,"Holds internal Ids of Clusters pertinent to this reconstructed vertex.");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,"Holds internal Ids of Nodes pertinent to this reconstructed vertex.");
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,"Holds internal Ids of Hits pertinent to this reconstructed vertex.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,"A count of the Hits associated with this object.");
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The Unique ID of the corresponding ND::TReconVertex, used for  global-subdetector matching.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The reported Status of the corresponding ND::TReconVertex.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,"The reported reconstruction 'quality' of the corresponding  ND::TReconVertex.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The Number of Degrees of Freedom in the reconstruction of the");
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,"The vector of primary true trajectory IDs which contribute to the  ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,"The vector of true trajectory IDs which contribute to the ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,"The number of THits that each truth trajectory contributed to.");
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,"The weighted reconstructed charge deposited by each truth  trajectory.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position of the TVertexState of the corresponding ND::TReconVertex.");
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,"Variance on the position of the TVertexState of the corresponding  ND::TReconVertex.");
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,"Bit flag demarkating valid dimensions for this vertex's position.");
   G__memvar_setup((void*)((long)(&p->Fiducial)-(long)(p)),102,0,0,-1,-1,-1,1,"Fiducial=",0,"The distance to the outside of the fiducial volume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DParticle */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   { ND::TP0DReconModule::TP0DParticle *p; p=(ND::TP0DReconModule::TP0DParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the p0dRecon algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,"The cycle number, based on the first hit.");
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,"Holds internal Ids of Vertices pertinent to this reconstructed particle.");
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,"Holds internal Ids of Particles pertinent to this reconstructed  particle.");
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,"Holds internal Ids of Tracks pertinent to this reconstructed particle.");
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,"Holds internal Ids of Showers pertinent to this reconstructed particle.");
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,"Holds internal Ids of Clusters pertinent to this reconstructed particle.");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,"Holds internal Ids of Nodes pertinent to this reconstructed particle  (probably not what you want for a TP0DParticle).  This vector has the  index in the ND::TP0DReconModule::fNodes vector of the nodes  associated with this object. The nodes for a TP0DParticle don't hold  the expected information for most P0D analyses, so you probably should  be accessing the nodes of the constituent track.");
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,"Holds internal Ids of Hits pertinent to this  reconstructed particle.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,"A count of the Hits associated with this object.");
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The Unique ID of the corresponding ND::TReconPID, used for  global-subdetector matching.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The reported Status of the corresponding ND::TReconPID.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,"The reported reconstruction 'quality' of the corresponding  ND::TReconPID.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The Number of Degrees of Freedom in the reconstruction of the");
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,"The vector of primary true trajectory IDs which contribute to the     ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,"The vector of true trajectory IDs which contribute to the  ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,"The number of THits that each truth trajectory contributed to.");
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,"The weighted reconstructed charge deposited by each truth  trajectory.");
   G__memvar_setup((void*)((long)(&p->SideDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"SideDeposit=",0,"The deposited charge in the side bars.");
   G__memvar_setup((void*)((long)(&p->EndDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EndDeposit=",0,"The deposited charge in the end p0dules.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position of the TPIDState of the corresponding ND::TReconPID.");
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,"Variance on the position of the TPIDState of the corresponding  ND::TReconPID.");
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,"Bit flag demarkating valid dimensions for this particle's position.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"Direction of the TPIDState of the corresponding ND::TReconPID.");
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,"Variance on the TP0DParticle::Direction of the TPIDState of the  corresponding ND::TReconPID.");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),102,0,0,-1,-1,-1,1,"Momentum=",0,"The reconstructed momentum of the corresponding TReconPID.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),102,0,0,-1,-1,-1,1,"Charge=",0,"The reconstructed charge of the corresponding TReconPID.");
   G__memvar_setup((void*)((long)(&p->realPIDNames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"realPIDNames=",0,"Holds the variable names of ND::TRealDatum stored in the TReconPID.");
   G__memvar_setup((void*)((long)(&p->realPIDValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<vector<float> >"),-1,1,"realPIDValues=",0,"Holds the PID variable values from ND::TRealDatum stored in the  TReconPID.");
   G__memvar_setup((void*)((long)(&p->integerPIDNames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"integerPIDNames=",0,"Holds the variable names of ND::TIntegerDatum stored in the TReconPID.");
   G__memvar_setup((void*)((long)(&p->integerPIDValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),G__defined_typename("vector<vector<short> >"),-1,1,"integerPIDValues=",0,"Holds the PID variable values from ND::TIntegerDatum stored in the TReconPID.");
   G__memvar_setup((void*)((long)(&p->PID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"PID=",0,"Potential PIDs (ND::TReconPID::ParticleId) matching with");
   G__memvar_setup((void*)((long)(&p->PID_weight)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"PID_weight=",0,"PID weights for each PID in TP0DParticle::PID.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DShower */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   { ND::TP0DReconModule::TP0DShower *p; p=(ND::TP0DReconModule::TP0DShower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the p0dRecon algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,"The cycle number, based on the first hit.");
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,"Holds internal Ids of Vertices pertinent to this reconstructed shower.");
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,"Holds internal Ids of Particles pertinent to this reconstructed shower.");
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,"Holds internal Ids of Tracks pertinent to this reconstructed shower.");
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,"Holds internal Ids of Showers pertinent to this reconstructed shower.");
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,"Holds internal Ids of Clusters pertinent to this reconstructed shower.");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,"Holds internal Ids of Nodes pertinent to this reconstructed shower.");
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,"Holds internal Ids of Hits pertinent to this reconstructed shower.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,"A count of the Hits associated with this object.");
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The Unique ID of the corresponding ND::TReconShower, used for  global-subdetector matching.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The reported Status of the corresponding ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,"The reported reconstruction 'quality' of the corresponding  ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The Number of Degrees of Freedom in the reconstruction of the corresponding ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,"The vector of primary true trajectory IDs which contribute to the  ND::THits which are constituents of this shower.");
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,"The vector of true trajectory IDs which contribute to the ND::THits which are constituents of this shower.");
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,"The number of THits that each truth trajectory contributed to.");
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,"The weighted reconstructed charge deposited by each truth trajectory.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,"The total reconstructed energy deposit of the corresponding ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->SideDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"SideDeposit=",0,"The deposited charge in the side bars.");
   G__memvar_setup((void*)((long)(&p->EndDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EndDeposit=",0,"The deposited charge in the end p0dules.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position of the TShowerState of the corresponding ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,"Variance on the position of the TShowerState of the corresponding  ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,"Bit flag demarkating valid dimensions for this shower's position.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"Direction of the TShowerState of the corresponding ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,"Variance on the TP0DShower::Direction of the TShowerState of the corresponding ND::TReconShower.");
   G__memvar_setup((void*)((long)(&p->Cone)-(long)(p)),102,0,0,-1,-1,-1,1,"Cone=",0,"The opening angle of the TShowerState cone of the corresponding  TReconShower.");
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),102,0,0,-1,-1,-1,1,"Width=",0,"The 'width' of the shower, the extent perpendicular to the direction.");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),102,0,0,-1,-1,-1,1,"Length=",0,"The RMS length of the shower, the extent parallel to the direction.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DTrack */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   { ND::TP0DReconModule::TP0DTrack *p; p=(ND::TP0DReconModule::TP0DTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the p0dRecon algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,"The cycle number, based on the first hit.");
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,"Holds internal Ids of Vertices pertinent to this reconstructed track.");
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,"Holds internal Ids of Particles pertinent to this reconstructed track.");
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,"Holds internal Ids of Tracks pertinent to this reconstructed track.");
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,"Holds internal Ids of Showers pertinent to this reconstructed track.");
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,"Holds internal Ids of Clusters pertinent to this reconstructed track.");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,"Holds internal Ids of Nodes pertinent to this reconstructed track.");
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,"Holds internal Ids of Hits pertinent to this reconstructed track.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,"A count of the Hits associated with this object.");
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The Unique ID of the corresponding ND::TReconTrack, used for  global-subdetector matching.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"The reported Status of the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,"The reported reconstruction 'quality' of the corresponding  ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"The Number of Degrees of Freedom in the reconstruction of the  corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,"The vector of primary true trajectory IDs which contribute to the ND::THits which are constituents of this track.");
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,"The vector of true trajectory IDs which contribute to the  ND::THits which are constituents of this track.");
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,"The number of THits that each truth trajectory contributed to.");
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,"The weighted reconstructed charge deposited by each truth  trajectory.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,"The total reconstructed energy deposit of the corresponding  ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->SideDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"SideDeposit=",0,"The deposited charge in the side bars.");
   G__memvar_setup((void*)((long)(&p->EndDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EndDeposit=",0,"The deposited charge in the end p0dules.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position of the TTrackState of the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,"Variance on the position of the TTrackState of the corresponding  ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,"Bit flag demarkating valid dimensions for this track's position.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"Direction of the TTrackState of the corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,"Variance on the TP0DTrack::Direction of the TTrackState of the  corresponding ND::TReconTrack.");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),102,0,0,-1,-1,-1,1,"Length=",0,"The length of the track calculated by summing over the distances");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DNode */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   { ND::TP0DReconModule::TP0DNode *p; p=(ND::TP0DReconModule::TP0DNode*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,"Holds internal Ids of Hits pertinent to this reconstruction node.");
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,"The vector of primary true trajectory IDs which contribute to the  ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,"The vector of true trajectory IDs which contribute to the  ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,"The number of THits that each truth trajectory contributed to.");
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,"The weighted reconstructed charge deposited by each truth  trajectory.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,"The total reconstructed energy deposit of the  ND::TMEDepositState of the relevant ND::TReconNode.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position of the TMPositionDirectionState of the corresponding  ND::TReconNode.");
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,"Variance on the position of the TMPositionDirectionState of the  corresponding ND::TReconPID.");
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,"Bit flag demarkating valid dimensions for this node's position.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"Direction of the TMPositionDirectionState of the corresponding  ND::TReconNode.");
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,"Variance on the TP0DNode::Direction of the  TMPositionDirectionState of the corresponding ND::TReconNode.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DHit */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   { ND::TP0DReconModule::TP0DHit *p; p=(ND::TP0DReconModule::TP0DHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->GeomID)-(long)(p)),104,0,0,-1,-1,-1,1,"GeomID=",0,"Geometry Id of the TSingleHit.");
   G__memvar_setup((void*)((long)(&p->ChanID)-(long)(p)),104,0,0,-1,-1,-1,1,"ChanID=",0,"Channel Id of the TSingleHit.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),102,0,0,-1,-1,-1,1,"Charge=",0,"Reconstructed hit charge without attenuation correction from the  corresponding TSingleHit.");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,-1,-1,1,"Time=",0,"Reconstructed hit time from the corresponding TSingleHit.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DCluster */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   { ND::TP0DReconModule::TP0DCluster *p; p=(ND::TP0DReconModule::TP0DCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"The name of the p0dRecon algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,"The cycle number, based on the first hit.");
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,"Holds internal Ids of Vertices pertinent to this reconstructed cluster.");
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,"Holds internal Ids of Particles pertinent to this reconstructed cluster.");
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,"Holds internal Ids of Tracks pertinent to this reconstructed cluster.");
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,"Holds internal Ids of Showers pertinent to this reconstructed cluster.");
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,"Holds internal Ids of Clusters pertinent to this reconstructed cluster.");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,"Holds internal Ids of Nodes pertinent to this reconstructed cluster.");
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,"Holds internal Ids of Hits pertinent to this reconstructed cluster.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,"A count of the Hits associated with this object.");
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,-1,-1,1,"UniqueID=",0,"The Unique ID of the corresponding ND::TReconCluster, used for  global-subdetector matching.");
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,"The vector of primary true trajectory IDs which contribute to the  ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,"The vector of true trajectory IDs which contribute to the  ND::THits which are constituents of this vertex.");
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,"The number of THits that each truth trajectory contributed to.");
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,"The weighted reconstructed charge deposited by each truth  trajectory.");
   G__memvar_setup((void*)((long)(&p->NFiducialHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NFiducialHits=",0,"The number of THits in the cluster which are within the fiducial volume.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,"The total reconstructed energy deposit of the corresponding  ND::TReconCluster.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position of the corresponding ND::TReconCluster.");
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,"Variance on the position of the corresponding  ND::TReconCluster.");
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,"Bit flag demarkating valid dimensions for this cluster's positon.");
   G__memvar_setup((void*)((long)(&p->Moments)-(long)(p)),102,0,0,-1,-1,-1,1,"Moments[9]=",0,"Moments of the cluster stored as a flat 3x3 matrix.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthVerticesModule */
static void G__setup_memvarNDcLcLTTruthVerticesModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthVerticesModule::TTruthVertex */
static void G__setup_memvarNDcLcLTTruthVerticesModulecLcLTTruthVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   { ND::TTruthVerticesModule::TTruthVertex *p; p=(ND::TTruthVerticesModule::TTruthVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,-1,-1,1,"ID=",0,"A number which uniquely identifies this vertex within the event.  This ID is the interface between the Truth Vertices module  and other eventAnalysis modules. Other modules should use this  number to reference trajectories.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"Position and time of the vertex");
   G__memvar_setup((void*)((long)(&p->Generator)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"Generator=",0,"The generator that created the vertex. eg: \"genie:mean@free-spill\"");
   G__memvar_setup((void*)((long)(&p->ReactionCode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"ReactionCode=",0,"The Reaction code according to the generator  For Genie this will be of the form:  \"nu:14;tgt:1000260560;N:2112;proc:Weak[CC],QES;\" For Neut it will be an integer, see definitions here: http://www.t2k.org/asg/xsec/niwgdocs/neut_xsecs/neutmodesC.h/view");
   G__memvar_setup((void*)((long)(&p->Subdetector)-(long)(p)),105,0,0,-1,-1,-1,1,"Subdetector=",0,"Subdetector which the vertex occurs in.");
   G__memvar_setup((void*)((long)(&p->Fiducial)-(long)(p)),100,0,0,-1,-1,-1,1,"Fiducial=",0,"The distance inside the local fiducial volume [mm].  Not currently set for any detector other than the P0D.");
   G__memvar_setup((void*)((long)(&p->NPrimaryTraj)-(long)(p)),105,0,0,-1,-1,-1,1,"NPrimaryTraj=",0,"The number of primary trajectories  (ie: the number of primary  particles exiting the interaction vertex).");
   G__memvar_setup((void*)((long)(&p->PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"PrimaryTrajIDs=",0,"\\brief ID numbers which uniquely identify the trajectories of the  primary particles of the vertex within the event.");
   G__memvar_setup((void*)((long)(&p->NeutrinoPDG)-(long)(p)),105,0,0,-1,-1,-1,1,"NeutrinoPDG=",0,"The PDG number of the incoming neutrino.  Set to 0 in the absence of a neutrino.");
   G__memvar_setup((void*)((long)(&p->NeutrinoMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"NeutrinoMomentum=",0,"The four-momentum of the incoming neutrino.  Set to (-999999.9, -999999.9, -999999.9, -999999.9) in the  absence of a neutrino.");
   G__memvar_setup((void*)((long)(&p->TargetPDG)-(long)(p)),105,0,0,-1,-1,-1,1,"TargetPDG=",0,"The (extended for nuclei) PDG number of the target.  Set to 0 in the absence of a target.");
   G__memvar_setup((void*)((long)(&p->TargetMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"TargetMomentum=",0,"The four-momentum of the target.  Set to (-999999.9, -999999.9, -999999.9, -999999.9) in the  absence of a target.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthTrajectoriesModule */
static void G__setup_memvarNDcLcLTTruthTrajectoriesModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModule));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthTrajectoriesModule::TTruthTrajectory */
static void G__setup_memvarNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   { ND::TTruthTrajectoriesModule::TTruthTrajectory *p; p=(ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,-1,-1,1,"ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDG)-(long)(p)),105,0,0,-1,-1,-1,1,"PDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_string),-1,-1,1,"Name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Category)-(long)(p)),105,0,0,-1,-1,-1,1,"Category=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InitMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"InitMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"InitPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FinalPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"FinalPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParentID)-(long)(p)),105,0,0,-1,-1,-1,1,"ParentID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PrimaryID)-(long)(p)),105,0,0,-1,-1,-1,1,"PrimaryID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mass)-(long)(p)),100,0,0,-1,-1,-1,1,"Mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),105,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Points)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgR),G__defined_typename("vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint>"),-1,1,"Points=",0,"The trajectory points where interactions occured along the  trajectory.");
   G__memvar_setup((void*)((long)(&p->TraceSubdetectors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TraceSubdetectors=",0,"\\brief Vector of integer subdetector codes indicating which subdetectors the particle travelled through.");
   G__memvar_setup((void*)((long)(&p->TraceInActive)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"TraceInActive=",0,"\\brief Vector of booleans indicating whether the particle went through an active part of the corresponding subdetector.");
   G__memvar_setup((void*)((long)(&p->TraceEntrancePosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,1,"TraceEntrancePosition=",0,"\\brief Vector of TLorentzVectors that stores the entrance position of the particle in each subdetector it encounters.");
   G__memvar_setup((void*)((long)(&p->TraceExitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,1,"TraceExitPosition=",0,"\\brief Vector of TLorentzVectors that stores the exit position of the particle in each subdetector it encounters.");
   G__memvar_setup((void*)((long)(&p->TraceEntranceMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,1,"TraceEntranceMomentum=",0,"\\brief Vector of TVector3s that stores the entrance momentum of the particle in each subdetector it encounters.");
   G__memvar_setup((void*)((long)(&p->TraceExitMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,1,"TraceExitMomentum=",0,"\\brief Vector of TVector3s that stores the exit momentum of the particle in each subdetector it encounters.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint */
static void G__setup_memvarNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint));
   { ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint *p; p=(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ProcessType)-(long)(p)),105,0,0,-1,-1,-1,1,"ProcessType=",0,"The process type that caused the Monte Carlo to generate this  point.");
   G__memvar_setup((void*)((long)(&p->PositionX)-(long)(p)),102,0,0,-1,-1,-1,1,"PositionX=",0,"The X position of the trajectory point [mm].");
   G__memvar_setup((void*)((long)(&p->PositionY)-(long)(p)),102,0,0,-1,-1,-1,1,"PositionY=",0,"The Y position of the trajectory point [mm].");
   G__memvar_setup((void*)((long)(&p->PositionZ)-(long)(p)),102,0,0,-1,-1,-1,1,"PositionZ=",0,"The Z position of the trajectory point [mm].");
   G__memvar_setup((void*)((long)(&p->PositionT)-(long)(p)),102,0,0,-1,-1,-1,1,"PositionT=",0,"The time of the trajectory point [ns].");
   G__memvar_setup((void*)((long)(&p->MomentumX)-(long)(p)),102,0,0,-1,-1,-1,1,"MomentumX=",0,"The X momentum of the particle leaving the trajectory point [MeV].");
   G__memvar_setup((void*)((long)(&p->MomentumY)-(long)(p)),102,0,0,-1,-1,-1,1,"MomentumY=",0,"The Y momentum of the particle leaving the trajectory point [MeV].");
   G__memvar_setup((void*)((long)(&p->MomentumZ)-(long)(p)),102,0,0,-1,-1,-1,1,"MomentumZ=",0,"The Z position of the particle leaving the trajectory point [MeV].");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::TIOFeatures */
static void G__setup_memvarROOTcLcLTIOFeatures(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures));
   { ROOT::TIOFeatures *p; p=(ROOT::TIOFeatures*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fIOBits)-(long)(p)),98,0,0,-1,-1,-1,1,"fIOBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTRExReconModule::TTPCAnaJunction */
static void G__setup_memvarNDcLcLTTRExReconModulecLcLTTPCAnaJunction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction));
   { ND::TTRExReconModule::TTPCAnaJunction *p; p=(ND::TTRExReconModule::TTPCAnaJunction*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->JunctionID)-(long)(p)),105,0,0,-1,-1,-1,1,"JunctionID=",0,"A unique identifier for the junction within the pattern.");
   G__memvar_setup((void*)((long)(&p->JunctionMatchingID)-(long)(p)),105,0,0,-1,-1,-1,1,"JunctionMatchingID=",0,"< A unique identifier for the junction within the event.");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"The spatial coordinates of the junction");
   G__memvar_setup((void*)((long)(&p->NPaths)-(long)(p)),105,0,0,-1,-1,-1,1,"NPaths=",0,"The number of paths connected to the junction.");
   G__memvar_setup((void*)((long)(&p->PathIDs)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"PathIDs=",0,"[NPaths]");
   G__memvar_setup((void*)((long)(&p->MaximumCoordinates)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"MaximumCoordinates=",0,"The most extreme hit positions in the positive direction");
   G__memvar_setup((void*)((long)(&p->MinimumCoordinates)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"MinimumCoordinates=",0,"The most extreme hit positions in the negative direction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTRExReconModule::TTPCAnaPath */
static void G__setup_memvarNDcLcLTTRExReconModulecLcLTTPCAnaPath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath));
   { ND::TTRExReconModule::TTPCAnaPath *p; p=(ND::TTRExReconModule::TTPCAnaPath*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PathID)-(long)(p)),105,0,0,-1,-1,-1,1,"PathID=",0,"A unique identifier for the path within the pattern.");
   G__memvar_setup((void*)((long)(&p->G4ID)-(long)(p)),105,0,0,-1,-1,-1,1,"G4ID=",0,"G4 ID of the primary true trajectory associated with this path.");
   G__memvar_setup((void*)((long)(&p->PathMatchingID)-(long)(p)),105,0,0,-1,-1,-1,1,"PathMatchingID=",0,"< A unique identifier for the path within the event.");
   G__memvar_setup((void*)((long)(&p->FirstPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"FirstPosition=",0,"The start position of the path.");
   G__memvar_setup((void*)((long)(&p->LastPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"LastPosition=",0,"The end position of the path.");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),100,0,0,-1,-1,-1,1,"Time=",0,"The T0 for the path.");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"The length of the path.");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"The momentum of the path.");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"The momentum error of the path.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"The direction of the path.");
   G__memvar_setup((void*)((long)(&p->IsContained)-(long)(p)),103,0,0,-1,-1,-1,1,"IsContained=",0,"True if the path does not leave the TPC; false otherwise.");
   G__memvar_setup((void*)((long)(&p->LikFit)-(long)(p)),103,0,0,-1,-1,-1,1,"LikFit=",0,"True if the likelihood fit was performed");
   G__memvar_setup((void*)((long)(&p->Success)-(long)(p)),103,0,0,-1,-1,-1,1,"Success=",0,"True if the likelihood fit succeeded");
   G__memvar_setup((void*)((long)(&p->FitLikelihood)-(long)(p)),100,0,0,-1,-1,-1,1,"FitLikelihood=",0,"Value of log likelihood from fit");
   G__memvar_setup((void*)((long)(&p->T0Source)-(long)(p)),105,0,0,-1,-1,-1,1,"T0Source=",0,"Enumerator of T0 sources.");
   G__memvar_setup((void*)((long)(&p->NClusters)-(long)(p)),105,0,0,-1,-1,-1,1,"NClusters=",0,"Number of clusters in the path.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"Charge of the path");
   G__memvar_setup((void*)((long)(&p->ElePull)-(long)(p)),100,0,0,-1,-1,-1,1,"ElePull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EleExp)-(long)(p)),100,0,0,-1,-1,-1,1,"EleExp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EleSigma)-(long)(p)),100,0,0,-1,-1,-1,1,"EleSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonPull)-(long)(p)),100,0,0,-1,-1,-1,1,"MuonPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonExp)-(long)(p)),100,0,0,-1,-1,-1,1,"MuonExp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonSigma)-(long)(p)),100,0,0,-1,-1,-1,1,"MuonSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PionPull)-(long)(p)),100,0,0,-1,-1,-1,1,"PionPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PionExp)-(long)(p)),100,0,0,-1,-1,-1,1,"PionExp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PionSigma)-(long)(p)),100,0,0,-1,-1,-1,1,"PionSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProtonPull)-(long)(p)),100,0,0,-1,-1,-1,1,"ProtonPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProtonExp)-(long)(p)),100,0,0,-1,-1,-1,1,"ProtonExp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProtonSigma)-(long)(p)),100,0,0,-1,-1,-1,1,"ProtonSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KaonPull)-(long)(p)),100,0,0,-1,-1,-1,1,"KaonPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KaonExp)-(long)(p)),100,0,0,-1,-1,-1,1,"KaonExp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KaonSigma)-(long)(p)),100,0,0,-1,-1,-1,1,"KaonSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDist)-(long)(p)),100,0,0,-1,-1,-1,1,"PDist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PEField)-(long)(p)),100,0,0,-1,-1,-1,1,"PEField=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T0Range)-(long)(p)),100,0,0,-1,-1,-1,1,"T0Range[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T0RangeDeltaX)-(long)(p)),100,0,0,-1,-1,-1,1,"T0RangeDeltaX[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID)-(long)(p)),105,0,0,-1,-1,-1,1,"PID=",0,"The PID of the path.");
   G__memvar_setup((void*)((long)(&p->NetCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"NetCharge=",0,"The total charge left by the path on the micromegas");
   G__memvar_setup((void*)((long)(&p->NJunctions)-(long)(p)),105,0,0,-1,-1,-1,1,"NJunctions=",0,"The number of junctions to which the path connects.");
   G__memvar_setup((void*)((long)(&p->JunctionIDs)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"JunctionIDs=",0,"[NJunctions]");
   G__memvar_setup((void*)((long)(&p->NMatchingPaths)-(long)(p)),105,0,0,-1,-1,-1,1,"NMatchingPaths=",0,"The number of paths to which this path might be matched.");
   G__memvar_setup((void*)((long)(&p->MatchingPathIDs)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"MatchingPathIDs=",0,"[NMatchingPaths]");
   G__memvar_setup((void*)((long)(&p->PathMatchingLikelihood)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"PathMatchingLikelihood=",0,"[NMatchingPaths]");
   G__memvar_setup((void*)((long)(&p->NMatchingPatterns)-(long)(p)),105,0,0,-1,-1,-1,1,"NMatchingPatterns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MatchingPatternIDs)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"MatchingPatternIDs=",0,"[NMatchingPatterns]");
   G__memvar_setup((void*)((long)(&p->MatchingPatternPathIDs)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"MatchingPatternPathIDs=",0,"[NMatchingPatterns]");
   G__memvar_setup((void*)((long)(&p->PatternMatchingLikelihood)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"PatternMatchingLikelihood=",0,"[NMatchingPatterns]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaroaAnalysisReaderProjectDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncND(void) {
   /* ND */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ND));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTND280Event(void) {
   /* ND::TND280Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event));
   G__memfunc_setup("TND280Event",898,G__oaAnalysisReaderProjectDict_169_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TND280Event",898,G__oaAnalysisReaderProjectDict_169_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event), -1, 0, 1, 1, 1, 0, "u 'ND::TND280Event' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_169_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TND280Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_169_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_169_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TND280Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_169_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TND280Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_169_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_169_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_169_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_169_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TND280Event", 1024, G__oaAnalysisReaderProjectDict_169_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_169_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event), -1, 1, 1, 1, 1, 0, "u 'ND::TND280Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTDataVector(void) {
   /* ND::TDataVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector));
   G__memfunc_setup("TDataVector",1089,G__oaAnalysisReaderProjectDict_170_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDataVector",1089,G__oaAnalysisReaderProjectDict_170_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector), -1, 0, 1, 1, 1, 0, "u 'ND::TDataVector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_170_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TDataVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_170_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDataVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_170_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TDataVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_170_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TDataVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_170_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_170_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDataVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_170_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDataVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_170_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDataVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_170_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDataVector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDataVector", 1215, G__oaAnalysisReaderProjectDict_170_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_170_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector), -1, 1, 1, 1, 1, 0, "u 'ND::TDataVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTData(void) {
   /* ND::TData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData));
   G__memfunc_setup("TData",462,G__oaAnalysisReaderProjectDict_171_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TData",462,G__oaAnalysisReaderProjectDict_171_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData), -1, 0, 1, 1, 1, 0, "u 'ND::TData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_171_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_171_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_171_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_171_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_171_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_171_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_171_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_171_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_171_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TData", 588, G__oaAnalysisReaderProjectDict_171_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_171_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData), -1, 1, 1, 1, 1, 0, "u 'ND::TData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTDatum(void) {
   /* ND::TDatum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum));
   G__memfunc_setup("TDatum",591,G__oaAnalysisReaderProjectDict_172_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDatum",591,G__oaAnalysisReaderProjectDict_172_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum), -1, 0, 1, 1, 1, 0, "u 'ND::TDatum' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_172_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TDatum::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_172_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDatum::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_172_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TDatum::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_172_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TDatum::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_172_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_172_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDatum::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_172_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDatum::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_172_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDatum::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_172_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDatum::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDatum", 717, G__oaAnalysisReaderProjectDict_172_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_172_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum), -1, 1, 1, 1, 1, 0, "u 'ND::TDatum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTND280Context(void) {
   /* ND::TND280Context */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context));
   G__memfunc_setup("TND280Context",1125,G__oaAnalysisReaderProjectDict_193_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TND280Context",1125,G__oaAnalysisReaderProjectDict_193_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context), -1, 0, 1, 1, 1, 0, "u 'ND::TND280Context' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TND280Context", 1251, G__oaAnalysisReaderProjectDict_193_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_193_0_4, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context), -1, 1, 1, 1, 1, 0, "u 'ND::TND280Context' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSHAHashValue(void) {
   /* ND::TSHAHashValue */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue));
   G__memfunc_setup("TSHAHashValue",1201,G__oaAnalysisReaderProjectDict_194_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSHAHashValue",1201,G__oaAnalysisReaderProjectDict_194_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue), -1, 0, 1, 1, 1, 0, "u 'ND::TSHAHashValue' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSHAHashValue", 1327, G__oaAnalysisReaderProjectDict_194_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_194_0_4, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue), -1, 1, 1, 1, 1, 0, "u 'ND::TSHAHashValue' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTAlignmentId(void) {
   /* ND::TAlignmentId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId));
   G__memfunc_setup("TAlignmentId",1184,G__oaAnalysisReaderProjectDict_195_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAlignmentId",1184,G__oaAnalysisReaderProjectDict_195_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId), -1, 0, 1, 1, 1, 0, "u 'ND::TAlignmentId' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlignmentId", 1310, G__oaAnalysisReaderProjectDict_195_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_195_0_4, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId), -1, 1, 1, 1, 1, 0, "u 'ND::TAlignmentId' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTND280EventcLcLHeader(void) {
   /* ND::TND280Event::Header */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader));
   G__memfunc_setup("Header",585,G__oaAnalysisReaderProjectDict_196_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Header",585,G__oaAnalysisReaderProjectDict_196_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader), -1, 0, 1, 1, 1, 0, "u 'ND::TND280Event::Header' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_196_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TND280Event::Header::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_196_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Header::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_196_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TND280Event::Header::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_196_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TND280Event::Header::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__oaAnalysisReaderProjectDict_196_0_7, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__oaAnalysisReaderProjectDict_196_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__oaAnalysisReaderProjectDict_196_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_196_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_196_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Header::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_196_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::Header::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_196_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Header::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_196_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::Header::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Header", 711, G__oaAnalysisReaderProjectDict_196_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_196_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader), -1, 1, 1, 1, 1, 0, "u 'ND::TND280Event::Header' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLNRooTrackerVtx(void) {
   /* ND::NRooTrackerVtx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx));
   G__memfunc_setup("NRooTrackerVtx",1420,G__oaAnalysisReaderProjectDict_197_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NRooTrackerVtx",1420,G__oaAnalysisReaderProjectDict_197_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx), -1, 0, 1, 1, 1, 0, "u 'ND::NRooTrackerVtx' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_197_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::NRooTrackerVtx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_197_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::NRooTrackerVtx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_197_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::NRooTrackerVtx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_197_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::NRooTrackerVtx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_197_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_197_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::NRooTrackerVtx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_197_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::NRooTrackerVtx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_197_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::NRooTrackerVtx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_197_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::NRooTrackerVtx::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~NRooTrackerVtx", 1546, G__oaAnalysisReaderProjectDict_197_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_197_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx), -1, 1, 1, 1, 1, 0, "u 'ND::NRooTrackerVtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLJNuBeamFlux(void) {
   /* ND::JNuBeamFlux */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux));
   G__memfunc_setup("JNuBeamFlux",1057,G__oaAnalysisReaderProjectDict_198_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JNuBeamFlux",1057,G__oaAnalysisReaderProjectDict_198_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux), -1, 0, 1, 1, 1, 0, "u 'ND::JNuBeamFlux' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_198_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::JNuBeamFlux::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_198_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::JNuBeamFlux::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_198_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::JNuBeamFlux::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_198_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::JNuBeamFlux::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_198_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_198_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::JNuBeamFlux::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_198_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::JNuBeamFlux::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_198_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::JNuBeamFlux::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_198_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::JNuBeamFlux::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JNuBeamFlux", 1183, G__oaAnalysisReaderProjectDict_198_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_198_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux), -1, 1, 1, 1, 1, 0, "u 'ND::JNuBeamFlux' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLRooTrackerVtxBase(void) {
   /* ND::RooTrackerVtxBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase));
   G__memfunc_setup("RooTrackerVtxBase",1721,G__oaAnalysisReaderProjectDict_199_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooTrackerVtxBase",1721,G__oaAnalysisReaderProjectDict_199_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase), -1, 0, 1, 1, 1, 0, "u 'ND::RooTrackerVtxBase' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_199_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::RooTrackerVtxBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_199_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::RooTrackerVtxBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_199_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::RooTrackerVtxBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_199_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::RooTrackerVtxBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_199_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_199_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::RooTrackerVtxBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_199_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::RooTrackerVtxBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_199_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::RooTrackerVtxBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_199_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::RooTrackerVtxBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooTrackerVtxBase", 1847, G__oaAnalysisReaderProjectDict_199_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_199_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase), -1, 1, 1, 1, 1, 0, "u 'ND::RooTrackerVtxBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLGRooTrackerVtx(void) {
   /* ND::GRooTrackerVtx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx));
   G__memfunc_setup("GRooTrackerVtx",1413,G__oaAnalysisReaderProjectDict_201_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GRooTrackerVtx",1413,G__oaAnalysisReaderProjectDict_201_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx), -1, 0, 1, 1, 1, 0, "u 'ND::GRooTrackerVtx' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_201_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::GRooTrackerVtx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_201_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::GRooTrackerVtx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_201_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::GRooTrackerVtx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_201_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::GRooTrackerVtx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_201_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_201_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::GRooTrackerVtx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_201_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::GRooTrackerVtx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_201_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::GRooTrackerVtx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_201_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::GRooTrackerVtx::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GRooTrackerVtx", 1539, G__oaAnalysisReaderProjectDict_201_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_201_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx), -1, 1, 1, 1, 1, 0, "u 'ND::GRooTrackerVtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTRExReconModule(void) {
   /* ND::TTRExReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTRExReconModulecLcLTTPCAnaPattern(void) {
   /* ND::TTRExReconModule::TTPCAnaPattern */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern));
   G__memfunc_setup("TTPCAnaPattern",1321,G__oaAnalysisReaderProjectDict_203_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCAnaPattern",1321,G__oaAnalysisReaderProjectDict_203_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern), -1, 0, 1, 1, 1, 0, "u 'ND::TTRExReconModule::TTPCAnaPattern' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_203_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTRExReconModule::TTPCAnaPattern::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_203_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaPattern::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_203_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTRExReconModule::TTPCAnaPattern::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_203_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTRExReconModule::TTPCAnaPattern::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_203_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_203_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaPattern::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_203_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTRExReconModule::TTPCAnaPattern::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_203_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaPattern::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_203_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTRExReconModule::TTPCAnaPattern::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCAnaPattern", 1447, G__oaAnalysisReaderProjectDict_203_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_203_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern), -1, 1, 1, 1, 1, 0, "u 'ND::TTRExReconModule::TTPCAnaPattern' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGeometrySummaryModule(void) {
   /* ND::TGeometrySummaryModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void) {
   /* ND::TGeometrySummaryModule::TDetectorBoundingBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   G__memfunc_setup("TDetectorBoundingBox",2029,G__oaAnalysisReaderProjectDict_213_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDetectorBoundingBox",2029,G__oaAnalysisReaderProjectDict_213_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox), -1, 0, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TDetectorBoundingBox' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_213_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_213_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_213_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_213_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_213_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_213_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_213_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_213_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_213_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDetectorBoundingBox", 2155, G__oaAnalysisReaderProjectDict_213_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_213_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox), -1, 1, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TDetectorBoundingBox' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void) {
   /* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   G__memfunc_setup("TTPCMicroMegasVolumes",2061,G__oaAnalysisReaderProjectDict_251_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCMicroMegasVolumes",2061,G__oaAnalysisReaderProjectDict_251_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes), -1, 0, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TTPCMicroMegasVolumes' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_251_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_251_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_251_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_251_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_251_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_251_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_251_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_251_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_251_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCMicroMegasVolumes", 2187, G__oaAnalysisReaderProjectDict_251_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_251_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes), -1, 1, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TTPCMicroMegasVolumes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcOconstsPTGeoNodemUgR(void) {
   /* pair<int,const TGeoNode*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR));
   G__memfunc_setup("pair<int,const TGeoNode*>",2307,G__oaAnalysisReaderProjectDict_567_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,const TGeoNode*>",2307,G__oaAnalysisReaderProjectDict_567_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a U 'TGeoNode' - 51 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR), -1, 1, 1, 1, 4, 0, "u 'pair<int,const TGeoNode*>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,const TGeoNode*>", 2307, G__oaAnalysisReaderProjectDict_567_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,const TGeoNode*>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,const TGeoNode*>", 2433, G__oaAnalysisReaderProjectDict_567_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void) {
   /* pair<int,pair<int,const TGeoNode*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR));
   G__memfunc_setup("pair<int,pair<int,const TGeoNode*> >",3264,G__oaAnalysisReaderProjectDict_571_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,pair<int,const TGeoNode*> >",3264,G__oaAnalysisReaderProjectDict_571_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a u 'pair<int,const TGeoNode*>' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR), -1, 1, 1, 1, 4, 0, "u 'pair<int,pair<int,const TGeoNode*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,pair<int,const TGeoNode*> >", 3264, G__oaAnalysisReaderProjectDict_571_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,pair<int,const TGeoNode*> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,pair<int,const TGeoNode*> >", 3390, G__oaAnalysisReaderProjectDict_571_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBeamSummaryDataModule(void) {
   /* ND::TBeamSummaryDataModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void) {
   /* ND::TBeamSummaryDataModule::TBeamSummaryData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   G__memfunc_setup("TBeamSummaryData",1585,G__oaAnalysisReaderProjectDict_576_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBeamSummaryData",1585,G__oaAnalysisReaderProjectDict_576_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData), -1, 0, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_576_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_576_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_576_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_576_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_576_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_576_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_576_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_576_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_576_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TBeamSummaryData", 1711, G__oaAnalysisReaderProjectDict_576_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_576_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData), -1, 1, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void) {
   /* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   G__memfunc_setup("TOtherData",976,G__oaAnalysisReaderProjectDict_577_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOtherData",976,G__oaAnalysisReaderProjectDict_577_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData), -1, 0, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_577_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_577_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_577_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_577_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_577_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_577_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_577_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_577_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_577_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOtherData", 1102, G__oaAnalysisReaderProjectDict_577_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_577_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData), -1, 1, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModule(void) {
   /* ND::TFgdOnlyModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void) {
   /* ND::TFgdOnlyModule::TFgd2DIsoTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   G__memfunc_setup("TFgd2DIsoTrack",1275,G__oaAnalysisReaderProjectDict_579_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd2DIsoTrack",1275,G__oaAnalysisReaderProjectDict_579_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DIsoTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_579_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_579_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_579_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_579_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_579_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_579_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_579_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_579_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_579_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd2DIsoTrack", 1401, G__oaAnalysisReaderProjectDict_579_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_579_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DIsoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void) {
   /* ND::TFgdOnlyModule::TFgd3DIsoTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   G__memfunc_setup("TFgd3DIsoTrack",1276,G__oaAnalysisReaderProjectDict_589_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd3DIsoTrack",1276,G__oaAnalysisReaderProjectDict_589_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DIsoTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_589_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_589_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_589_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_589_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_589_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_589_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_589_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_589_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_589_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd3DIsoTrack", 1402, G__oaAnalysisReaderProjectDict_589_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_589_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DIsoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void) {
   /* ND::TFgdOnlyModule::TFgd3DShowerPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   G__memfunc_setup("TFgd3DShowerPID",1329,G__oaAnalysisReaderProjectDict_590_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd3DShowerPID",1329,G__oaAnalysisReaderProjectDict_590_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerPID' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_590_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_590_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_590_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_590_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_590_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_590_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_590_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_590_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_590_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd3DShowerPID", 1455, G__oaAnalysisReaderProjectDict_590_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_590_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void) {
   /* ND::TFgdOnlyModule::TFgd3DShowerHyp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   G__memfunc_setup("TFgd3DShowerHyp",1413,G__oaAnalysisReaderProjectDict_591_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd3DShowerHyp",1413,G__oaAnalysisReaderProjectDict_591_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerHyp' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_591_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_591_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_591_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_591_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_591_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_591_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_591_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_591_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_591_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd3DShowerHyp", 1539, G__oaAnalysisReaderProjectDict_591_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_591_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerHyp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void) {
   /* ND::TFgdOnlyModule::TFgd2DCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   G__memfunc_setup("TFgd2DCluster",1213,G__oaAnalysisReaderProjectDict_592_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd2DCluster",1213,G__oaAnalysisReaderProjectDict_592_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_592_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_592_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_592_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_592_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_592_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_592_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_592_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_592_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_592_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd2DCluster", 1339, G__oaAnalysisReaderProjectDict_592_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_592_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSmrdReconModule(void) {
   /* ND::TSmrdReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdReconHit(void) {
   /* ND::TSmrdReconModule::TSmrdReconHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   G__memfunc_setup("TSmrdReconHit",1286,G__oaAnalysisReaderProjectDict_594_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSmrdReconHit",1286,G__oaAnalysisReaderProjectDict_594_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit), -1, 0, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdReconHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_594_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_594_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_594_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_594_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_594_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_594_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_594_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdReconHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_594_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_594_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdReconHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSmrdReconHit", 1412, G__oaAnalysisReaderProjectDict_594_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_594_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit), -1, 1, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdReconHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void) {
   /* ND::TSmrdReconModule::TSmrdIsoTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   G__memfunc_setup("TSmrdIsoTrack",1290,G__oaAnalysisReaderProjectDict_595_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSmrdIsoTrack",1290,G__oaAnalysisReaderProjectDict_595_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdIsoTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_595_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_595_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_595_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_595_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_595_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_595_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_595_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_595_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_595_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSmrdIsoTrack", 1416, G__oaAnalysisReaderProjectDict_595_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_595_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdIsoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModule(void) {
   /* ND::TTrackerReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerVertex(void) {
   /* ND::TTrackerReconModule::TTrackerVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   G__memfunc_setup("TTrackerVertex",1438,G__oaAnalysisReaderProjectDict_597_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerVertex",1438,G__oaAnalysisReaderProjectDict_597_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_597_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_597_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_597_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_597_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_597_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_597_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_597_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_597_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_597_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerVertex", 1564, G__oaAnalysisReaderProjectDict_597_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_597_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerResult(void) {
   /* ND::TTrackerReconModule::TTrackerResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   G__memfunc_setup("TTrackerResult",1439,G__oaAnalysisReaderProjectDict_598_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerResult",1439,G__oaAnalysisReaderProjectDict_598_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerResult' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_598_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerResult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_598_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerResult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_598_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerResult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_598_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerResult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_598_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_598_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerResult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_598_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerResult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_598_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerResult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_598_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerResult::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerResult", 1565, G__oaAnalysisReaderProjectDict_598_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_598_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrueParticle(void) {
   /* ND::TTrackerReconModule::TTrueParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   G__memfunc_setup("TTrueParticle",1320,G__oaAnalysisReaderProjectDict_599_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrueParticle",1320,G__oaAnalysisReaderProjectDict_599_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrueParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_599_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrueParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_599_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrueParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_599_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrueParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_599_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrueParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_599_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_599_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrueParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_599_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrueParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_599_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrueParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_599_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrueParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrueParticle", 1446, G__oaAnalysisReaderProjectDict_599_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_599_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrueParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrueVertex(void) {
   /* ND::TTrueVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex));
   G__memfunc_setup("TTrueVertex",1138,G__oaAnalysisReaderProjectDict_600_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrueVertex",1138,G__oaAnalysisReaderProjectDict_600_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TTrueVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_600_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrueVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_600_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_600_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrueVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_600_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrueVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_600_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_600_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_600_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_600_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_600_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrueVertex", 1264, G__oaAnalysisReaderProjectDict_600_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_600_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TTrueVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerConstituent(void) {
   /* ND::TTrackerReconModule::TTrackerConstituent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   G__memfunc_setup("TTrackerConstituent",1984,G__oaAnalysisReaderProjectDict_601_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerConstituent",1984,G__oaAnalysisReaderProjectDict_601_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerConstituent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_601_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_601_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_601_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_601_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_601_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_601_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_601_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerConstituent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_601_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_601_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerConstituent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerConstituent", 2110, G__oaAnalysisReaderProjectDict_601_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_601_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerConstituent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTPCTrack(void) {
   /* ND::TTrackerReconModule::TTPCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   G__memfunc_setup("TTPCTrack",816,G__oaAnalysisReaderProjectDict_602_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCTrack",816,G__oaAnalysisReaderProjectDict_602_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTPCTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_602_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTPCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_602_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTPCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_602_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTPCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_602_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTPCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_602_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_602_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTPCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_602_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTPCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_602_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTPCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_602_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTPCTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCTrack", 942, G__oaAnalysisReaderProjectDict_602_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_602_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTPCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTFGDTrack(void) {
   /* ND::TTrackerReconModule::TFGDTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   G__memfunc_setup("TFGDTrack",794,G__oaAnalysisReaderProjectDict_603_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFGDTrack",794,G__oaAnalysisReaderProjectDict_603_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TFGDTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_603_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TFGDTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_603_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TFGDTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_603_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TFGDTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_603_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TFGDTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_603_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_603_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TFGDTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_603_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TFGDTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_603_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TFGDTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_603_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TFGDTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFGDTrack", 920, G__oaAnalysisReaderProjectDict_603_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_603_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TFGDTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerNode(void) {
   /* ND::TTrackerReconModule::TTrackerNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   G__memfunc_setup("TTrackerNode",1190,G__oaAnalysisReaderProjectDict_604_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerNode",1190,G__oaAnalysisReaderProjectDict_604_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerNode' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_604_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_604_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_604_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_604_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_604_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_604_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_604_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_604_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_604_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerNode::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerNode", 1316, G__oaAnalysisReaderProjectDict_604_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_604_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackOther(void) {
   /* ND::TTrackerReconModule::TTrackOther */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   G__memfunc_setup("TTrackOther",1099,G__oaAnalysisReaderProjectDict_609_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackOther",1099,G__oaAnalysisReaderProjectDict_609_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackOther' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_609_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackOther::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_609_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackOther::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_609_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackOther::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_609_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackOther::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_609_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_609_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackOther::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_609_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackOther::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_609_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackOther::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_609_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackOther::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackOther", 1225, G__oaAnalysisReaderProjectDict_609_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_609_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackOther' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTUnusedHit(void) {
   /* ND::TTrackerReconModule::TUnusedHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   G__memfunc_setup("TUnusedHit",1005,G__oaAnalysisReaderProjectDict_610_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TUnusedHit",1005,G__oaAnalysisReaderProjectDict_610_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TUnusedHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_610_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TUnusedHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_610_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TUnusedHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_610_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TUnusedHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_610_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TUnusedHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_610_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_610_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TUnusedHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_610_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TUnusedHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_610_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TUnusedHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_610_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TUnusedHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TUnusedHit", 1131, G__oaAnalysisReaderProjectDict_610_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_610_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TUnusedHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModule(void) {
   /* ND::TGlobalReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTpcPID(void) {
   /* ND::TGlobalReconModule::TTpcPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID));
   G__memfunc_setup("TTpcPID",600,G__oaAnalysisReaderProjectDict_612_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTpcPID",600,G__oaAnalysisReaderProjectDict_612_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTpcPID' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_612_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TTpcPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_612_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTpcPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_612_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TTpcPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_612_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TTpcPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_612_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_612_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTpcPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_612_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTpcPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_612_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTpcPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_612_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTpcPID::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTpcPID", 726, G__oaAnalysisReaderProjectDict_612_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_612_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTpcPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrueParticle(void) {
   /* ND::TTrueParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle));
   G__memfunc_setup("TTrueParticle",1320,G__oaAnalysisReaderProjectDict_613_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrueParticle",1320,G__oaAnalysisReaderProjectDict_613_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle), -1, 0, 1, 1, 1, 0, "u 'ND::TTrueParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_613_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrueParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_613_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_613_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrueParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_613_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrueParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_613_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_613_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_613_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_613_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_613_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrueParticle", 1446, G__oaAnalysisReaderProjectDict_613_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_613_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle), -1, 1, 1, 1, 1, 0, "u 'ND::TTrueParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalVertex(void) {
   /* ND::TGlobalReconModule::TGlobalVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   G__memfunc_setup("TGlobalVertex",1315,G__oaAnalysisReaderProjectDict_618_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalVertex",1315,G__oaAnalysisReaderProjectDict_618_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_618_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_618_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_618_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_618_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_618_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_618_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_618_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_618_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_618_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalVertex", 1441, G__oaAnalysisReaderProjectDict_618_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_618_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTVertexConstituent(void) {
   /* ND::TGlobalReconModule::TVertexConstituent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   G__memfunc_setup("TVertexConstituent",1906,G__oaAnalysisReaderProjectDict_619_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVertexConstituent",1906,G__oaAnalysisReaderProjectDict_619_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TVertexConstituent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_619_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TVertexConstituent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_619_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TVertexConstituent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_619_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TVertexConstituent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_619_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TVertexConstituent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_619_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_619_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TVertexConstituent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_619_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TVertexConstituent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_619_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TVertexConstituent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_619_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TVertexConstituent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVertexConstituent", 2032, G__oaAnalysisReaderProjectDict_619_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_619_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TVertexConstituent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFgdTimeBin(void) {
   /* ND::TGlobalReconModule::TFgdTimeBin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   G__memfunc_setup("TFgdTimeBin",1037,G__oaAnalysisReaderProjectDict_620_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgdTimeBin",1037,G__oaAnalysisReaderProjectDict_620_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFgdTimeBin' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_620_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_620_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_620_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_620_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_620_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_620_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_620_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFgdTimeBin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_620_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_620_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFgdTimeBin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgdTimeBin", 1163, G__oaAnalysisReaderProjectDict_620_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_620_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFgdTimeBin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTOutermostHits(void) {
   /* ND::TGlobalReconModule::TOutermostHits */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   G__memfunc_setup("TOutermostHits",1470,G__oaAnalysisReaderProjectDict_621_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOutermostHits",1470,G__oaAnalysisReaderProjectDict_621_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TOutermostHits' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_621_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TOutermostHits::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_621_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TOutermostHits::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_621_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TOutermostHits::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_621_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TOutermostHits::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_621_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_621_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TOutermostHits::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_621_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TOutermostHits::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_621_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TOutermostHits::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_621_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TOutermostHits::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOutermostHits", 1596, G__oaAnalysisReaderProjectDict_621_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_621_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TOutermostHits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalHit(void) {
   /* ND::TGlobalReconModule::TGlobalHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   G__memfunc_setup("TGlobalHit",970,G__oaAnalysisReaderProjectDict_622_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalHit",970,G__oaAnalysisReaderProjectDict_622_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_622_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_622_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_622_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_622_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_622_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_622_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_622_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_622_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_622_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalHit", 1096, G__oaAnalysisReaderProjectDict_622_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_622_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPID(void) {
   /* ND::TGlobalReconModule::TGlobalPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   G__memfunc_setup("TGlobalPID",898,G__oaAnalysisReaderProjectDict_623_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalPID",898,G__oaAnalysisReaderProjectDict_623_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPID' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_623_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_623_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_623_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_623_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_623_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_623_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_623_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_623_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_623_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPID::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalPID", 1024, G__oaAnalysisReaderProjectDict_623_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_623_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCObject(void) {
   /* ND::TGlobalReconModule::TTPCObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   G__memfunc_setup("TTPCObject",914,G__oaAnalysisReaderProjectDict_624_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCObject",914,G__oaAnalysisReaderProjectDict_624_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_624_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TTPCObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_624_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_624_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TTPCObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_624_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TTPCObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_624_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_624_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_624_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_624_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_624_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCObject", 1040, G__oaAnalysisReaderProjectDict_624_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_624_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSubBaseObject(void) {
   /* ND::TSubBaseObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject));
   G__memfunc_setup("TSubBaseObject",1360,G__oaAnalysisReaderProjectDict_625_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSubBaseObject",1360,G__oaAnalysisReaderProjectDict_625_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject), -1, 0, 1, 1, 1, 0, "u 'ND::TSubBaseObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_625_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSubBaseObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_625_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_625_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSubBaseObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_625_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSubBaseObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_625_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_625_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_625_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_625_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_625_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSubBaseObject", 1486, G__oaAnalysisReaderProjectDict_625_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_625_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject), -1, 1, 1, 1, 1, 0, "u 'ND::TSubBaseObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFGDObject(void) {
   /* ND::TGlobalReconModule::TFGDObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   G__memfunc_setup("TFGDObject",892,G__oaAnalysisReaderProjectDict_626_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFGDObject",892,G__oaAnalysisReaderProjectDict_626_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFGDObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_626_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TFGDObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_626_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFGDObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_626_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TFGDObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_626_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TFGDObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_626_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_626_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFGDObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_626_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFGDObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_626_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFGDObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_626_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFGDObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFGDObject", 1018, G__oaAnalysisReaderProjectDict_626_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_626_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFGDObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTECALObject(void) {
   /* ND::TGlobalReconModule::TECALObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   G__memfunc_setup("TECALObject",960,G__oaAnalysisReaderProjectDict_631_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALObject",960,G__oaAnalysisReaderProjectDict_631_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TECALObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_631_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TECALObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_631_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TECALObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_631_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TECALObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_631_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TECALObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_631_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_631_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TECALObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_631_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TECALObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_631_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TECALObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_631_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TECALObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALObject", 1086, G__oaAnalysisReaderProjectDict_631_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_631_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TECALObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSubBaseShowerObject(void) {
   /* ND::TSubBaseShowerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject));
   G__memfunc_setup("TSubBaseShowerObject",1992,G__oaAnalysisReaderProjectDict_632_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSubBaseShowerObject",1992,G__oaAnalysisReaderProjectDict_632_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject), -1, 0, 1, 1, 1, 0, "u 'ND::TSubBaseShowerObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_632_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSubBaseShowerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_632_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseShowerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_632_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSubBaseShowerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_632_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSubBaseShowerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_632_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_632_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseShowerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_632_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseShowerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_632_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseShowerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_632_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseShowerObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSubBaseShowerObject", 2118, G__oaAnalysisReaderProjectDict_632_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_632_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject), -1, 1, 1, 1, 1, 0, "u 'ND::TSubBaseShowerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTP0DObject(void) {
   /* ND::TGlobalReconModule::TP0DObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   G__memfunc_setup("TP0DObject",879,G__oaAnalysisReaderProjectDict_633_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DObject",879,G__oaAnalysisReaderProjectDict_633_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TP0DObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_633_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TP0DObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_633_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TP0DObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_633_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TP0DObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_633_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TP0DObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_633_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_633_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TP0DObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_633_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TP0DObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_633_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TP0DObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_633_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TP0DObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DObject", 1005, G__oaAnalysisReaderProjectDict_633_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_633_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TP0DObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDObject(void) {
   /* ND::TGlobalReconModule::TSMRDObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   G__memfunc_setup("TSMRDObject",993,G__oaAnalysisReaderProjectDict_634_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSMRDObject",993,G__oaAnalysisReaderProjectDict_634_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_634_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TSMRDObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_634_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_634_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TSMRDObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_634_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TSMRDObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_634_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_634_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_634_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_634_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_634_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSMRDObject", 1119, G__oaAnalysisReaderProjectDict_634_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_634_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTrackerObject(void) {
   /* ND::TGlobalReconModule::TTrackerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   G__memfunc_setup("TTrackerObject",1399,G__oaAnalysisReaderProjectDict_635_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerObject",1399,G__oaAnalysisReaderProjectDict_635_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTrackerObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_635_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TTrackerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_635_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTrackerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_635_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TTrackerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_635_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TTrackerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_635_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_635_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTrackerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_635_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTrackerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_635_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTrackerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_635_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTrackerObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerObject", 1525, G__oaAnalysisReaderProjectDict_635_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_635_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTrackerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void) {
   /* ND::TGlobalReconModule::TGlobalPIDAlternate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   G__memfunc_setup("TGlobalPIDAlternate",1826,G__oaAnalysisReaderProjectDict_636_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalPIDAlternate",1826,G__oaAnalysisReaderProjectDict_636_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPIDAlternate' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_636_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_636_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_636_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_636_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_636_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_636_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_636_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_636_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_636_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalPIDAlternate", 1952, G__oaAnalysisReaderProjectDict_636_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_636_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPIDAlternate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcOTVector2gR(void) {
   /* pair<int,TVector2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR));
   G__memfunc_setup("pair<int,TVector2>",1686,G__oaAnalysisReaderProjectDict_637_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,TVector2>",1686,G__oaAnalysisReaderProjectDict_637_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a u 'TVector2' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR), -1, 1, 1, 1, 4, 0, "u 'pair<int,TVector2>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,TVector2>", 1686, G__oaAnalysisReaderProjectDict_637_0_4, (int) ('i'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR), -1, 0, 1, 1, 1, 0, "u 'pair<int,TVector2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,TVector2>", 1812, G__oaAnalysisReaderProjectDict_637_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCOtherObject(void) {
   /* ND::TGlobalReconModule::TTPCOtherObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   G__memfunc_setup("TTPCOtherObject",1428,G__oaAnalysisReaderProjectDict_642_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCOtherObject",1428,G__oaAnalysisReaderProjectDict_642_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCOtherObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_642_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_642_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_642_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_642_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_642_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_642_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_642_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCOtherObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_642_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_642_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCOtherObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCOtherObject", 1554, G__oaAnalysisReaderProjectDict_642_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_642_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCOtherObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDHit(void) {
   /* ND::TGlobalReconModule::TSMRDHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   G__memfunc_setup("TSMRDHit",687,G__oaAnalysisReaderProjectDict_643_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSMRDHit",687,G__oaAnalysisReaderProjectDict_643_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_643_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TSMRDHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_643_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_643_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TSMRDHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_643_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TSMRDHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_643_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_643_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_643_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_643_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_643_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSMRDHit", 813, G__oaAnalysisReaderProjectDict_643_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_643_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModule(void) {
   /* ND::TTrackerECALReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconObject(void) {
   /* ND::TTrackerECALReconModule::TECALReconObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   G__memfunc_setup("TECALReconObject",1463,G__oaAnalysisReaderProjectDict_645_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconObject",1463,G__oaAnalysisReaderProjectDict_645_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_645_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_645_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_645_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_645_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_645_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_645_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_645_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_645_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_645_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconObject", 1589, G__oaAnalysisReaderProjectDict_645_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_645_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void) {
   /* ND::TTrackerECALReconModule::TECALReconTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   G__memfunc_setup("TECALReconTrack",1365,G__oaAnalysisReaderProjectDict_646_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconTrack",1365,G__oaAnalysisReaderProjectDict_646_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_646_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_646_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_646_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_646_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_646_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_646_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_646_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_646_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_646_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconTrack", 1491, G__oaAnalysisReaderProjectDict_646_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_646_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconShower(void) {
   /* ND::TTrackerECALReconModule::TECALReconShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   G__memfunc_setup("TECALReconShower",1496,G__oaAnalysisReaderProjectDict_647_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconShower",1496,G__oaAnalysisReaderProjectDict_647_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconShower' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_647_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_647_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_647_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_647_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_647_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_647_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_647_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_647_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_647_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconShower", 1622, G__oaAnalysisReaderProjectDict_647_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_647_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void) {
   /* ND::TTrackerECALReconModule::TECALReconCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   G__memfunc_setup("TECALReconCluster",1602,G__oaAnalysisReaderProjectDict_648_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconCluster",1602,G__oaAnalysisReaderProjectDict_648_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_648_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_648_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_648_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_648_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_648_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_648_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_648_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_648_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_648_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconCluster", 1728, G__oaAnalysisReaderProjectDict_648_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_648_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void) {
   /* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   G__memfunc_setup("TECALReconUnmatchedObject",2384,G__oaAnalysisReaderProjectDict_649_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconUnmatchedObject",2384,G__oaAnalysisReaderProjectDict_649_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconUnmatchedObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_649_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_649_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_649_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_649_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_649_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_649_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_649_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_649_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_649_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconUnmatchedObject", 2510, G__oaAnalysisReaderProjectDict_649_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_649_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconUnmatchedObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DECALReconModule(void) {
   /* ND::TP0DECALReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void) {
   /* ND::TP0DECALReconModule::TP0DECALReconTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   G__memfunc_setup("TP0DECALReconTrack",1561,G__oaAnalysisReaderProjectDict_651_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DECALReconTrack",1561,G__oaAnalysisReaderProjectDict_651_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_651_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_651_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_651_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_651_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_651_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_651_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_651_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_651_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_651_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DECALReconTrack", 1687, G__oaAnalysisReaderProjectDict_651_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_651_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void) {
   /* ND::TP0DECALReconModule::TP0DECALReconShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   G__memfunc_setup("TP0DECALReconShower",1692,G__oaAnalysisReaderProjectDict_652_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DECALReconShower",1692,G__oaAnalysisReaderProjectDict_652_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconShower' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_652_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_652_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_652_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_652_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_652_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_652_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_652_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_652_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_652_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DECALReconShower", 1818, G__oaAnalysisReaderProjectDict_652_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_652_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge(void) {
   /* ND::TP0DECALReconModule::TP0DECALLayerCharge */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge));
   G__memfunc_setup("TP0DECALLayerCharge",1652,G__oaAnalysisReaderProjectDict_653_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DECALLayerCharge",1652,G__oaAnalysisReaderProjectDict_653_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALLayerCharge' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_653_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_653_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_653_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_653_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_653_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_653_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_653_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_653_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_653_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALLayerCharge::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DECALLayerCharge", 1778, G__oaAnalysisReaderProjectDict_653_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_653_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALLayerCharge' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModule(void) {
   /* ND::TP0DReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DAlgoRes(void) {
   /* ND::TP0DReconModule::TP0DAlgoRes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   G__memfunc_setup("TP0DAlgoRes",965,G__oaAnalysisReaderProjectDict_655_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DAlgoRes",965,G__oaAnalysisReaderProjectDict_655_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DAlgoRes' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_655_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_655_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_655_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_655_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_655_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_655_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_655_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DAlgoRes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_655_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_655_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DAlgoRes::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DAlgoRes", 1091, G__oaAnalysisReaderProjectDict_655_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_655_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DAlgoRes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DVertex(void) {
   /* ND::TP0DReconModule::TP0DVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   G__memfunc_setup("TP0DVertex",918,G__oaAnalysisReaderProjectDict_656_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DVertex",918,G__oaAnalysisReaderProjectDict_656_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_656_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_656_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_656_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_656_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_656_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_656_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_656_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_656_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_656_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DVertex", 1044, G__oaAnalysisReaderProjectDict_656_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_656_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DParticle(void) {
   /* ND::TP0DReconModule::TP0DParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   G__memfunc_setup("TP0DParticle",1100,G__oaAnalysisReaderProjectDict_657_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DParticle",1100,G__oaAnalysisReaderProjectDict_657_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_657_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_657_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_657_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_657_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_657_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_657_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_657_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_657_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_657_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DParticle", 1226, G__oaAnalysisReaderProjectDict_657_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_657_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DShower(void) {
   /* ND::TP0DReconModule::TP0DShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   G__memfunc_setup("TP0DShower",912,G__oaAnalysisReaderProjectDict_670_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DShower",912,G__oaAnalysisReaderProjectDict_670_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DShower' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_670_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_670_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_670_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_670_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_670_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_670_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_670_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_670_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_670_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DShower", 1038, G__oaAnalysisReaderProjectDict_670_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_670_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DTrack(void) {
   /* ND::TP0DReconModule::TP0DTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   G__memfunc_setup("TP0DTrack",781,G__oaAnalysisReaderProjectDict_671_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DTrack",781,G__oaAnalysisReaderProjectDict_671_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_671_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_671_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_671_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_671_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_671_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_671_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_671_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_671_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_671_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DTrack", 907, G__oaAnalysisReaderProjectDict_671_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_671_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DNode(void) {
   /* ND::TP0DReconModule::TP0DNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   G__memfunc_setup("TP0DNode",670,G__oaAnalysisReaderProjectDict_672_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DNode",670,G__oaAnalysisReaderProjectDict_672_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DNode' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_672_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_672_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_672_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_672_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_672_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_672_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_672_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_672_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_672_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DNode::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DNode", 796, G__oaAnalysisReaderProjectDict_672_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_672_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DHit(void) {
   /* ND::TP0DReconModule::TP0DHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   G__memfunc_setup("TP0DHit",573,G__oaAnalysisReaderProjectDict_673_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DHit",573,G__oaAnalysisReaderProjectDict_673_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_673_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_673_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_673_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_673_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_673_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_673_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_673_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_673_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_673_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DHit", 699, G__oaAnalysisReaderProjectDict_673_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_673_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DCluster(void) {
   /* ND::TP0DReconModule::TP0DCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   G__memfunc_setup("TP0DCluster",1018,G__oaAnalysisReaderProjectDict_674_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DCluster",1018,G__oaAnalysisReaderProjectDict_674_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_674_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_674_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_674_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_674_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_674_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_674_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_674_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_674_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_674_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DCluster", 1144, G__oaAnalysisReaderProjectDict_674_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_674_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthVerticesModule(void) {
   /* ND::TTruthVerticesModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthVerticesModulecLcLTTruthVertex(void) {
   /* ND::TTruthVerticesModule::TTruthVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   G__memfunc_setup("TTruthVertex",1257,G__oaAnalysisReaderProjectDict_676_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTruthVertex",1257,G__oaAnalysisReaderProjectDict_676_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TTruthVerticesModule::TTruthVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_676_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTruthVerticesModule::TTruthVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_676_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::TTruthVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_676_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTruthVerticesModule::TTruthVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_676_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTruthVerticesModule::TTruthVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_676_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_676_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::TTruthVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_676_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthVerticesModule::TTruthVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_676_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::TTruthVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_676_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthVerticesModule::TTruthVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTruthVertex", 1383, G__oaAnalysisReaderProjectDict_676_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_676_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TTruthVerticesModule::TTruthVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthTrajectoriesModule(void) {
   /* ND::TTruthTrajectoriesModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModule));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void) {
   /* ND::TTruthTrajectoriesModule::TTruthTrajectory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   G__memfunc_setup("TTruthTrajectory",1682,G__oaAnalysisReaderProjectDict_678_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTruthTrajectory",1682,G__oaAnalysisReaderProjectDict_678_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory), -1, 0, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule::TTruthTrajectory' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_678_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_678_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_678_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_678_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_678_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_678_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_678_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_678_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_678_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTruthTrajectory", 1808, G__oaAnalysisReaderProjectDict_678_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_678_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory), -1, 1, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule::TTruthTrajectory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint(void) {
   /* ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint));
   G__memfunc_setup("TTruthTrajectoryPoint",2204,G__oaAnalysisReaderProjectDict_679_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTruthTrajectoryPoint",2204,G__oaAnalysisReaderProjectDict_679_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint), -1, 0, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_679_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_679_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_679_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_679_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_679_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_679_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_679_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_679_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_679_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTruthTrajectoryPoint", 2330, G__oaAnalysisReaderProjectDict_679_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_679_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint), -1, 1, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTIOFeatures(void) {
   /* ROOT::TIOFeatures */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures));
   G__memfunc_setup("TIOFeatures",1067,G__oaAnalysisReaderProjectDict_688_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIOFeatures",1067,G__oaAnalysisReaderProjectDict_688_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures), -1, 0, 1, 1, 1, 0, "u 'ROOT::TIOFeatures' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TIOFeatures", 1193, G__oaAnalysisReaderProjectDict_688_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_688_0_4, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures), -1, 1, 1, 1, 1, 0, "u 'ROOT::TIOFeatures' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTRExReconModulecLcLTTPCAnaJunction(void) {
   /* ND::TTRExReconModule::TTPCAnaJunction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction));
   G__memfunc_setup("TTPCAnaJunction",1429,G__oaAnalysisReaderProjectDict_689_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCAnaJunction",1429,G__oaAnalysisReaderProjectDict_689_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction), -1, 0, 1, 1, 1, 0, "u 'ND::TTRExReconModule::TTPCAnaJunction' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_689_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTRExReconModule::TTPCAnaJunction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_689_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaJunction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_689_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTRExReconModule::TTPCAnaJunction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_689_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTRExReconModule::TTPCAnaJunction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_689_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_689_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaJunction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_689_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTRExReconModule::TTPCAnaJunction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_689_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaJunction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_689_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTRExReconModule::TTPCAnaJunction::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCAnaJunction", 1555, G__oaAnalysisReaderProjectDict_689_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_689_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction), -1, 1, 1, 1, 1, 0, "u 'ND::TTRExReconModule::TTPCAnaJunction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTRExReconModulecLcLTTPCAnaPath(void) {
   /* ND::TTRExReconModule::TTPCAnaPath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath));
   G__memfunc_setup("TTPCAnaPath",984,G__oaAnalysisReaderProjectDict_690_0_1, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCAnaPath",984,G__oaAnalysisReaderProjectDict_690_0_2, 105, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath), -1, 0, 1, 1, 1, 0, "u 'ND::TTRExReconModule::TTPCAnaPath' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__oaAnalysisReaderProjectDict_690_0_3, 85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTRExReconModule::TTPCAnaPath::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__oaAnalysisReaderProjectDict_690_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaPath::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__oaAnalysisReaderProjectDict_690_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTRExReconModule::TTPCAnaPath::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__oaAnalysisReaderProjectDict_690_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTRExReconModule::TTPCAnaPath::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__oaAnalysisReaderProjectDict_690_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__oaAnalysisReaderProjectDict_690_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaPath::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__oaAnalysisReaderProjectDict_690_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTRExReconModule::TTPCAnaPath::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__oaAnalysisReaderProjectDict_690_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTRExReconModule::TTPCAnaPath::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__oaAnalysisReaderProjectDict_690_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTRExReconModule::TTPCAnaPath::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCAnaPath", 1110, G__oaAnalysisReaderProjectDict_690_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__oaAnalysisReaderProjectDict_690_0_16, (int) ('u'), G__get_linked_tagnum(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath), -1, 1, 1, 1, 1, 0, "u 'ND::TTRExReconModule::TTPCAnaPath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncoaAnalysisReaderProjectDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaloaAnalysisReaderProjectDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcoaAnalysisReaderProjectDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_ND = { "ND" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event = { "ND::TND280Event" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector = { "ND::TDataVector" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTData = { "ND::TData" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum = { "ND::TDatum" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR = { "vector<ND::TDatum*,allocator<ND::TDatum*> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ND::TDatum*,allocator<ND::TDatum*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context = { "ND::TND280Context" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue = { "ND::TSHAHashValue" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId = { "ND::TAlignmentId" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader = { "ND::TND280Event::Header" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx = { "ND::NRooTrackerVtx" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux = { "ND::JNuBeamFlux" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase = { "ND::RooTrackerVtxBase" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx = { "ND::GRooTrackerVtx" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModule = { "ND::TTRExReconModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern = { "ND::TTRExReconModule::TTPCAnaPattern" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModule = { "ND::TGeometrySummaryModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox = { "ND::TGeometrySummaryModule::TDetectorBoundingBox" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes = { "ND::TGeometrySummaryModule::TTPCMicroMegasVolumes" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TGeoNode = { "TGeoNode" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR = { "pair<int,const TGeoNode*>" , 115 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR = { "map<int,pair<int,const TGeoNode*>,less<int>,allocator<pair<const int,pair<int,const TGeoNode*> > > >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR = { "pair<int,pair<int,const TGeoNode*> >" , 115 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModule = { "ND::TBeamSummaryDataModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData = { "ND::TBeamSummaryDataModule::TBeamSummaryData" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData = { "ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModule = { "ND::TFgdOnlyModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack = { "ND::TFgdOnlyModule::TFgd2DIsoTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR = { "vector<TVector3*,allocator<TVector3*> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3*,allocator<TVector3*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack = { "ND::TFgdOnlyModule::TFgd3DIsoTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID = { "ND::TFgdOnlyModule::TFgd3DShowerPID" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp = { "ND::TFgdOnlyModule::TFgd3DShowerHyp" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster = { "ND::TFgdOnlyModule::TFgd2DCluster" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModule = { "ND::TSmrdReconModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit = { "ND::TSmrdReconModule::TSmrdReconHit" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack = { "ND::TSmrdReconModule::TSmrdIsoTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModule = { "ND::TTrackerReconModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex = { "ND::TTrackerReconModule::TTrackerVertex" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult = { "ND::TTrackerReconModule::TTrackerResult" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle = { "ND::TTrackerReconModule::TTrueParticle" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex = { "ND::TTrueVertex" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent = { "ND::TTrackerReconModule::TTrackerConstituent" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack = { "ND::TTrackerReconModule::TTPCTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack = { "ND::TTrackerReconModule::TFGDTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode = { "ND::TTrackerReconModule::TTrackerNode" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther = { "ND::TTrackerReconModule::TTrackOther" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit = { "ND::TTrackerReconModule::TUnusedHit" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModule = { "ND::TGlobalReconModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID = { "ND::TGlobalReconModule::TTpcPID" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle = { "ND::TTrueParticle" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR = { "vector<TLorentzVector*,allocator<TLorentzVector*> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector*,allocator<TLorentzVector*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex = { "ND::TGlobalReconModule::TGlobalVertex" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent = { "ND::TGlobalReconModule::TVertexConstituent" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin = { "ND::TGlobalReconModule::TFgdTimeBin" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits = { "ND::TGlobalReconModule::TOutermostHits" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit = { "ND::TGlobalReconModule::TGlobalHit" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID = { "ND::TGlobalReconModule::TGlobalPID" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject = { "ND::TGlobalReconModule::TTPCObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject = { "ND::TSubBaseObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject = { "ND::TGlobalReconModule::TFGDObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject = { "ND::TGlobalReconModule::TECALObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject = { "ND::TSubBaseShowerObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject = { "ND::TGlobalReconModule::TP0DObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject = { "ND::TGlobalReconModule::TSMRDObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject = { "ND::TGlobalReconModule::TTrackerObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate = { "ND::TGlobalReconModule::TGlobalPIDAlternate" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR = { "pair<int,TVector2>" , 115 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgR = { "vector<pair<int,TVector2>,allocator<pair<int,TVector2> > >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,TVector2>,allocator<pair<int,TVector2> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject = { "ND::TGlobalReconModule::TTPCOtherObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit = { "ND::TGlobalReconModule::TSMRDHit" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModule = { "ND::TTrackerECALReconModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject = { "ND::TTrackerECALReconModule::TECALReconObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack = { "ND::TTrackerECALReconModule::TECALReconTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower = { "ND::TTrackerECALReconModule::TECALReconShower" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster = { "ND::TTrackerECALReconModule::TECALReconCluster" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject = { "ND::TTrackerECALReconModule::TECALReconUnmatchedObject" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModule = { "ND::TP0DECALReconModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack = { "ND::TP0DECALReconModule::TP0DECALReconTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower = { "ND::TP0DECALReconModule::TP0DECALReconShower" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge = { "ND::TP0DECALReconModule::TP0DECALLayerCharge" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModule = { "ND::TP0DReconModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes = { "ND::TP0DReconModule::TP0DAlgoRes" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex = { "ND::TP0DReconModule::TP0DVertex" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle = { "ND::TP0DReconModule::TP0DParticle" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR = { "vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower = { "ND::TP0DReconModule::TP0DShower" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack = { "ND::TP0DReconModule::TP0DTrack" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode = { "ND::TP0DReconModule::TP0DNode" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit = { "ND::TP0DReconModule::TP0DHit" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster = { "ND::TP0DReconModule::TP0DCluster" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModule = { "ND::TTruthVerticesModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex = { "ND::TTruthVerticesModule::TTruthVertex" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModule = { "ND::TTruthTrajectoriesModule" , 110 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory = { "ND::TTruthTrajectoriesModule::TTruthTrajectory" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint = { "ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgR = { "vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint,allocator<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint,allocator<ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR = { "vector<TLorentzVector,allocator<TLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures = { "ROOT::TIOFeatures" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction = { "ND::TTRExReconModule::TTPCAnaJunction" , 99 , -1 };
G__linked_taginfo G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath = { "ND::TTRExReconModule::TTPCAnaPath" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableoaAnalysisReaderProjectDict() {
  G__oaAnalysisReaderProjectDictLN_TClass.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TBuffer.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMemberInspector.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TNamed.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TString.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_ROOT.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_string.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TClonesArray.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_ND.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTData.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TObjString.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TVector2.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TVector3.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TGeoNode.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_TLorentzVector.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModule.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction.tagnum = -1 ;
  G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableoaAnalysisReaderProjectDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TString);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_ROOT);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_string);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_ND),0,-1,262144,(char*)NULL,G__setup_memvarND,G__setup_memfuncND);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Event),sizeof(ND::TND280Event),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTND280Event,G__setup_memfuncNDcLcLTND280Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDataVector),sizeof(ND::TDataVector),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTDataVector,G__setup_memfuncNDcLcLTDataVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTData),sizeof(ND::TData),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTData,G__setup_memfuncNDcLcLTData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTDatum),sizeof(ND::TDatum),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTDatum,G__setup_memfuncNDcLcLTDatum);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280Context),sizeof(ND::TND280Context),-1,263936,(char*)NULL,G__setup_memvarNDcLcLTND280Context,G__setup_memfuncNDcLcLTND280Context);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSHAHashValue),sizeof(ND::TSHAHashValue),-1,263936,(char*)NULL,G__setup_memvarNDcLcLTSHAHashValue,G__setup_memfuncNDcLcLTSHAHashValue);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTAlignmentId),sizeof(ND::TAlignmentId),-1,263936,(char*)NULL,G__setup_memvarNDcLcLTAlignmentId,G__setup_memfuncNDcLcLTAlignmentId);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTND280EventcLcLHeader),sizeof(ND::TND280Event::Header),-1,263936,"Generated by MakeProject.",G__setup_memvarNDcLcLTND280EventcLcLHeader,G__setup_memfuncNDcLcLTND280EventcLcLHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLNRooTrackerVtx),sizeof(ND::NRooTrackerVtx),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLNRooTrackerVtx,G__setup_memfuncNDcLcLNRooTrackerVtx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLJNuBeamFlux),sizeof(ND::JNuBeamFlux),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLJNuBeamFlux,G__setup_memfuncNDcLcLJNuBeamFlux);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLRooTrackerVtxBase),sizeof(ND::RooTrackerVtxBase),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLRooTrackerVtxBase,G__setup_memfuncNDcLcLRooTrackerVtxBase);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TObjString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLGRooTrackerVtx),sizeof(ND::GRooTrackerVtx),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLGRooTrackerVtx,G__setup_memfuncNDcLcLGRooTrackerVtx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTTRExReconModule,G__setup_memfuncNDcLcLTTRExReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPattern),sizeof(ND::TTRExReconModule::TTPCAnaPattern),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTRExReconModulecLcLTTPCAnaPattern,G__setup_memfuncNDcLcLTTRExReconModulecLcLTTPCAnaPattern);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTGeometrySummaryModule,G__setup_memfuncNDcLcLTGeometrySummaryModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),sizeof(ND::TGeometrySummaryModule::TDetectorBoundingBox),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox,G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TVector2);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes),sizeof(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes,G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TGeoNode);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_pairlEintcOconstsPTGeoNodemUgR),sizeof(pair<int,const TGeoNode*>),-1,297216,(char*)NULL,G__setup_memvarpairlEintcOconstsPTGeoNodemUgR,G__setup_memfuncpairlEintcOconstsPTGeoNodemUgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_pairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR),sizeof(pair<int,pair<int,const TGeoNode*> >),-1,297216,(char*)NULL,G__setup_memvarpairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR,G__setup_memfuncpairlEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTBeamSummaryDataModule,G__setup_memfuncNDcLcLTBeamSummaryDataModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData),sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData,G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData),sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData,G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTFgdOnlyModule,G__setup_memfuncNDcLcLTFgdOnlyModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack),sizeof(ND::TFgdOnlyModule::TFgd2DIsoTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack),sizeof(ND::TFgdOnlyModule::TFgd3DIsoTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID),sizeof(ND::TFgdOnlyModule::TFgd3DShowerPID),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),sizeof(ND::TFgdOnlyModule::TFgd3DShowerHyp),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster),sizeof(ND::TFgdOnlyModule::TFgd2DCluster),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DCluster,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTSmrdReconModule,G__setup_memfuncNDcLcLTSmrdReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit),sizeof(ND::TSmrdReconModule::TSmrdReconHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdReconHit,G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdReconHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack),sizeof(ND::TSmrdReconModule::TSmrdIsoTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack,G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTTrackerReconModule,G__setup_memfuncNDcLcLTTrackerReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex),sizeof(ND::TTrackerReconModule::TTrackerVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerVertex,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult),sizeof(ND::TTrackerReconModule::TTrackerResult),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerResult,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerResult);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle),sizeof(ND::TTrackerReconModule::TTrueParticle),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrueParticle,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrueParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueVertex),sizeof(ND::TTrueVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrueVertex,G__setup_memfuncNDcLcLTTrueVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent),sizeof(ND::TTrackerReconModule::TTrackerConstituent),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerConstituent,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerConstituent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack),sizeof(ND::TTrackerReconModule::TTPCTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTPCTrack,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTPCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack),sizeof(ND::TTrackerReconModule::TFGDTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTFGDTrack,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTFGDTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode),sizeof(ND::TTrackerReconModule::TTrackerNode),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerNode,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerNode);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther),sizeof(ND::TTrackerReconModule::TTrackOther),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackOther,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackOther);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit),sizeof(ND::TTrackerReconModule::TUnusedHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTUnusedHit,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTUnusedHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTGlobalReconModule,G__setup_memfuncNDcLcLTGlobalReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTpcPID),sizeof(ND::TGlobalReconModule::TTpcPID),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTTpcPID,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTpcPID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrueParticle),sizeof(ND::TTrueParticle),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrueParticle,G__setup_memfuncNDcLcLTTrueParticle);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectormUcOallocatorlETLorentzVectormUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex),sizeof(ND::TGlobalReconModule::TGlobalVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalVertex,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent),sizeof(ND::TGlobalReconModule::TVertexConstituent),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTVertexConstituent,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTVertexConstituent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin),sizeof(ND::TGlobalReconModule::TFgdTimeBin),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTFgdTimeBin,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFgdTimeBin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),sizeof(ND::TGlobalReconModule::TOutermostHits),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTOutermostHits,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTOutermostHits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),sizeof(ND::TGlobalReconModule::TGlobalHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalHit,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID),sizeof(ND::TGlobalReconModule::TGlobalPID),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPID,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),sizeof(ND::TGlobalReconModule::TTPCObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseObject),sizeof(ND::TSubBaseObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSubBaseObject,G__setup_memfuncNDcLcLTSubBaseObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),sizeof(ND::TGlobalReconModule::TFGDObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTFGDObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFGDObject);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),sizeof(ND::TGlobalReconModule::TECALObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTECALObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTECALObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTSubBaseShowerObject),sizeof(ND::TSubBaseShowerObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSubBaseShowerObject,G__setup_memfuncNDcLcLTSubBaseShowerObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),sizeof(ND::TGlobalReconModule::TP0DObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTP0DObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTP0DObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),sizeof(ND::TGlobalReconModule::TSMRDObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),sizeof(ND::TGlobalReconModule::TTrackerObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTTrackerObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTrackerObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate),sizeof(ND::TGlobalReconModule::TGlobalPIDAlternate),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_pairlEintcOTVector2gR),sizeof(pair<int,TVector2>),-1,297216,(char*)NULL,G__setup_memvarpairlEintcOTVector2gR,G__setup_memfuncpairlEintcOTVector2gR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEpairlEintcOTVector2gRcOallocatorlEpairlEintcOTVector2gRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject),sizeof(ND::TGlobalReconModule::TTPCOtherObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCOtherObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCOtherObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit),sizeof(ND::TGlobalReconModule::TSMRDHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDHit,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTTrackerECALReconModule,G__setup_memfuncNDcLcLTTrackerECALReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject),sizeof(ND::TTrackerECALReconModule::TECALReconObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconObject,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack),sizeof(ND::TTrackerECALReconModule::TECALReconTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconTrack,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower),sizeof(ND::TTrackerECALReconModule::TECALReconShower),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconShower,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster),sizeof(ND::TTrackerECALReconModule::TECALReconCluster),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconCluster,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject),sizeof(ND::TTrackerECALReconModule::TECALReconUnmatchedObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTP0DECALReconModule,G__setup_memfuncNDcLcLTP0DECALReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack),sizeof(ND::TP0DECALReconModule::TP0DECALReconTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack,G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower),sizeof(ND::TP0DECALReconModule::TP0DECALReconShower),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower,G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge),sizeof(ND::TP0DECALReconModule::TP0DECALLayerCharge),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge,G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALLayerCharge);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTP0DReconModule,G__setup_memfuncNDcLcLTP0DReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes),sizeof(ND::TP0DReconModule::TP0DAlgoRes),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DAlgoRes,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DAlgoRes);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex),sizeof(ND::TP0DReconModule::TP0DVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DVertex,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle),sizeof(ND::TP0DReconModule::TP0DParticle),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DParticle,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DParticle);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower),sizeof(ND::TP0DReconModule::TP0DShower),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DShower,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack),sizeof(ND::TP0DReconModule::TP0DTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DTrack,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode),sizeof(ND::TP0DReconModule::TP0DNode),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DNode,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit),sizeof(ND::TP0DReconModule::TP0DHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DHit,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster),sizeof(ND::TP0DReconModule::TP0DCluster),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DCluster,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTTruthVerticesModule,G__setup_memfuncNDcLcLTTruthVerticesModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex),sizeof(ND::TTruthVerticesModule::TTruthVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTruthVerticesModulecLcLTTruthVertex,G__setup_memfuncNDcLcLTTruthVerticesModulecLcLTTruthVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModule),0,-1,262144,(char*)NULL,G__setup_memvarNDcLcLTTruthTrajectoriesModule,G__setup_memfuncNDcLcLTTruthTrajectoriesModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory),sizeof(ND::TTruthTrajectoriesModule::TTruthTrajectory),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory,G__setup_memfuncNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint),sizeof(ND::TTruthTrajectoriesModule::TTruthTrajectoryPoint),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint,G__setup_memfuncNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPoint);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointcOallocatorlENDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectoryPointgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_ROOTcLcLTIOFeatures),sizeof(ROOT::TIOFeatures),-1,263936,(char*)NULL,G__setup_memvarROOTcLcLTIOFeatures,G__setup_memfuncROOTcLcLTIOFeatures);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaJunction),sizeof(ND::TTRExReconModule::TTPCAnaJunction),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTRExReconModulecLcLTTPCAnaJunction,G__setup_memfuncNDcLcLTTRExReconModulecLcLTTPCAnaJunction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__oaAnalysisReaderProjectDictLN_NDcLcLTTRExReconModulecLcLTTPCAnaPath),sizeof(ND::TTRExReconModule::TTPCAnaPath),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTRExReconModulecLcLTTPCAnaPath,G__setup_memfuncNDcLcLTTRExReconModulecLcLTTPCAnaPath);
}
extern "C" void G__cpp_setupoaAnalysisReaderProjectDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupoaAnalysisReaderProjectDict()");
  G__set_cpp_environmentoaAnalysisReaderProjectDict();
  G__cpp_setup_tagtableoaAnalysisReaderProjectDict();

  G__cpp_setup_inheritanceoaAnalysisReaderProjectDict();

  G__cpp_setup_typetableoaAnalysisReaderProjectDict();

  G__cpp_setup_memvaroaAnalysisReaderProjectDict();

  G__cpp_setup_memfuncoaAnalysisReaderProjectDict();
  G__cpp_setup_globaloaAnalysisReaderProjectDict();
  G__cpp_setup_funcoaAnalysisReaderProjectDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncoaAnalysisReaderProjectDict();
  return;
}
class G__cpp_setup_initoaAnalysisReaderProjectDict {
  public:
    G__cpp_setup_initoaAnalysisReaderProjectDict() { G__add_setup_func("oaAnalysisReaderProjectDict",(G__incsetup)(&G__cpp_setupoaAnalysisReaderProjectDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initoaAnalysisReaderProjectDict() { G__remove_setup_func("oaAnalysisReaderProjectDict"); }
};
G__cpp_setup_initoaAnalysisReaderProjectDict G__cpp_setup_initializeroaAnalysisReaderProjectDict;

