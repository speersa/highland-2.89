//
// File generated by /t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64//bin/rootcint at Thu Apr 20 02:08:33 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIt2kdIaspeersdIHighland_InstallsdIHighLAND_2dO89dIpsycheCore_3dO51dILinuxmICentOS_7mIgcc_4dO8mIx86_64dIdictdIG_DataSample
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G_DataSample.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataSample DataSample;
      #else
      class DataSample  :  public ::TreeManager,  public ::Header {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataSample() throw() {};
         string _filePath; //
         int _nEntries; //
         string _cut; //
         float _norm; //
         string _systGroup; //
         string _systOption; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void DataSample_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataSample_Dictionary();
   static void *new_DataSample(void *p = 0);
   static void *newArray_DataSample(Long_t size, void *p);
   static void delete_DataSample(void *p);
   static void deleteArray_DataSample(void *p);
   static void destruct_DataSample(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataSample*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataSample) == sizeof( ::ROOTShadow::Shadow::DataSample));
      ::DataSample *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataSample),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataSample", "/home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/inc/DataSample.hxx", 19,
                  typeid(::DataSample), ::ROOT::DefineBehavior(ptr, ptr),
                  &DataSample_ShowMembers, &DataSample_Dictionary, isa_proxy, 4,
                  sizeof(::DataSample) );
      instance.SetNew(&new_DataSample);
      instance.SetNewArray(&newArray_DataSample);
      instance.SetDelete(&delete_DataSample);
      instance.SetDeleteArray(&deleteArray_DataSample);
      instance.SetDestructor(&destruct_DataSample);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataSample*)
   {
      return GenerateInitInstanceLocal((::DataSample*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataSample*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataSample_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::DataSample*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void DataSample_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataSample.
      typedef ::ROOTShadow::Shadow::DataSample ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::DataSample*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_filePath", (void*)&sobj->_filePath);
      R__insp.InspectMember("string", (void*)&sobj->_filePath, "_filePath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nEntries", &sobj->_nEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut", (void*)&sobj->_cut);
      R__insp.InspectMember("string", (void*)&sobj->_cut, "_cut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_norm", &sobj->_norm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_systGroup", (void*)&sobj->_systGroup);
      R__insp.InspectMember("string", (void*)&sobj->_systGroup, "_systGroup.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_systOption", (void*)&sobj->_systOption);
      R__insp.InspectMember("string", (void*)&sobj->_systOption, "_systOption.", false);
      R__insp.GenericShowMembers("TreeManager", ( ::TreeManager * )( (::DataSample*) obj ), false);
      R__insp.GenericShowMembers("Header", ( ::Header * )( (::DataSample*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataSample(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataSample : new ::DataSample;
   }
   static void *newArray_DataSample(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataSample[nElements] : new ::DataSample[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataSample(void *p) {
      delete ((::DataSample*)p);
   }
   static void deleteArray_DataSample(void *p) {
      delete [] ((::DataSample*)p);
   }
   static void destruct_DataSample(void *p) {
      typedef ::DataSample current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataSample

/********************************************************
* /home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/Linux-CentOS_7-gcc_4.8-x86_64/dict/G_DataSample.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG_DataSample();

extern "C" void G__set_cpp_environmentG_DataSample() {
  G__cpp_reset_tagtableG_DataSample();
}
#include <new>
extern "C" int G__cpp_dllrevG_DataSample() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DataSample */
static int G__G_DataSample_627_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataSample* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSample[n];
     } else {
       p = new((void*) gvp) DataSample[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSample;
     } else {
       p = new((void*) gvp) DataSample;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_DataSampleLN_DataSample));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataSample* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSample(
*(string*) libp->para[0].ref, (POTDef) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(string*) libp->para[3].ref);
     } else {
       p = new((void*) gvp) DataSample(
*(string*) libp->para[0].ref, (POTDef) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(string*) libp->para[3].ref);
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSample(
*(string*) libp->para[0].ref, (POTDef) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) DataSample(
*(string*) libp->para[0].ref, (POTDef) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSample(*(string*) libp->para[0].ref, (POTDef) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) DataSample(*(string*) libp->para[0].ref, (POTDef) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSample(*(string*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) DataSample(*(string*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_DataSampleLN_DataSample));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataSample*) G__getstructoffset())->SetCut(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const DataSample*) G__getstructoffset())->GetCut();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataSample*) G__getstructoffset())->SetNorm((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const DataSample*) G__getstructoffset())->GetNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataSample*) G__getstructoffset())->SetSystGroup(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const DataSample*) G__getstructoffset())->GetSystGroup();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataSample*) G__getstructoffset())->SetSystOption(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const DataSample*) G__getstructoffset())->GetSystOption();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((DataSample*) G__getstructoffset())->GetFilePath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataSample*) G__getstructoffset())->SetNEntries((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_DataSample_627_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DataSample*) G__getstructoffset())->GetNEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G_DataSample_627_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataSample* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataSample(*(DataSample*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_DataSampleLN_DataSample));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataSample G__TDataSample;
static int G__G_DataSample_627_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataSample*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataSample*) (soff+(sizeof(DataSample)*i)))->~G__TDataSample();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataSample*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataSample*) (soff))->~G__TDataSample();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G_DataSample_627_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataSample* dest = (DataSample*) G__getstructoffset();
   *dest = *(DataSample*) libp->para[0].ref;
   const DataSample& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DataSample */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG_DataSample {
 public:
  G__Sizep2memfuncG_DataSample(): p(&G__Sizep2memfuncG_DataSample::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG_DataSample::*p)();
};

size_t G__get_sizep2memfuncG_DataSample()
{
  G__Sizep2memfuncG_DataSample a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG_DataSample() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G_DataSampleLN_DataSample))) {
     DataSample *G__Lderived;
     G__Lderived=(DataSample*)0x1000;
     {
       TreeManager *G__Lpbase=(TreeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G_DataSampleLN_DataSample),G__get_linked_tagnum(&G__G_DataSampleLN_TreeManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Header *G__Lpbase=(Header*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G_DataSampleLN_DataSample),G__get_linked_tagnum(&G__G_DataSampleLN_Header),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG_DataSample() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G_DataSampleLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_DataSampleLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_DataSampleLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G_DataSampleLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TTree*>",117,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G_DataSampleLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AnaBunchC*>",117,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_DataSampleLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_DataSampleLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DataSample */
static void G__setup_memvarDataSample(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_DataSampleLN_DataSample));
   { DataSample *p; p=(DataSample*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_DataSampleLN_string),-1,-1,2,"_filePath=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_nEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_DataSampleLN_string),-1,-1,2,"_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"_norm=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_DataSampleLN_string),-1,-1,2,"_systGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_DataSampleLN_string),-1,-1,2,"_systOption=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG_DataSample() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDataSample(void) {
   /* DataSample */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_DataSampleLN_DataSample));
   G__memfunc_setup("DataSample",988,G__G_DataSample_627_0_1, 105, G__get_linked_tagnum(&G__G_DataSampleLN_DataSample), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataSample",988,G__G_DataSample_627_0_2, 105, G__get_linked_tagnum(&G__G_DataSampleLN_DataSample), -1, 0, 4, 1, 1, 0, 
"u 'string' - 11 - file i 'POTDef' - 0 'kGoodBeamGoodND280' - "
"d - - 0 '0' norm u 'string' - 11 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCut",600,G__G_DataSample_627_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCut",588,G__G_DataSample_627_0_4, 117, G__get_linked_tagnum(&G__G_DataSampleLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNorm",712,G__G_DataSample_627_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - norm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNorm",700,G__G_DataSample_627_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSystGroup",1260,G__G_DataSample_627_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - systGroup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSystGroup",1248,G__G_DataSample_627_0_8, 117, G__get_linked_tagnum(&G__G_DataSampleLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSystOption",1368,G__G_DataSample_627_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - systOption", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSystOption",1356,G__G_DataSample_627_0_10, 117, G__get_linked_tagnum(&G__G_DataSampleLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilePath",1069,G__G_DataSample_627_0_11, 117, G__get_linked_tagnum(&G__G_DataSampleLN_string), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNEntries",1108,G__G_DataSample_627_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEntries",1096,G__G_DataSample_627_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataSample", 988, G__G_DataSample_627_0_14, (int) ('i'), G__get_linked_tagnum(&G__G_DataSampleLN_DataSample), -1, 0, 1, 1, 1, 0, "u 'DataSample' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataSample", 1114, G__G_DataSample_627_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G_DataSample_627_0_16, (int) ('u'), G__get_linked_tagnum(&G__G_DataSampleLN_DataSample), -1, 1, 1, 1, 1, 0, "u 'DataSample' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG_DataSample() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG_DataSample() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG_DataSample() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G_DataSampleLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G_DataSampleLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TreeManager = { "TreeManager" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR = { "vector<TTree*,allocator<TTree*> >" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TTree*,allocator<TTree*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR = { "vector<AnaBunchC*,allocator<AnaBunchC*> >" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AnaBunchC*,allocator<AnaBunchC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_POTDef = { "POTDef" , 101 , -1 };
G__linked_taginfo G__G_DataSampleLN_Header = { "Header" , 99 , -1 };
G__linked_taginfo G__G_DataSampleLN_DataSample = { "DataSample" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG_DataSample() {
  G__G_DataSampleLN_string.tagnum = -1 ;
  G__G_DataSampleLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G_DataSampleLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DataSampleLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G_DataSampleLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G_DataSampleLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G_DataSampleLN_TreeManager.tagnum = -1 ;
  G__G_DataSampleLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR.tagnum = -1 ;
  G__G_DataSampleLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DataSampleLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G_DataSampleLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G_DataSampleLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G_DataSampleLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G_DataSampleLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR.tagnum = -1 ;
  G__G_DataSampleLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_DataSampleLN_POTDef.tagnum = -1 ;
  G__G_DataSampleLN_Header.tagnum = -1 ;
  G__G_DataSampleLN_DataSample.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG_DataSample() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_string);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TreeManager);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_POTDef);
   G__get_linked_tagnum_fwd(&G__G_DataSampleLN_Header);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_DataSampleLN_DataSample),sizeof(DataSample),-1,296192,(char*)NULL,G__setup_memvarDataSample,G__setup_memfuncDataSample);
}
extern "C" void G__cpp_setupG_DataSample(void) {
  G__check_setup_version(30051515,"G__cpp_setupG_DataSample()");
  G__set_cpp_environmentG_DataSample();
  G__cpp_setup_tagtableG_DataSample();

  G__cpp_setup_inheritanceG_DataSample();

  G__cpp_setup_typetableG_DataSample();

  G__cpp_setup_memvarG_DataSample();

  G__cpp_setup_memfuncG_DataSample();
  G__cpp_setup_globalG_DataSample();
  G__cpp_setup_funcG_DataSample();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG_DataSample();
  return;
}
class G__cpp_setup_initG_DataSample {
  public:
    G__cpp_setup_initG_DataSample() { G__add_setup_func("G_DataSample",(G__incsetup)(&G__cpp_setupG_DataSample)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG_DataSample() { G__remove_setup_func("G_DataSample"); }
};
G__cpp_setup_initG_DataSample G__cpp_setup_initializerG_DataSample;

