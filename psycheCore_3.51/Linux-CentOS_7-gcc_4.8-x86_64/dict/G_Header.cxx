//
// File generated by /t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64//bin/rootcint at Thu Apr 20 02:08:33 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIt2kdIaspeersdIHighland_InstallsdIHighLAND_2dO89dIpsycheCore_3dO51dILinuxmICentOS_7mIgcc_4dO8mIx86_64dIdictdIG_Header
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G_Header.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Header Header;
      #else
      class Header  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Header() throw() {};
         double _POT_CountedPerFile; //
         double _POT_NoCut; //
         double _POT_BadBeam; //
         double _POT_BadND280; //
         double _POT_GoodBeamGoodND280; //
         double _POT_0KA; //
         double _POT_200KA; //
         double _POT_250KA; //
         double _POT_m250KA; //
         double _POT_OtherKA; //
         double _POTInfo[13]; //
         int _Spill_NoCut; //
         int _Spill_BadBeam; //
         int _Spill_BadND280; //
         int _Spill_GoodBeamGoodND280; //
         int _SpillInfo[6]; //
         bool _IsMC; //
         string _SoftwareVersion; //
         bool _isFirstFile; //!
         int _pot_def_counter; //
         int _spill_def_counter; //
         ::POTDef _pot_def; //!
         ::SpillDef _spill_def; //!
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Header_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Header_Dictionary();
   static void *new_Header(void *p = 0);
   static void *newArray_Header(Long_t size, void *p);
   static void delete_Header(void *p);
   static void deleteArray_Header(void *p);
   static void destruct_Header(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Header*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Header) == sizeof( ::ROOTShadow::Shadow::Header));
      ::Header *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Header),0);
      static ::ROOT::TGenericClassInfo 
         instance("Header", "/home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/inc/Header.hxx", 48,
                  typeid(::Header), ::ROOT::DefineBehavior(ptr, ptr),
                  &Header_ShowMembers, &Header_Dictionary, isa_proxy, 4,
                  sizeof(::Header) );
      instance.SetNew(&new_Header);
      instance.SetNewArray(&newArray_Header);
      instance.SetDelete(&delete_Header);
      instance.SetDeleteArray(&deleteArray_Header);
      instance.SetDestructor(&destruct_Header);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Header*)
   {
      return GenerateInitInstanceLocal((::Header*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Header*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Header_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Header*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void Header_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Header.
      typedef ::ROOTShadow::Shadow::Header ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Header*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_CountedPerFile", &sobj->_POT_CountedPerFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_NoCut", &sobj->_POT_NoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_BadBeam", &sobj->_POT_BadBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_BadND280", &sobj->_POT_BadND280);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_GoodBeamGoodND280", &sobj->_POT_GoodBeamGoodND280);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_0KA", &sobj->_POT_0KA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_200KA", &sobj->_POT_200KA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_250KA", &sobj->_POT_250KA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_m250KA", &sobj->_POT_m250KA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POT_OtherKA", &sobj->_POT_OtherKA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_POTInfo[13]", sobj->_POTInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Spill_NoCut", &sobj->_Spill_NoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Spill_BadBeam", &sobj->_Spill_BadBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Spill_BadND280", &sobj->_Spill_BadND280);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Spill_GoodBeamGoodND280", &sobj->_Spill_GoodBeamGoodND280);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SpillInfo[6]", sobj->_SpillInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_IsMC", &sobj->_IsMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SoftwareVersion", (void*)&sobj->_SoftwareVersion);
      R__insp.InspectMember("string", (void*)&sobj->_SoftwareVersion, "_SoftwareVersion.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isFirstFile", &sobj->_isFirstFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pot_def_counter", &sobj->_pot_def_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spill_def_counter", &sobj->_spill_def_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pot_def", &sobj->_pot_def);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spill_def", &sobj->_spill_def);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Header(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Header : new ::Header;
   }
   static void *newArray_Header(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Header[nElements] : new ::Header[nElements];
   }
   // Wrapper around operator delete
   static void delete_Header(void *p) {
      delete ((::Header*)p);
   }
   static void deleteArray_Header(void *p) {
      delete [] ((::Header*)p);
   }
   static void destruct_Header(void *p) {
      typedef ::Header current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Header

/********************************************************
* /home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/Linux-CentOS_7-gcc_4.8-x86_64/dict/G_Header.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG_Header();

extern "C" void G__set_cpp_environmentG_Header() {
  G__cpp_reset_tagtableG_Header();
}
#include <new>
extern "C" int G__cpp_dllrevG_Header() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Header */
static int G__G_Header_556_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Header* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Header((POTDef) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Header((POTDef) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Header[n];
       } else {
         p = new((void*) gvp) Header[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Header;
       } else {
         p = new((void*) gvp) Header;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_HeaderLN_Header));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Header*) G__getstructoffset())->IncrementPOTBySpill(*(AnaSpillC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Header*) G__getstructoffset())->IncrementPOTByFile((Double_t) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Header*) G__getstructoffset())->IncrementPOTByFile((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Header*) G__getstructoffset())->ReadHeader(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Header*) G__getstructoffset())->ReadHeader((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Header*) G__getstructoffset())->AddHeader(*(string*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Header*) G__getstructoffset())->AddHeader(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Header*) G__getstructoffset())->AddHeader((TTree*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Header*) G__getstructoffset())->AddHeader((TTree*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Header*) G__getstructoffset())->GetPOT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Header*) G__getstructoffset())->GetNSpills());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Header*) G__getstructoffset())->GetPOT((POTDef) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Header*) G__getstructoffset())->GetNSpills((SpillDef) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Header*) G__getstructoffset())->GetPOTCountedPerFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Header*) G__getstructoffset())->GetPOTDefCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Header*) G__getstructoffset())->GetSpillDefCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((Header*) G__getstructoffset())->GetSpillInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((Header*) G__getstructoffset())->GetPOTInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Header*) G__getstructoffset())->DumpPOT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Header*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Header*) G__getstructoffset())->SetIsMC((bool) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Header*) G__getstructoffset())->GetIsMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Header*) G__getstructoffset())->SetSoftwareVersion(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((Header*) G__getstructoffset())->GetSoftwareVersion();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Header*) G__getstructoffset())->SetPOTDef((POTDef) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_Header_556_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Header*) G__getstructoffset())->GetPOTDef());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G_Header_556_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Header* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Header(*(Header*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_HeaderLN_Header));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Header G__THeader;
static int G__G_Header_556_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Header*) (soff+(sizeof(Header)*i)))->~G__THeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Header*) (soff))->~G__THeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G_Header_556_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Header* dest = (Header*) G__getstructoffset();
   *dest = *(Header*) libp->para[0].ref;
   const Header& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Header */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG_Header {
 public:
  G__Sizep2memfuncG_Header(): p(&G__Sizep2memfuncG_Header::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG_Header::*p)();
};

size_t G__get_sizep2memfuncG_Header()
{
  G__Sizep2memfuncG_Header a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG_Header() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG_Header() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G_HeaderLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_HeaderLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_HeaderLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_HeaderLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_HeaderLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G_HeaderLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_HeaderLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_HeaderLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_HeaderLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_HeaderLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G_HeaderLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AnaBunchC*>",117,G__get_linked_tagnum(&G__G_HeaderLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_HeaderLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_HeaderLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_HeaderLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_HeaderLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G_HeaderLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_HeaderLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_HeaderLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G_HeaderLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Header */
static void G__setup_memvarHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_HeaderLN_Header));
   { Header *p; p=(Header*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_CountedPerFile)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_CountedPerFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_NoCut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_NoCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_BadBeam)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_BadBeam=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_BadND280)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_BadND280=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_GoodBeamGoodND280)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_GoodBeamGoodND280=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_0KA)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_0KA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_200KA)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_200KA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_250KA)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_250KA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_m250KA)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_m250KA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POT_OtherKA)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POT_OtherKA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_POTInfo)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_POTInfo[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_Spill_NoCut)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_Spill_NoCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_Spill_BadBeam)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_Spill_BadBeam=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_Spill_BadND280)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_Spill_BadND280=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_Spill_GoodBeamGoodND280)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_Spill_GoodBeamGoodND280=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SpillInfo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_SpillInfo[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_IsMC)-(long)(p)),103,0,0,-1,-1,-1,1,"_IsMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SoftwareVersion)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G_HeaderLN_string),-1,-1,1,"_SoftwareVersion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isFirstFile)-(long)(p)),103,0,0,-1,-1,-1,1,"_isFirstFile=",0,"!");
   G__memvar_setup((void*)((long)(&p->_pot_def_counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_pot_def_counter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_spill_def_counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_spill_def_counter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_pot_def)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"_pot_def=",0,"!");
   G__memvar_setup((void*)((long)(&p->_spill_def)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"_spill_def=",0,"!");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG_Header() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHeader(void) {
   /* Header */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_HeaderLN_Header));
   G__memfunc_setup("Header",585,G__G_Header_556_0_1, 105, G__get_linked_tagnum(&G__G_HeaderLN_Header), -1, 0, 1, 1, 1, 0, "i 'POTDef' - 0 'kGoodBeamGoodND280' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementPOTBySpill",1879,G__G_Header_556_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AnaSpillC' - 11 - spill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementPOTByFile",1747,G__G_Header_556_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - pot g - - 0 'true' bySpillPOT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHeader",965,G__G_Header_556_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHeader",965,G__G_Header_556_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHeader",850,G__G_Header_556_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - file g - - 0 'false' bySpillPOT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHeader",850,G__G_Header_556_0_7, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree g - - 0 'false' bySpillPOT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOT",531,G__G_Header_556_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSpills",997,G__G_Header_556_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOT",531,G__G_Header_556_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i 'POTDef' - 0 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSpills",997,G__G_Header_556_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i 'SpillDef' - 0 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOTCountedPerFile",1932,G__G_Header_556_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOTDefCounter",1538,G__G_Header_556_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpillDefCounter",1811,G__G_Header_556_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpillInfo",1200,G__G_Header_556_0_15, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOTInfo",927,G__G_Header_556_0_16, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpPOT",649,G__G_Header_556_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G_Header_556_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsMC",632,G__G_Header_556_0_19, 103, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsMC",620,G__G_Header_556_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSoftwareVersion",1885,G__G_Header_556_0_21, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - ver", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSoftwareVersion",1873,G__G_Header_556_0_22, 117, G__get_linked_tagnum(&G__G_HeaderLN_string), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPOTDef",814,G__G_Header_556_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i 'POTDef' - 0 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOTDef",802,G__G_Header_556_0_24, 105, G__get_linked_tagnum(&G__G_HeaderLN_POTDef), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Header", 585, G__G_Header_556_0_25, (int) ('i'), G__get_linked_tagnum(&G__G_HeaderLN_Header), -1, 0, 1, 1, 1, 0, "u 'Header' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Header", 711, G__G_Header_556_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G_Header_556_0_27, (int) ('u'), G__get_linked_tagnum(&G__G_HeaderLN_Header), -1, 1, 1, 1, 1, 0, "u 'Header' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG_Header() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kNoCut=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kBadBeam=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kBadND280=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kBadND280Time=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kGoodBeamGoodND280=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kGoodBeamGoodND280Time=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"k0KA=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"k200KA=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"k250KA=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"km250KA=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kOtherKA=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"k250KA_ND280Time=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"km250KA_ND280Time=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_POTDef),-1,-1,1,"kPOTDefCounter=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"kSpillNoCut=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"kSpillBadBeam=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"kSpillBadND280=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"kSpillBadND280Time=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"kSpillGoodBeamGoodND280=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"kSpillGoodBeamGoodND280Time=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_HeaderLN_SpillDef),-1,-1,1,"kSpillDefCounter=6",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG_Header() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG_Header() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G_HeaderLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_AnaSpillC = { "AnaSpillC" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR = { "vector<AnaBunchC*,allocator<AnaBunchC*> >" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AnaBunchC*,allocator<AnaBunchC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G_HeaderLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G_HeaderLN_POTDef = { "POTDef" , 101 , -1 };
G__linked_taginfo G__G_HeaderLN_SpillDef = { "SpillDef" , 101 , -1 };
G__linked_taginfo G__G_HeaderLN_Header = { "Header" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG_Header() {
  G__G_HeaderLN_string.tagnum = -1 ;
  G__G_HeaderLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G_HeaderLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_HeaderLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G_HeaderLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G_HeaderLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G_HeaderLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G_HeaderLN_AnaSpillC.tagnum = -1 ;
  G__G_HeaderLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR.tagnum = -1 ;
  G__G_HeaderLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G_HeaderLN_TTree.tagnum = -1 ;
  G__G_HeaderLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G_HeaderLN_POTDef.tagnum = -1 ;
  G__G_HeaderLN_SpillDef.tagnum = -1 ;
  G__G_HeaderLN_Header.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG_Header() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_string);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_AnaSpillC);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_TTree);
   G__get_linked_tagnum_fwd(&G__G_HeaderLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_HeaderLN_POTDef),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_HeaderLN_SpillDef),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_HeaderLN_Header),sizeof(Header),-1,263424,(char*)NULL,G__setup_memvarHeader,G__setup_memfuncHeader);
}
extern "C" void G__cpp_setupG_Header(void) {
  G__check_setup_version(30051515,"G__cpp_setupG_Header()");
  G__set_cpp_environmentG_Header();
  G__cpp_setup_tagtableG_Header();

  G__cpp_setup_inheritanceG_Header();

  G__cpp_setup_typetableG_Header();

  G__cpp_setup_memvarG_Header();

  G__cpp_setup_memfuncG_Header();
  G__cpp_setup_globalG_Header();
  G__cpp_setup_funcG_Header();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG_Header();
  return;
}
class G__cpp_setup_initG_Header {
  public:
    G__cpp_setup_initG_Header() { G__add_setup_func("G_Header",(G__incsetup)(&G__cpp_setupG_Header)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG_Header() { G__remove_setup_func("G_Header"); }
};
G__cpp_setup_initG_Header G__cpp_setup_initializerG_Header;

