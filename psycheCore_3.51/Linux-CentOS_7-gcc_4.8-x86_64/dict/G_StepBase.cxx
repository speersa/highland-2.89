//
// File generated by /t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64//bin/rootcint at Thu Apr 20 02:08:33 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIt2kdIaspeersdIHighland_InstallsdIHighLAND_2dO89dIpsycheCore_3dO51dILinuxmICentOS_7mIgcc_4dO8mIx86_64dIdictdIG_StepBase
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G_StepBase.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StepBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StepBase(void *p = 0);
   static void *newArray_StepBase(Long_t size, void *p);
   static void delete_StepBase(void *p);
   static void deleteArray_StepBase(void *p);
   static void destruct_StepBase(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StepBase*)
   {
      ::StepBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StepBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StepBase", ::StepBase::Class_Version(), "/home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/inc/StepBase.hxx", 18,
                  typeid(::StepBase), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StepBase::Dictionary, isa_proxy, 4,
                  sizeof(::StepBase) );
      instance.SetNew(&new_StepBase);
      instance.SetNewArray(&newArray_StepBase);
      instance.SetDelete(&delete_StepBase);
      instance.SetDeleteArray(&deleteArray_StepBase);
      instance.SetDestructor(&destruct_StepBase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StepBase*)
   {
      return GenerateInitInstanceLocal((::StepBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StepBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StepBase::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StepBase::Class_Name()
{
   return "StepBase";
}

//______________________________________________________________________________
const char *StepBase::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StepBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StepBase::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StepBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StepBase::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StepBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StepBase::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StepBase*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StepBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class StepBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StepBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(StepBase::Class(),this);
   }
}

//______________________________________________________________________________
void StepBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StepBase.
      TClass *R__cl = ::StepBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_type", &_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_break", &_break);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_title", (void*)&_title);
      R__insp.InspectMember("string", (void*)&_title, "_title.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_disabledInBranch", (void*)&_disabledInBranch);
      R__insp.InspectMember("vector<bool>", (void*)&_disabledInBranch, "_disabledInBranch.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nextSteps", (void*)&_nextSteps);
      R__insp.InspectMember("vector<StepBase*>", (void*)&_nextSteps, "_nextSteps.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_branchUniqueIDs", (void*)&_branchUniqueIDs);
      R__insp.InspectMember("vector<UInt_t>", (void*)&_branchUniqueIDs, "_branchUniqueIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_index", &_index);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StepBase(void *p) {
      return  p ? new(p) ::StepBase : new ::StepBase;
   }
   static void *newArray_StepBase(Long_t nElements, void *p) {
      return p ? new(p) ::StepBase[nElements] : new ::StepBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_StepBase(void *p) {
      delete ((::StepBase*)p);
   }
   static void deleteArray_StepBase(void *p) {
      delete [] ((::StepBase*)p);
   }
   static void destruct_StepBase(void *p) {
      typedef ::StepBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StepBase

namespace ROOTDict {
   void vectorlEStepBasemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStepBasemUgR_Dictionary();
   static void *new_vectorlEStepBasemUgR(void *p = 0);
   static void *newArray_vectorlEStepBasemUgR(Long_t size, void *p);
   static void delete_vectorlEStepBasemUgR(void *p);
   static void deleteArray_vectorlEStepBasemUgR(void *p);
   static void destruct_vectorlEStepBasemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<StepBase*>*)
   {
      vector<StepBase*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StepBase*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StepBase*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<StepBase*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEStepBasemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StepBase*>) );
      instance.SetNew(&new_vectorlEStepBasemUgR);
      instance.SetNewArray(&newArray_vectorlEStepBasemUgR);
      instance.SetDelete(&delete_vectorlEStepBasemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStepBasemUgR);
      instance.SetDestructor(&destruct_vectorlEStepBasemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<StepBase*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StepBase*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStepBasemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<StepBase*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEStepBasemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StepBase*> : new vector<StepBase*>;
   }
   static void *newArray_vectorlEStepBasemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StepBase*>[nElements] : new vector<StepBase*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStepBasemUgR(void *p) {
      delete ((vector<StepBase*>*)p);
   }
   static void deleteArray_vectorlEStepBasemUgR(void *p) {
      delete [] ((vector<StepBase*>*)p);
   }
   static void destruct_vectorlEStepBasemUgR(void *p) {
      typedef vector<StepBase*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<StepBase*>

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

/********************************************************
* /home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/Linux-CentOS_7-gcc_4.8-x86_64/dict/G_StepBase.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG_StepBase();

extern "C" void G__set_cpp_environmentG_StepBase() {
  G__cpp_reset_tagtableG_StepBase();
}
#include <new>
extern "C" int G__cpp_dllrevG_StepBase() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StepBase */
static int G__G_StepBase_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StepBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StepBase[n];
     } else {
       p = new((void*) gvp) StepBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StepBase;
     } else {
       p = new((void*) gvp) StepBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_StepBaseLN_StepBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StepBase*) G__getstructoffset())->MakeClone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StepBase*) G__getstructoffset())->Apply(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StepBase*) G__getstructoffset())->CopyStep(*(StepBase*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StepBase*) G__getstructoffset())->CopyStep(*(StepBase*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((StepBase*) G__getstructoffset())->MakeCloneRecursive((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((StepBase*) G__getstructoffset())->MakeCloneRecursive());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StepBase*) G__getstructoffset())->Configure((StepBase::TypeEnum) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StepBase*) G__getstructoffset())->Configure((StepBase::TypeEnum) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->SetTitle(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->SetType((StepBase::TypeEnum) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->SetBreak((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->SetIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const StepBase*) G__getstructoffset())->Title();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StepBase*) G__getstructoffset())->Type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StepBase*) G__getstructoffset())->Break());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StepBase*) G__getstructoffset())->Index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const StepBase*) G__getstructoffset())->ConvertType();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->DisableInBranch((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->EnableInBranch((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StepBase*) G__getstructoffset())->IsDisabledInBranch((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StepBase*) G__getstructoffset())->HasBranchUniqueID((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StepBase*) G__getstructoffset())->BranchIndexForBranchUniqueID((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->RemoveStepsInBranchIDRecursive((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StepBase*>& obj = ((const StepBase*) G__getstructoffset())->GetNextSteps();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StepBase*) G__getstructoffset())->RemoveNextStep((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StepBase*) G__getstructoffset())->RemoveNextStep();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->ClearNextSteps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->AddBranchUniqueID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->RemoveBranchUniqueID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StepBase*) G__getstructoffset())->GetBranchSequence((Int_t) G__int(libp->para[0]), *(vector<UInt_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<UInt_t>& obj = ((const StepBase*) G__getstructoffset())->GetBranchUniqueIDs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->AddBranches((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StepBase*) G__getstructoffset())->AddNextStep((StepBase*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StepBase*) G__getstructoffset())->AddNextStep((StepBase*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const StepBase*) G__getstructoffset())->GetNextSteps(*(vector<StepBase*>*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const StepBase*) G__getstructoffset())->GetNextSteps(*(vector<StepBase*>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const StepBase*) G__getstructoffset())->GetNextSteps(*(vector<StepBase*>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StepBase*) G__getstructoffset())->GetNextStepsInBranch(*(vector<StepBase*>*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StepBase*) G__getstructoffset())->ValidateStepRecursive();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StepBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StepBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StepBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StepBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StepBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StepBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StepBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_StepBase_475_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StepBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G_StepBase_475_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StepBase* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StepBase(*(StepBase*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_StepBaseLN_StepBase));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StepBase G__TStepBase;
static int G__G_StepBase_475_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StepBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StepBase*) (soff+(sizeof(StepBase)*i)))->~G__TStepBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StepBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StepBase*) (soff))->~G__TStepBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G_StepBase_475_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StepBase* dest = (StepBase*) G__getstructoffset();
   *dest = *(StepBase*) libp->para[0].ref;
   const StepBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StepBase */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG_StepBase {
 public:
  G__Sizep2memfuncG_StepBase(): p(&G__Sizep2memfuncG_StepBase::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG_StepBase::*p)();
};

size_t G__get_sizep2memfuncG_StepBase()
{
  G__Sizep2memfuncG_StepBase a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG_StepBase() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G_StepBaseLN_StepBase))) {
     StepBase *G__Lderived;
     G__Lderived=(StepBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G_StepBaseLN_StepBase),G__get_linked_tagnum(&G__G_StepBaseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG_StepBase() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AnaBunchC*>",117,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StepBase*>",117,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_StepBaseLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StepBase */
static void G__setup_memvarStepBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_StepBaseLN_StepBase));
   { StepBase *p; p=(StepBase*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLTypeEnum),-1,-2,1,G__FastAllocString(2048).Format("kCut=%lldLL",(long long)StepBase::kCut).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLTypeEnum),-1,-2,1,G__FastAllocString(2048).Format("kAction=%lldLL",(long long)StepBase::kAction).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLTypeEnum),-1,-2,1,G__FastAllocString(2048).Format("kUnknown=%lldLL",(long long)StepBase::kUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLBranchStatus),-1,-2,1,G__FastAllocString(2048).Format("BranchOK=%lldLL",(long long)StepBase::BranchOK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLBranchStatus),-1,-2,1,G__FastAllocString(2048).Format("BranchEmpty=%lldLL",(long long)StepBase::BranchEmpty).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLBranchStatus),-1,-2,1,G__FastAllocString(2048).Format("NoBranches=%lldLL",(long long)StepBase::NoBranches).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLBranchStatus),-1,-2,1,G__FastAllocString(2048).Format("BranchOutOfRange=%lldLL",(long long)StepBase::BranchOutOfRange).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G_StepBaseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLTypeEnum),-1,-1,2,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_break=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_StepBaseLN_string),-1,-1,2,"_title=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,2,"_disabledInBranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR),G__defined_typename("vector<StepBase*>"),-1,2,"_nextSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,2,"_branchUniqueIDs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_index=",0,"!");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG_StepBase() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStepBase(void) {
   /* StepBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_StepBaseLN_StepBase));
   G__memfunc_setup("StepBase",791,G__G_StepBase_475_0_1, 105, G__get_linked_tagnum(&G__G_StepBaseLN_StepBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeClone",879,G__G_StepBase_475_0_2, 85, G__get_linked_tagnum(&G__G_StepBaseLN_StepBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Apply",518,G__G_StepBase_475_0_3, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'AnaEventC' - 1 - event u 'ToyBoxB' - 1 - box", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyStep",823,G__G_StepBase_475_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'StepBase' - 11 - step i - 'Int_t' 0 '-1' branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeCloneRecursive",1831,G__G_StepBase_475_0_5, 85, G__get_linked_tagnum(&G__G_StepBaseLN_StepBase), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Configure",930,G__G_StepBase_475_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__G_StepBase_475_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__G_StepBase_475_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StepBase::TypeEnum' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBreak",785,G__G_StepBase_475_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndex",804,G__G_StepBase_475_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Title",514,G__G_StepBase_475_0_11, 117, G__get_linked_tagnum(&G__G_StepBaseLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Type",418,G__G_StepBase_475_0_12, 105, G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLTypeEnum), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Break",485,G__G_StepBase_475_0_13, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Index",504,G__G_StepBase_475_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertType",1155,G__G_StepBase_475_0_15, 117, G__get_linked_tagnum(&G__G_StepBaseLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableInBranch",1465,G__G_StepBase_475_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableInBranch",1356,G__G_StepBase_475_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDisabledInBranch",1753,G__G_StepBase_475_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasBranchUniqueID",1646,G__G_StepBase_475_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - branchID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BranchIndexForBranchUniqueID",2751,G__G_StepBase_475_0_20, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - branchID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveStepsInBranchIDRecursive",3015,G__G_StepBase_475_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - branchID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextSteps",1230,G__G_StepBase_475_0_22, 117, G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveNextStep",1449,G__G_StepBase_475_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearNextSteps",1429,G__G_StepBase_475_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBranchUniqueID",1627,G__G_StepBase_475_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ibranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveBranchUniqueID",1984,G__G_StepBase_475_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchSequence",1703,G__G_StepBase_475_0_27, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - branchID u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 1 - branch_seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchUniqueIDs",1765,G__G_StepBase_475_0_28, 117, G__get_linked_tagnum(&G__G_StepBaseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<UInt_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBranches",1071,G__G_StepBase_475_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nbranches", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNextStep",1092,G__G_StepBase_475_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StepBase' - 0 - step i - 'Int_t' 0 '-1' branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextSteps",1230,G__G_StepBase_475_0_31, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<StepBase*,allocator<StepBase*> >' 'vector<StepBase*>' 1 - steps g - - 0 'false' withSplits "
"i - 'Int_t' 0 '-1' branchID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextStepsInBranch",2003,G__G_StepBase_475_0_32, 105, G__get_linked_tagnum(&G__G_StepBaseLN_StepBasecLcLBranchStatus), -1, 0, 2, 1, 1, 8, 
"u 'vector<StepBase*,allocator<StepBase*> >' 'vector<StepBase*>' 1 - steps i - 'Int_t' 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidateStepRecursive",2174,G__G_StepBase_475_0_33, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G_StepBase_475_0_34, 85, G__get_linked_tagnum(&G__G_StepBaseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StepBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G_StepBase_475_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StepBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G_StepBase_475_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StepBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G_StepBase_475_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StepBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G_StepBaseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G_StepBase_475_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G_StepBase_475_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StepBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G_StepBase_475_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StepBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G_StepBase_475_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StepBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G_StepBase_475_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StepBase::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StepBase", 791, G__G_StepBase_475_0_46, (int) ('i'), G__get_linked_tagnum(&G__G_StepBaseLN_StepBase), -1, 0, 1, 1, 1, 0, "u 'StepBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StepBase", 917, G__G_StepBase_475_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G_StepBase_475_0_48, (int) ('u'), G__get_linked_tagnum(&G__G_StepBaseLN_StepBase), -1, 1, 1, 1, 1, 0, "u 'StepBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG_StepBase() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG_StepBase() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG_StepBase() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G_StepBaseLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_ToyBoxB = { "ToyBoxB" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR = { "vector<AnaBunchC*,allocator<AnaBunchC*> >" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AnaBunchC*,allocator<AnaBunchC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_AnaEventC = { "AnaEventC" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_StepBase = { "StepBase" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_StepBasecLcLTypeEnum = { "StepBase::TypeEnum" , 101 , -1 };
G__linked_taginfo G__G_StepBaseLN_StepBasecLcLBranchStatus = { "StepBase::BranchStatus" , 101 , -1 };
G__linked_taginfo G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR = { "vector<StepBase*,allocator<StepBase*> >" , 99 , -1 };
G__linked_taginfo G__G_StepBaseLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StepBase*,allocator<StepBase*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG_StepBase() {
  G__G_StepBaseLN_TClass.tagnum = -1 ;
  G__G_StepBaseLN_TBuffer.tagnum = -1 ;
  G__G_StepBaseLN_TMemberInspector.tagnum = -1 ;
  G__G_StepBaseLN_TObject.tagnum = -1 ;
  G__G_StepBaseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G_StepBaseLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__G_StepBaseLN_string.tagnum = -1 ;
  G__G_StepBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G_StepBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_StepBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G_StepBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_StepBaseLN_ToyBoxB.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G_StepBaseLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G_StepBaseLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G_StepBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR.tagnum = -1 ;
  G__G_StepBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_StepBaseLN_AnaEventC.tagnum = -1 ;
  G__G_StepBaseLN_StepBase.tagnum = -1 ;
  G__G_StepBaseLN_StepBasecLcLTypeEnum.tagnum = -1 ;
  G__G_StepBaseLN_StepBasecLcLBranchStatus.tagnum = -1 ;
  G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR.tagnum = -1 ;
  G__G_StepBaseLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG_StepBase() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TClass);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TObject);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_string);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_ToyBoxB);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_AnaEventC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_StepBaseLN_StepBase),sizeof(StepBase),-1,292096,(char*)NULL,G__setup_memvarStepBase,G__setup_memfuncStepBase);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_StepBasecLcLTypeEnum);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_StepBasecLcLBranchStatus);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_StepBaseLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupG_StepBase(void) {
  G__check_setup_version(30051515,"G__cpp_setupG_StepBase()");
  G__set_cpp_environmentG_StepBase();
  G__cpp_setup_tagtableG_StepBase();

  G__cpp_setup_inheritanceG_StepBase();

  G__cpp_setup_typetableG_StepBase();

  G__cpp_setup_memvarG_StepBase();

  G__cpp_setup_memfuncG_StepBase();
  G__cpp_setup_globalG_StepBase();
  G__cpp_setup_funcG_StepBase();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG_StepBase();
  return;
}
class G__cpp_setup_initG_StepBase {
  public:
    G__cpp_setup_initG_StepBase() { G__add_setup_func("G_StepBase",(G__incsetup)(&G__cpp_setupG_StepBase)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG_StepBase() { G__remove_setup_func("G_StepBase"); }
};
G__cpp_setup_initG_StepBase G__cpp_setup_initializerG_StepBase;

