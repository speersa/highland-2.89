//
// File generated by /t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64//bin/rootcint at Thu Apr 20 02:08:33 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIt2kdIaspeersdIHighland_InstallsdIHighLAND_2dO89dIpsycheCore_3dO51dILinuxmICentOS_7mIgcc_4dO8mIx86_64dIdictdIG_TreeManager
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G_TreeManager.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TreeManager TreeManager;
      #else
      class TreeManager  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TreeManager() throw() {};
         ::TFile* _file; //
         vector< ::TTree* > _trees; //
         vector< ::TTree* > _trees_nonull; //
         vector< Int_t > _trees_indices; //
         int _current_tree; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TreeManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TreeManager_Dictionary();
   static void *new_TreeManager(void *p = 0);
   static void *newArray_TreeManager(Long_t size, void *p);
   static void delete_TreeManager(void *p);
   static void deleteArray_TreeManager(void *p);
   static void destruct_TreeManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeManager*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TreeManager) == sizeof( ::ROOTShadow::Shadow::TreeManager));
      ::TreeManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TreeManager),0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeManager", "/home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/inc/TreeManager.hxx", 16,
                  typeid(::TreeManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &TreeManager_ShowMembers, &TreeManager_Dictionary, isa_proxy, 4,
                  sizeof(::TreeManager) );
      instance.SetNew(&new_TreeManager);
      instance.SetNewArray(&newArray_TreeManager);
      instance.SetDelete(&delete_TreeManager);
      instance.SetDeleteArray(&deleteArray_TreeManager);
      instance.SetDestructor(&destruct_TreeManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeManager*)
   {
      return GenerateInitInstanceLocal((::TreeManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TreeManager_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TreeManager*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void TreeManager_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TreeManager.
      typedef ::ROOTShadow::Shadow::TreeManager ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeManager*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_file", &sobj->_file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trees", (void*)&sobj->_trees);
      R__insp.InspectMember("vector<TTree*>", (void*)&sobj->_trees, "_trees.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trees_nonull", (void*)&sobj->_trees_nonull);
      R__insp.InspectMember("vector<TTree*>", (void*)&sobj->_trees_nonull, "_trees_nonull.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trees_indices", (void*)&sobj->_trees_indices);
      R__insp.InspectMember("vector<Int_t>", (void*)&sobj->_trees_indices, "_trees_indices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_current_tree", &sobj->_current_tree);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeManager : new ::TreeManager;
   }
   static void *newArray_TreeManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeManager[nElements] : new ::TreeManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeManager(void *p) {
      delete ((::TreeManager*)p);
   }
   static void deleteArray_TreeManager(void *p) {
      delete [] ((::TreeManager*)p);
   }
   static void destruct_TreeManager(void *p) {
      typedef ::TreeManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeManager

namespace ROOTDict {
   void vectorlETTreemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETTreemUgR_Dictionary();
   static void *new_vectorlETTreemUgR(void *p = 0);
   static void *newArray_vectorlETTreemUgR(Long_t size, void *p);
   static void delete_vectorlETTreemUgR(void *p);
   static void deleteArray_vectorlETTreemUgR(void *p);
   static void destruct_vectorlETTreemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TTree*>*)
   {
      vector<TTree*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TTree*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TTree*>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TTree*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETTreemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TTree*>) );
      instance.SetNew(&new_vectorlETTreemUgR);
      instance.SetNewArray(&newArray_vectorlETTreemUgR);
      instance.SetDelete(&delete_vectorlETTreemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETTreemUgR);
      instance.SetDestructor(&destruct_vectorlETTreemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TTree*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TTree*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETTreemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TTree*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETTreemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TTree*> : new vector<TTree*>;
   }
   static void *newArray_vectorlETTreemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TTree*>[nElements] : new vector<TTree*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETTreemUgR(void *p) {
      delete ((vector<TTree*>*)p);
   }
   static void deleteArray_vectorlETTreemUgR(void *p) {
      delete [] ((vector<TTree*>*)p);
   }
   static void destruct_vectorlETTreemUgR(void *p) {
      typedef vector<TTree*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TTree*>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/t2k/Software/v12r25/ROOT/v5r34p34n00/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* /home/t2k/aspeers/Highland_Installs/HighLAND_2.89/psycheCore_3.51/Linux-CentOS_7-gcc_4.8-x86_64/dict/G_TreeManager.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG_TreeManager();

extern "C" void G__set_cpp_environmentG_TreeManager() {
  G__cpp_reset_tagtableG_TreeManager();
}
#include <new>
extern "C" int G__cpp_dllrevG_TreeManager() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TreeManager */
static int G__G_TreeManager_548_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeManager[n];
     } else {
       p = new((void*) gvp) TreeManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeManager;
     } else {
       p = new((void*) gvp) TreeManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_TreeManagerLN_TreeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TTree*>& obj = ((TreeManager*) G__getstructoffset())->GetTrees();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TreeManager*) G__getstructoffset())->GetTree((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TreeManager*) G__getstructoffset())->GetTree(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TreeManager*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeManager*) G__getstructoffset())->ReadTree(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeManager*) G__getstructoffset())->ReadTree(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeManager*) G__getstructoffset())->ReadFile(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeManager*) G__getstructoffset())->GetTreeIndex(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TreeManager*) G__getstructoffset())->GetTreeName((Int_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeManager*) G__getstructoffset())->GetCurrentTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TreeManager*) G__getstructoffset())->GetCurrentTreeName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeManager*) G__getstructoffset())->SetCurrentTree((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeManager*) G__getstructoffset())->SetCurrentTree(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TreeManager*) G__getstructoffset())->HasTree((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G_TreeManager_548_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TreeManager*) G__getstructoffset())->HasTree(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G_TreeManager_548_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeManager(*(TreeManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G_TreeManagerLN_TreeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeManager G__TTreeManager;
static int G__G_TreeManager_548_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeManager*) (soff+(sizeof(TreeManager)*i)))->~G__TTreeManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeManager*) (soff))->~G__TTreeManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G_TreeManager_548_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeManager* dest = (TreeManager*) G__getstructoffset();
   *dest = *(TreeManager*) libp->para[0].ref;
   const TreeManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TreeManager */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG_TreeManager {
 public:
  G__Sizep2memfuncG_TreeManager(): p(&G__Sizep2memfuncG_TreeManager::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG_TreeManager::*p)();
};

size_t G__get_sizep2memfuncG_TreeManager()
{
  G__Sizep2memfuncG_TreeManager a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG_TreeManager() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG_TreeManager() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G_TreeManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TTree*>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TreeManager */
static void G__setup_memvarTreeManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G_TreeManagerLN_TreeManager));
   { TreeManager *p; p=(TreeManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G_TreeManagerLN_TFile),-1,-1,2,"_file=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR),G__defined_typename("vector<TTree*>"),-1,2,"_trees=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR),G__defined_typename("vector<TTree*>"),-1,2,"_trees_nonull=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,2,"_trees_indices=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_current_tree=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG_TreeManager() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTreeManager(void) {
   /* TreeManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G_TreeManagerLN_TreeManager));
   G__memfunc_setup("TreeManager",1099,G__G_TreeManager_548_0_1, 105, G__get_linked_tagnum(&G__G_TreeManagerLN_TreeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrees",803,G__G_TreeManager_548_0_2, 117, G__get_linked_tagnum(&G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR), G__defined_typename("vector<TTree*>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G_TreeManager_548_0_3, 85, G__get_linked_tagnum(&G__G_TreeManagerLN_TTree), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G_TreeManager_548_0_4, 85, G__get_linked_tagnum(&G__G_TreeManagerLN_TTree), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G_TreeManager_548_0_5, 85, G__get_linked_tagnum(&G__G_TreeManagerLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTree",780,G__G_TreeManager_548_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - file i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTree",780,G__G_TreeManager_548_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - file u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__G_TreeManager_548_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeIndex",1192,G__G_TreeManager_548_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'string' - 11 - tree_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__G_TreeManager_548_0_10, 117, G__get_linked_tagnum(&G__G_TreeManagerLN_string), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentTree",1427,G__G_TreeManager_548_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentTreeName",1812,G__G_TreeManager_548_0_12, 117, G__get_linked_tagnum(&G__G_TreeManagerLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentTree",1439,G__G_TreeManager_548_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentTree",1439,G__G_TreeManager_548_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - tree_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasTree",684,G__G_TreeManager_548_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasTree",684,G__G_TreeManager_548_0_16, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - tree_name", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TreeManager", 1099, G__G_TreeManager_548_0_17, (int) ('i'), G__get_linked_tagnum(&G__G_TreeManagerLN_TreeManager), -1, 0, 1, 1, 1, 0, "u 'TreeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeManager", 1225, G__G_TreeManager_548_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G_TreeManager_548_0_19, (int) ('u'), G__get_linked_tagnum(&G__G_TreeManagerLN_TreeManager), -1, 1, 1, 1, 1, 0, "u 'TreeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG_TreeManager() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG_TreeManager() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG_TreeManager() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G_TreeManagerLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G_TreeManagerLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_TreeManager = { "TreeManager" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR = { "vector<TTree*,allocator<TTree*> >" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TTree*,allocator<TTree*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G_TreeManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG_TreeManager() {
  G__G_TreeManagerLN_string.tagnum = -1 ;
  G__G_TreeManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G_TreeManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_TreeManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G_TreeManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G_TreeManagerLN_TFile.tagnum = -1 ;
  G__G_TreeManagerLN_TTree.tagnum = -1 ;
  G__G_TreeManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G_TreeManagerLN_TreeManager.tagnum = -1 ;
  G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR.tagnum = -1 ;
  G__G_TreeManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G_TreeManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG_TreeManager() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_string);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_TFile);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_TTree);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_TreeManager),sizeof(TreeManager),-1,263424,(char*)NULL,G__setup_memvarTreeManager,G__setup_memfuncTreeManager);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_vectorlETTreemUcOallocatorlETTreemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_reverse_iteratorlEvectorlETTreemUcOallocatorlETTreemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G_TreeManagerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupG_TreeManager(void) {
  G__check_setup_version(30051515,"G__cpp_setupG_TreeManager()");
  G__set_cpp_environmentG_TreeManager();
  G__cpp_setup_tagtableG_TreeManager();

  G__cpp_setup_inheritanceG_TreeManager();

  G__cpp_setup_typetableG_TreeManager();

  G__cpp_setup_memvarG_TreeManager();

  G__cpp_setup_memfuncG_TreeManager();
  G__cpp_setup_globalG_TreeManager();
  G__cpp_setup_funcG_TreeManager();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG_TreeManager();
  return;
}
class G__cpp_setup_initG_TreeManager {
  public:
    G__cpp_setup_initG_TreeManager() { G__add_setup_func("G_TreeManager",(G__incsetup)(&G__cpp_setupG_TreeManager)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG_TreeManager() { G__remove_setup_func("G_TreeManager"); }
};
G__cpp_setup_initG_TreeManager G__cpp_setup_initializerG_TreeManager;

